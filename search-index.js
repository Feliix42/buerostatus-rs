var searchIndex = {};
searchIndex["buerostatus"] = {"doc":"This crate is a small wrapper around the [buerostatus](https://github.com/fsr/buerostatus) API\nof the [@fsr](https://github.com/fsr) that tells you whether someone is in our office or not.","items":[[4,"ApiError","buerostatus","A set of errors that may occur during the API call.",null,null],[13,"Network","","An error originating from the `reqwest` crate such as &quot;No Internet connection&quot;.",0,null],[13,"StatusNotOk","","The Return Code of the website is not _200_.",0,null],[13,"WrongMessage","","The API call delivered a wrong message.",0,null],[5,"get_buerostatus","","Gets the buerostatus from ifsr.de.",null,{"inputs":[],"output":{"name":"result"}}],[11,"fmt","","",0,null]],"paths":[[4,"ApiError"]]};
searchIndex["reqwest"] = {"doc":"# reqwest","items":[[8,"IntoUrl","reqwest","A helper trait to convert common objects into a Url.",null,null],[10,"into_url","","Consumes the object, trying to return a Url.",0,null],[4,"HyperError","","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",1,null],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",1,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",1,null],[13,"Header","","An invalid `Header`.",1,null],[13,"TooLarge","","A message head is too large to be reasonable.",1,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",1,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",1,null],[13,"Ssl","","An error from a SSL library.",1,null],[13,"Utf8","","Parsing a field as string failed",1,null],[0,"header","","Headers container, and common header fields.",null,null],[0,"parsing","reqwest::header","Utility functions for Header implementations.",null,null],[5,"from_one_raw_str","reqwest::header::parsing","Reads a single raw string when parsing a header.",null,null],[5,"from_raw_str","","Reads a raw string into a value.",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,null],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[3,"ExtendedValue","","An extended header parameter value (i.e., tagged with a character set and optionally,\na language), as defined in [RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,null],[12,"charset","","The character set that is used to encode the `value` to a string.",2,null],[12,"language_tag","","The human language details of the `value`, if available.",2,null],[12,"value","","The parameter value, as expressed in octets.",2,null],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as defined in\n[RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[3,"HTTP_VALUE","","This encode set is used for HTTP header values and is defined at\nhttps://tools.ietf.org/html/rfc5987#section-3.2",null,null],[8,"Header","reqwest::header","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",3,{"inputs":[],"output":{"name":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",3,null],[8,"HeaderFormat","","A trait for any object that will represent a header field and value.",null,null],[10,"fmt_header","","Format a header to be output into a TcpStream.",4,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header.",null,null],[12,"0","","",5,null],[3,"ContentType","","`Content-Type` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.1.5)",null,null],[12,"0","","",6,null],[3,"Expires","","`Expires` header, defined in [RFC7234](http://tools.ietf.org/html/rfc7234#section-5.3)",null,null],[12,"0","","",7,null],[4,"ContentRangeSpec","","Content-Range, described in [RFC7233](https://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[13,"Bytes","","Byte range",8,null],[12,"range","reqwest::header::ContentRangeSpec","First and last bytes of the range, omitted if request could not be\nsatisfied",8,null],[12,"instance_length","","Total length of the instance, can be omitted if unknown",8,null],[13,"Unregistered","reqwest::header","Custom range, with unit not registered at IANA",8,null],[12,"unit","reqwest::header::ContentRangeSpec","other-range-unit",8,null],[12,"resp","","other-range-resp",8,null],[3,"Authorization","reqwest::header","`Authorization` header, defined in [RFC7235](https://tools.ietf.org/html/rfc7235#section-4.2)",null,null],[12,"0","","",9,null],[3,"From","","`From` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.1)",null,null],[12,"0","","",10,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/#access-control-allow-origin-response-header)",null,null],[13,"Any","","Allow all origins",11,null],[13,"Null","","A hidden origin",11,null],[13,"Value","","Allow one particular origin",11,null],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",null,null],[12,"0","","",12,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-2.3)",null,null],[12,"0","","",13,null],[3,"PreferenceApplied","","`Preference-Applied` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",14,null],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.1)",null,null],[12,"0","","",15,null],[3,"Location","","`Location` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.2)",null,null],[12,"0","","",16,null],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",null,null],[13,"NoCache","","&quot;no-cache&quot;",17,null],[13,"NoStore","","&quot;no-store&quot;",17,null],[13,"NoTransform","","&quot;no-transform&quot;",17,null],[13,"OnlyIfCached","","&quot;only-if-cached&quot;",17,null],[13,"MaxAge","","&quot;max-age=delta&quot;",17,null],[13,"MaxStale","","&quot;max-stale=delta&quot;",17,null],[13,"MinFresh","","&quot;min-fresh=delta&quot;",17,null],[13,"MustRevalidate","","&quot;must-revalidate&quot;",17,null],[13,"Public","","&quot;public&quot;",17,null],[13,"Private","","&quot;private&quot;",17,null],[13,"ProxyRevalidate","","&quot;proxy-revalidate&quot;",17,null],[13,"SMaxAge","","&quot;s-maxage=delta&quot;",17,null],[13,"Extension","","Extension directives. Optionally include an argument.",17,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",18,null],[13,"Ext","","Every value other than `no-cache`.",18,null],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names are case-sensitive\nexcept for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",19,null],[13,"Tls","","`TLS` value, Transport Layer Security [RFC2817](http://tools.ietf.org/html/rfc2817)",19,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol\n[RFC6455](http://tools.ietf.org/html/rfc6455)",19,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",19,null],[13,"Unregistered","","Any other protocol name not known to hyper",19,null],[3,"LastModified","","`Last-Modified` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-2.2)",null,null],[12,"0","","",20,null],[3,"Prefer","","`Prefer` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",21,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",22,null],[13,"Gzip","","The `gzip` encoding.",22,null],[13,"Deflate","","The `deflate` encoding.",22,null],[13,"Compress","","The `compress` encoding.",22,null],[13,"Identity","","The `identity` encoding.",22,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",22,null],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in [RFC6797](https://tools.ietf.org/html/rfc6797)",null,null],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS Host as well as\nany subdomains of the host&#39;s domain name.",23,null],[12,"max_age","","Specifies the number of seconds, after the reception of the STS header\nfield, during which the UA regards the host (from whom the message was\nreceived) as a Known HSTS Host.",23,null],[3,"ContentRange","","`Content-Range` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[12,"0","","",24,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.2.2)",null,null],[12,"0","","",25,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-methods-response-header)",null,null],[12,"0","","",26,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.2)",null,null],[13,"Any","","Any value is a match",27,null],[13,"Items","","Only the listed items are a match",27,null],[5,"q","","Convenience function to create a `Quality` from a float.",null,{"inputs":[{"name":"f32"}],"output":{"name":"quality"}}],[4,"Range","","`Range` header, defined in [RFC7233](https://tools.ietf.org/html/rfc7233#section-3.1)",null,null],[13,"Bytes","","Byte range",28,null],[13,"Unregistered","","Custom range, with unit not registered at IANA\n(`other-range-unit`: String , `other-range-set`: String)",28,null],[3,"Origin","","The `Origin` header.",null,null],[12,"scheme","","The scheme, such as http or https",29,null],[12,"host","","The host, such as Host{hostname: &quot;hyper.rs&quot;.to_owned(), port: None}",29,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[12,"0","","",30,null],[4,"IfMatch","","`If-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.1)",null,null],[13,"Any","","Any value is a match",31,null],[13,"Items","","Only the listed items are a match",31,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.5)",null,null],[12,"0","","",32,null],[3,"EntityTag","","An entity tag, defined in [RFC7232](https://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"weak","","Weakness indicator for the tag",33,null],[3,"SetCookie","","`Set-Cookie` header, defined [RFC6265](http://tools.ietf.org/html/rfc6265#section-4.1)",null,null],[12,"0","","",34,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.3)",null,null],[12,"0","","",35,null],[4,"DispositionParam","","A parameter to the disposition type",null,null],[13,"Filename","","A Filename consisting of a Charset, an optional LanguageTag, and finally a sequence of\nbytes representing the filename",36,null],[13,"Ext","","Extension type consisting of token and value.  Recipients should ignore unrecognized\nparameters.",36,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.4)",null,null],[12,"0","","",37,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",38,null],[12,"version","","The optional version of the protocol, often in the format &quot;DIGIT.DIGIT&quot; (e.g.. &quot;1.2&quot;)",38,null],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1).",null,null],[12,"item","","The actual contents of the field.",39,null],[12,"quality","","The quality (client or server preference) for the value.",39,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.4)",null,null],[12,"0","","",40,null],[3,"Accept","","`Accept` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.2)",null,null],[12,"0","","",41,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",42,null],[13,"Close","","The `close` connection value.",42,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",42,null],[3,"Connection","","`Connection` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-6.1)",null,null],[12,"0","","",43,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-method-request-header)",null,null],[12,"0","","",44,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",45,null],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",45,null],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[3,"CacheControl","","`Cache-Control` header, defined in [RFC7234](https://tools.ietf.org/html/rfc7234#section-5.2)",null,null],[12,"0","","",46,null],[4,"RangeUnit","","Range Units, described in [RFC7233](http://tools.ietf.org/html/rfc7233#section-2)",null,null],[13,"Bytes","","Indicating byte-range requests are supported.",47,null],[13,"None","","Reserved as keyword, indicating no ranges are supported.",47,null],[13,"Unregistered","","The given range unit is not registered at IANA.",47,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[12,"0","","",48,null],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of\n[Referrer Policy](https://www.w3.org/TR/referrer-policy/#referrer-policy-header)",null,null],[13,"NoReferrer","","`no-referrer`",49,null],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",49,null],[13,"SameOrigin","","`same-origin`",49,null],[13,"Origin","","`origin`",49,null],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",49,null],[13,"UnsafeUrl","","`unsafe-url`",49,null],[13,"StrictOrigin","","`strict-origin`",49,null],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",49,null],[8,"Scheme","","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",50,{"inputs":[],"output":{"name":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",50,null],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more `ByteRangeSpecs`.\nEach `ByteRangeSpec` defines a range of bytes to fetch",null,null],[13,"FromTo","","Get all bytes between x and y (&quot;x-y&quot;)",51,null],[13,"AllFrom","","Get all bytes starting from x (&quot;x-&quot;)",51,null],[13,"Last","","Get last x bytes (&quot;-x&quot;)",51,null],[4,"DispositionType","","The implied disposition of the content of the HTTP body",null,null],[13,"Inline","","Inline implies default processing",52,null],[13,"Attachment","","Attachment implies that the recipient should prompt the user to save the response locally,\nrather than process it normally (as per its media type).",52,null],[13,"Ext","","Extension type.  Should be handled by recipients the same way as Attachment",52,null],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in [RFC6266](https://tools.ietf.org/html/rfc6266)",null,null],[12,"disposition","","The disposition",53,null],[12,"parameters","","Disposition parameters",53,null],[4,"Preference","","Prefer contains a list of these preferences.",null,null],[13,"RespondAsync","","&quot;respond-async&quot;",54,null],[13,"ReturnRepresentation","","&quot;return=representation&quot;",54,null],[13,"ReturnMinimal","","&quot;return=minimal&quot;",54,null],[13,"HandlingStrict","","&quot;handling=strict&quot;",54,null],[13,"HandlingLeniant","","&quot;handling=leniant&quot;",54,null],[13,"Wait","","&quot;wait=delta&quot;",54,null],[13,"Extension","","Extension preferences. Always has a value, if none is specified it is\njust &quot;&quot;. A preference can also have a list of parameters.",54,null],[3,"Referer","","`Referer` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.2)",null,null],[12,"0","","",55,null],[4,"Vary","","`Vary` header, defined in [RFC7231](https://tools.ietf.org/html/rfc7231#section-7.1.4)",null,null],[13,"Any","","Any value is a match",56,null],[13,"Items","","Only the listed items are a match",56,null],[4,"Expect","","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",57,null],[3,"Host","","The `Host` header.",null,null],[12,"hostname","","The hostname, such a example.domain.",58,null],[12,"port","","An optional port number.",58,null],[3,"ETag","","`ETag` header, defined in [RFC7232](http://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"0","","",59,null],[3,"ContentLength","","`Content-Length` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.2)",null,null],[12,"0","","",60,null],[3,"Upgrade","","`Upgrade` header, defined in [RFC7230](http://tools.ietf.org/html/rfc7230#section-6.7)",null,null],[12,"0","","",61,null],[3,"Server","","`Server` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.2)",null,null],[12,"0","","",62,null],[3,"Cookie","","`Cookie` header, defined in [RFC6265](http://tools.ietf.org/html/rfc6265#section-5.4)",null,null],[12,"0","","",63,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-headers-request-header)",null,null],[12,"0","","",64,null],[3,"ContentLanguage","","`Content-Language` header, defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-3.1.3.2)",null,null],[12,"0","","",65,null],[3,"Date","","`Date` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.1.2)",null,null],[12,"0","","",66,null],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-expose-headers-response-header)",null,null],[12,"0","","",67,null],[4,"IfRange","","`If-Range` header, defined in [RFC7233](http://tools.ietf.org/html/rfc7233#section-3.2)",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",68,null],[13,"Date","","The date when the client retrieved the resource",68,null],[3,"Bearer","","Token holder for Bearer Authentication, most often seen with oauth",null,null],[12,"token","","Actual bearer token as a string",69,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",70,null],[13,"Iso_8859_1","","ISO-8859-1",70,null],[13,"Iso_8859_2","","ISO-8859-2",70,null],[13,"Iso_8859_3","","ISO-8859-3",70,null],[13,"Iso_8859_4","","ISO-8859-4",70,null],[13,"Iso_8859_5","","ISO-8859-5",70,null],[13,"Iso_8859_6","","ISO-8859-6",70,null],[13,"Iso_8859_7","","ISO-8859-7",70,null],[13,"Iso_8859_8","","ISO-8859-8",70,null],[13,"Iso_8859_9","","ISO-8859-9",70,null],[13,"Iso_8859_10","","ISO-8859-10",70,null],[13,"Shift_Jis","","Shift_JIS",70,null],[13,"Euc_Jp","","EUC-JP",70,null],[13,"Iso_2022_Kr","","ISO-2022-KR",70,null],[13,"Euc_Kr","","EUC-KR",70,null],[13,"Iso_2022_Jp","","ISO-2022-JP",70,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",70,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",70,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",70,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",70,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",70,null],[13,"Gb2312","","GB2312",70,null],[13,"Big5","","Big5",70,null],[13,"Koi8_R","","KOI8-R",70,null],[13,"Ext","","An arbitrary charset specified as a string",70,null],[3,"UserAgent","","`User-Agent` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.3)",null,null],[12,"0","","",71,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-max-age-response-header)",null,null],[12,"0","","",72,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.3)",null,null],[12,"0","","",73,null],[3,"Allow","","`Allow` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.1)",null,null],[12,"0","","",74,null],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0",null,{"inputs":[{"name":"t"}],"output":{"name":"qualityitem"}}],[4,"Method","reqwest","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",75,null],[13,"Get","","GET",75,null],[13,"Post","","POST",75,null],[13,"Put","","PUT",75,null],[13,"Delete","","DELETE",75,null],[13,"Head","","HEAD",75,null],[13,"Trace","","TRACE",75,null],[13,"Connect","","CONNECT",75,null],[13,"Patch","","PATCH",75,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(&quot;FOO&quot;.to_string())`.",75,null],[4,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",76,null],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",76,null],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",76,null],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",76,null],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",76,null],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",76,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",76,null],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",76,null],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",76,null],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",76,null],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",76,null],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",76,null],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",76,null],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",76,null],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",76,null],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",76,null],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",76,null],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",76,null],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",76,null],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",76,null],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",76,null],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",76,null],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",76,null],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",76,null],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",76,null],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",76,null],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",76,null],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",76,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",76,null],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",76,null],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",76,null],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",76,null],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",76,null],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",76,null],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",76,null],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",76,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",76,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",76,null],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",76,null],[13,"ImATeapot","","418 I&#39;m a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",76,null],[13,"MisdirectedRequest","","421 Misdirected Request\n[RFC7540, Section 9.1.2](http://tools.ietf.org/html/rfc7540#section-9.1.2)",76,null],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",76,null],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",76,null],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",76,null],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",76,null],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",76,null],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",76,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",76,null],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons\n[[RFC7725](http://tools.ietf.org/html/rfc7725)]",76,null],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",76,null],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",76,null],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",76,null],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",76,null],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",76,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",76,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",76,null],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",76,null],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",76,null],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",76,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",76,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",76,null],[4,"HttpVersion","","Represents a version of the HTTP spec.",null,null],[13,"Http09","","`HTTP/0.9`",77,null],[13,"Http10","","`HTTP/1.0`",77,null],[13,"Http11","","`HTTP/1.1`",77,null],[13,"Http20","","`HTTP/2.0`",77,null],[3,"Url","","A parsed URL record.",null,null],[4,"UrlError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",78,null],[13,"IdnaError","","",78,null],[13,"InvalidPort","","",78,null],[13,"InvalidIpv4Address","","",78,null],[13,"InvalidIpv6Address","","",78,null],[13,"InvalidDomainCharacter","","",78,null],[13,"RelativeUrlWithoutBase","","",78,null],[13,"RelativeUrlWithCannotBeABaseBase","","",78,null],[13,"SetHostOnCannotBeABaseUrl","","",78,null],[13,"Overflow","","",78,null],[3,"Client","","A `Client` to make Requests with.",null,null],[3,"Response","","A Response to a submitted `Request`.",null,null],[3,"RequestBuilder","","A builder to construct the properties of a `Request`.",null,null],[3,"Body","","Body type for a request.",null,null],[3,"RedirectPolicy","","A type that controls the policy on how to handle the following of redirects.",null,null],[4,"Error","","The Errors that may occur when processing a `Request`.",null,null],[13,"Http","","An HTTP error from the `hyper` crate.",79,null],[13,"Serialize","","An error trying to serialize a value.",79,null],[13,"TooManyRedirects","","A request tried to redirect too many times.",79,null],[13,"RedirectLoop","","An infinite redirect loop was detected.",79,null],[5,"get","","Shortcut method to quickly make a `GET` request.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"fmt","","",80,null],[11,"new","","Instantiate a `Body` from a reader.",80,{"inputs":[{"name":"r"}],"output":{"name":"body"}}],[11,"from","","",80,{"inputs":[{"name":"vec"}],"output":{"name":"body"}}],[11,"from","","",80,{"inputs":[{"name":"string"}],"output":{"name":"body"}}],[11,"from","","",80,null],[11,"from","","",80,{"inputs":[{"name":"str"}],"output":{"name":"body"}}],[11,"from","","",80,{"inputs":[{"name":"file"}],"output":{"name":"body"}}],[11,"new","","Constructs a new `Client`.",81,{"inputs":[],"output":{"name":"result"}}],[11,"redirect","","Set a `RedirectPolicy` for this client.",81,null],[11,"get","","Convenience method to make a `GET` request to a URL.",81,null],[11,"post","","Convenience method to make a `POST` request to a URL.",81,null],[11,"head","","Convenience method to make a `HEAD` request to a URL.",81,null],[11,"request","","Start building a `Request` with the `Method` and `Url`.",81,null],[11,"fmt","","",81,null],[11,"header","","Add a `Header` to this Request.",82,null],[11,"headers","","Add a set of Headers to the existing ones on this Request.",82,null],[11,"body","","Set the request body.",82,null],[11,"form","","Send a form body.",82,null],[11,"json","","Send a JSON body.",82,null],[11,"send","","Constructs the Request and sends it the target URL, returning a Response.",82,null],[11,"fmt","","",82,null],[11,"status","","Get the `StatusCode`.",83,null],[11,"headers","","Get the `Headers`.",83,null],[11,"version","","Get the `HttpVersion`.",83,null],[11,"json","","Try and deserialize the response body as JSON.",83,null],[11,"read","","",83,null],[11,"fmt","","",83,null],[11,"fmt","","",79,null],[11,"fmt","","",79,null],[11,"description","","",79,null],[11,"cause","","",79,null],[11,"from","","",79,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",79,{"inputs":[{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",79,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",79,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",84,null],[11,"limited","","Create a RedirectPolicy with a maximum number of redirects.",84,{"inputs":[{"name":"usize"}],"output":{"name":"redirectpolicy"}}],[11,"none","","Create a RedirectPolicy that does not follow any redirect.",84,{"inputs":[],"output":{"name":"redirectpolicy"}}],[11,"custom","","Create a custom RedirectPolicy using the passed function.",84,{"inputs":[{"name":"t"}],"output":{"name":"redirectpolicy"}}],[11,"default","","",84,{"inputs":[],"output":{"name":"redirectpolicy"}}],[6,"Result","","A `Result` alias where the `Err` case is `reqwest::Error`.",null,null],[11,"partial_cmp","","",85,null],[11,"description","","",78,null],[11,"from_str","","",85,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"index","","",85,null],[11,"index","","",85,null],[11,"index","","",85,null],[11,"index","","",85,null],[11,"eq","","",85,null],[11,"eq","","",78,null],[11,"fmt","","",85,null],[11,"fmt","","",78,null],[11,"to_socket_addrs","","",85,null],[11,"fmt","","",78,null],[11,"fmt","","",85,null],[11,"as_ref","","",85,null],[11,"from","","",78,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"cmp","","",85,null],[11,"clone","","",78,null],[11,"clone","","",85,null],[11,"hash","","",85,null],[11,"from_iter","reqwest::header","",86,{"inputs":[{"name":"i"}],"output":{"name":"headers"}}],[11,"scheme","","",45,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",45,null],[11,"scheme","","",69,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",69,null],[11,"extend","","",86,null],[11,"clone","reqwest","",76,null],[11,"clone","","",75,null],[11,"clone","reqwest::header","",41,null],[11,"clone","","",87,null],[11,"clone","","",48,null],[11,"clone","","",26,null],[11,"clone","","",11,null],[11,"clone","","",67,null],[11,"clone","","",72,null],[11,"clone","","",64,null],[11,"clone","","",44,null],[11,"clone","","",35,null],[11,"clone","","",37,null],[11,"clone","","",32,null],[11,"clone","","",13,null],[11,"clone","","",47,null],[11,"clone","","",74,null],[11,"clone","","",9,null],[11,"clone","","",45,null],[11,"clone","","",69,null],[11,"clone","","",46,null],[11,"clone","","",17,null],[11,"clone","","",63,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",52,null],[11,"clone","","",36,null],[11,"clone","","",53,null],[11,"clone","","",25,null],[11,"clone","","",65,null],[11,"clone","","",60,null],[11,"clone","","",24,null],[11,"clone","","",8,null],[11,"clone","","",6,null],[11,"clone","","",66,null],[11,"clone","","",59,null],[11,"clone","","",57,null],[11,"clone","","",7,null],[11,"clone","","",10,null],[11,"clone","","",58,null],[11,"clone","","",31,null],[11,"clone","","",73,null],[11,"clone","","",27,null],[11,"clone","","",68,null],[11,"clone","","",40,null],[11,"clone","","",20,null],[11,"clone","","",16,null],[11,"clone","","",29,null],[11,"clone","","",18,null],[11,"clone","","",21,null],[11,"clone","","",54,null],[11,"clone","","",14,null],[11,"clone","","",28,null],[11,"clone","","",51,null],[11,"clone","","",55,null],[11,"clone","","",49,null],[11,"clone","","",62,null],[11,"clone","","",34,null],[11,"clone","","",23,null],[11,"clone","","",15,null],[11,"clone","","",61,null],[11,"clone","","",19,null],[11,"clone","","",38,null],[11,"clone","","",71,null],[11,"clone","","",56,null],[11,"clone","","",70,null],[11,"clone","","",22,null],[11,"clone","","",33,null],[11,"clone","","",12,null],[11,"clone","","",30,null],[11,"clone","","",39,null],[11,"clone","reqwest::header::parsing","",2,null],[11,"clone","","",88,null],[11,"clone","reqwest::header","",86,null],[11,"clone","reqwest","",77,null],[11,"next","reqwest::header","",89,null],[11,"cmp","reqwest","",76,null],[11,"cmp","reqwest::header","",12,null],[11,"cmp","","",30,null],[11,"cmp","reqwest","",77,null],[11,"hash","","",75,null],[11,"hash","","",76,null],[11,"hash","","",77,null],[11,"deref_mut","reqwest::header","",9,null],[11,"deref_mut","","",41,null],[11,"deref_mut","","",48,null],[11,"deref_mut","","",26,null],[11,"deref_mut","","",67,null],[11,"deref_mut","","",72,null],[11,"deref_mut","","",64,null],[11,"deref_mut","","",44,null],[11,"deref_mut","","",35,null],[11,"deref_mut","","",37,null],[11,"deref_mut","","",32,null],[11,"deref_mut","","",13,null],[11,"deref_mut","","",74,null],[11,"deref_mut","","",46,null],[11,"deref_mut","","",63,null],[11,"deref_mut","","",43,null],[11,"deref_mut","","",25,null],[11,"deref_mut","","",65,null],[11,"deref_mut","","",60,null],[11,"deref_mut","","",24,null],[11,"deref_mut","","",6,null],[11,"deref_mut","","",66,null],[11,"deref_mut","","",59,null],[11,"deref_mut","","",7,null],[11,"deref_mut","","",10,null],[11,"deref_mut","","",73,null],[11,"deref_mut","","",40,null],[11,"deref_mut","","",20,null],[11,"deref_mut","","",16,null],[11,"deref_mut","","",21,null],[11,"deref_mut","","",14,null],[11,"deref_mut","","",55,null],[11,"deref_mut","","",62,null],[11,"deref_mut","","",34,null],[11,"deref_mut","","",15,null],[11,"deref_mut","","",61,null],[11,"deref_mut","","",71,null],[11,"description","reqwest","",1,null],[11,"cause","","",1,null],[11,"fmt_header","reqwest::header","",87,null],[11,"fmt_header","","",11,null],[11,"fmt_header","","",9,null],[11,"fmt_header","","",46,null],[11,"fmt_header","","",63,null],[11,"fmt_header","","",53,null],[11,"fmt_header","","",60,null],[11,"fmt_header","","",57,null],[11,"fmt_header","","",58,null],[11,"fmt_header","","",68,null],[11,"fmt_header","","",29,null],[11,"fmt_header","","",18,null],[11,"fmt_header","","",21,null],[11,"fmt_header","","",14,null],[11,"fmt_header","","",28,null],[11,"fmt_header","","",49,null],[11,"fmt_header","","",34,null],[11,"fmt_multi_header","","",34,null],[11,"fmt_header","","",23,null],[11,"fmt_header","","",41,null],[11,"fmt_header","","",48,null],[11,"fmt_header","","",26,null],[11,"fmt_header","","",67,null],[11,"fmt_header","","",72,null],[11,"fmt_header","","",64,null],[11,"fmt_header","","",44,null],[11,"fmt_header","","",35,null],[11,"fmt_header","","",37,null],[11,"fmt_header","","",32,null],[11,"fmt_header","","",13,null],[11,"fmt_header","","",74,null],[11,"fmt_header","","",43,null],[11,"fmt_header","","",25,null],[11,"fmt_header","","",65,null],[11,"fmt_header","","",24,null],[11,"fmt_header","","",6,null],[11,"fmt_header","","",66,null],[11,"fmt_header","","",59,null],[11,"fmt_header","","",7,null],[11,"fmt_header","","",10,null],[11,"fmt_header","","",31,null],[11,"fmt_header","","",73,null],[11,"fmt_header","","",27,null],[11,"fmt_header","","",40,null],[11,"fmt_header","","",20,null],[11,"fmt_header","","",16,null],[11,"fmt_header","","",55,null],[11,"fmt_header","","",62,null],[11,"fmt_header","","",15,null],[11,"fmt_header","","",61,null],[11,"fmt_header","","",71,null],[11,"fmt_header","","",56,null],[11,"partial_cmp","","",39,null],[11,"partial_cmp","reqwest","",76,null],[11,"partial_cmp","reqwest::header","",12,null],[11,"lt","","",12,null],[11,"le","","",12,null],[11,"gt","","",12,null],[11,"ge","","",12,null],[11,"partial_cmp","","",30,null],[11,"lt","","",30,null],[11,"le","","",30,null],[11,"gt","","",30,null],[11,"ge","","",30,null],[11,"partial_cmp","reqwest","",77,null],[11,"default","reqwest::header","",30,{"inputs":[],"output":{"name":"quality"}}],[11,"from_str","reqwest","",75,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","reqwest::header","",47,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",45,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",69,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",17,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",42,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",58,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",29,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",54,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",28,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",51,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",23,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",19,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",38,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",70,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",22,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",33,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",12,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",39,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",29,null],[11,"eq","","",86,null],[11,"eq","reqwest","",76,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"eq","reqwest::header","",41,null],[11,"ne","","",41,null],[11,"eq","","",87,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"eq","","",60,null],[11,"ne","","",60,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"eq","","",57,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"eq","","",54,null],[11,"ne","","",54,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"eq","","",49,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"eq","reqwest::header::parsing","",2,null],[11,"ne","","",2,null],[11,"eq","reqwest","",77,null],[11,"deref","reqwest::header","",9,null],[11,"deref","","",41,null],[11,"deref","","",48,null],[11,"deref","","",26,null],[11,"deref","","",67,null],[11,"deref","","",72,null],[11,"deref","","",64,null],[11,"safe","reqwest","Whether a method is considered &quot;safe&quot;, meaning the request is\nessentially read-only.",75,null],[11,"idempotent","","Whether a method is considered &quot;idempotent&quot;, meaning the request has\nthe same result is executed multiple times.",75,null],[11,"deref","reqwest::header","",44,null],[11,"deref","","",35,null],[11,"deref","","",37,null],[11,"deref","","",32,null],[11,"deref","","",13,null],[11,"deref","","",74,null],[11,"deref","","",46,null],[11,"deref","","",63,null],[11,"deref","","",43,null],[11,"deref","","",25,null],[11,"deref","","",65,null],[11,"deref","","",60,null],[11,"deref","","",24,null],[11,"deref","","",6,null],[11,"deref","","",66,null],[11,"new","","Constructs a new EntityTag.\n# Panics\nIf the tag contains invalid characters.",33,{"inputs":[{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"weak","","Constructs a new weak EntityTag.\n# Panics\nIf the tag contains invalid characters.",33,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"strong","","Constructs a new strong EntityTag.\n# Panics\nIf the tag contains invalid characters.",33,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",33,null],[11,"set_tag","","Set the tag.\n# Panics\nIf the tag contains invalid characters.",33,null],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their\nopaque-tags match character-by-character.",33,null],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their\nopaque-tags match character-by-character, regardless of either or\nboth being tagged as &quot;weak&quot;.",33,null],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",33,null],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",33,null],[11,"deref","","",59,null],[11,"deref","","",7,null],[11,"deref","","",10,null],[11,"deref","","",73,null],[11,"deref","","",40,null],[11,"deref","","",20,null],[11,"deref","","",16,null],[11,"deref","","",21,null],[11,"deref","","",14,null],[11,"deref","","",55,null],[11,"deref","","",62,null],[11,"deref","","",34,null],[11,"deref","","",15,null],[11,"deref","","",61,null],[11,"deref","","",71,null],[11,"header_name","","",87,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",87,null],[11,"header_name","","",11,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",11,null],[11,"header_name","","",9,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",9,null],[11,"header_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",46,null],[11,"header_name","","",63,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",63,null],[11,"header_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",53,null],[11,"header_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",60,null],[11,"header_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",57,null],[11,"header_name","","",58,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",58,null],[11,"header_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",68,null],[11,"header_name","","",29,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",29,null],[11,"header_name","","",18,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",18,null],[11,"header_name","","",21,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",21,null],[11,"header_name","","",14,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",14,null],[11,"header_name","","",28,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",28,null],[11,"header_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",49,null],[11,"header_name","","",34,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",34,null],[11,"header_name","","",23,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",23,null],[11,"header_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",41,null],[11,"header_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",48,null],[11,"header_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",26,null],[11,"header_name","","",67,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",67,null],[11,"header_name","","",72,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",72,null],[11,"header_name","","",64,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",64,null],[11,"header_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",44,null],[11,"header_name","","",35,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",35,null],[11,"header_name","","",37,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",37,null],[11,"header_name","","",32,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",32,null],[11,"header_name","","",13,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",13,null],[11,"header_name","","",74,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",74,null],[11,"header_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",43,null],[11,"header_name","","",25,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",25,null],[11,"header_name","","",65,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",65,null],[11,"header_name","","",24,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",24,null],[11,"header_name","","",6,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",6,null],[11,"header_name","","",66,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",66,null],[11,"header_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",59,null],[11,"header_name","","",7,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",7,null],[11,"header_name","","",10,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",10,null],[11,"header_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",31,null],[11,"header_name","","",73,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",73,null],[11,"header_name","","",27,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",27,null],[11,"header_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",40,null],[11,"header_name","","",20,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",20,null],[11,"header_name","","",16,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",16,null],[11,"header_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",55,null],[11,"header_name","","",62,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",62,null],[11,"header_name","","",15,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",15,null],[11,"header_name","","",61,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",61,null],[11,"header_name","","",71,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",71,null],[11,"header_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",56,null],[11,"fmt","","",86,null],[11,"fmt","","",90,null],[11,"fmt","","",5,null],[11,"fmt","reqwest","",1,null],[11,"fmt","","",75,null],[11,"fmt","reqwest::header","",41,null],[11,"fmt","","",87,null],[11,"fmt","","",48,null],[11,"fmt","","",26,null],[11,"fmt","","",11,null],[11,"fmt","","",67,null],[11,"fmt","","",72,null],[11,"fmt","","",64,null],[11,"fmt","","",44,null],[11,"fmt","","",35,null],[11,"fmt","","",37,null],[11,"fmt","","",32,null],[11,"fmt","","",13,null],[11,"fmt","","",47,null],[11,"fmt","","",74,null],[11,"fmt","","",9,null],[11,"fmt","","",45,null],[11,"fmt","","",69,null],[11,"fmt","","",46,null],[11,"fmt","","",17,null],[11,"fmt","","",63,null],[11,"fmt","","",42,null],[11,"fmt","","",43,null],[11,"fmt","","",52,null],[11,"fmt","","",36,null],[11,"fmt","","",53,null],[11,"fmt","","",25,null],[11,"fmt","","",65,null],[11,"fmt","","",60,null],[11,"fmt","","",24,null],[11,"fmt","","",8,null],[11,"fmt","","",6,null],[11,"fmt","","",66,null],[11,"fmt","","",59,null],[11,"fmt","","",57,null],[11,"fmt","","",7,null],[11,"fmt","","",10,null],[11,"fmt","","",58,null],[11,"fmt","","",31,null],[11,"fmt","","",73,null],[11,"fmt","","",27,null],[11,"fmt","","",68,null],[11,"fmt","","",40,null],[11,"fmt","","",20,null],[11,"fmt","","",16,null],[11,"fmt","","",29,null],[11,"fmt","","",18,null],[11,"fmt","","",21,null],[11,"fmt","","",54,null],[11,"fmt","","",14,null],[11,"fmt","","",28,null],[11,"fmt","","",51,null],[11,"fmt","","",55,null],[11,"fmt","","",49,null],[11,"fmt","","",62,null],[11,"fmt","","",34,null],[11,"fmt","","",23,null],[11,"fmt","","",15,null],[11,"fmt","","",61,null],[11,"fmt","","",19,null],[11,"fmt","","",38,null],[11,"fmt","","",71,null],[11,"fmt","","",56,null],[11,"fmt","","",70,null],[11,"fmt","","",22,null],[11,"fmt","","",33,null],[11,"fmt","","",12,null],[11,"fmt","","",30,null],[11,"fmt","","",39,null],[11,"fmt","reqwest::header::parsing","",2,null],[11,"fmt","reqwest","",76,null],[11,"fmt","","",77,null],[11,"fmt","","",1,null],[11,"fmt","","",75,null],[11,"fmt","reqwest::header","",87,null],[11,"fmt","","",11,null],[11,"fmt","","",47,null],[11,"fmt","","",17,null],[11,"fmt","","",42,null],[11,"fmt","","",53,null],[11,"fmt","","",60,null],[11,"fmt","","",8,null],[11,"fmt","","",58,null],[11,"fmt","","",68,null],[11,"fmt","","",54,null],[11,"fmt","","",51,null],[11,"fmt","","",28,null],[11,"fmt","","",19,null],[11,"fmt","","",38,null],[11,"fmt","","",70,null],[11,"fmt","","",22,null],[11,"fmt","","",33,null],[11,"fmt","","",12,null],[11,"fmt","","",30,null],[11,"fmt","","",39,null],[11,"fmt","reqwest::header::parsing","",2,null],[11,"fmt","reqwest::header","",86,null],[11,"fmt","","",90,null],[11,"fmt","","",5,null],[11,"fmt","reqwest","",76,null],[11,"fmt","","",77,null],[11,"fmt","reqwest::header","",41,null],[11,"fmt","","",48,null],[11,"fmt","","",26,null],[11,"fmt","","",67,null],[11,"fmt","","",72,null],[11,"fmt","","",64,null],[11,"fmt","","",44,null],[11,"fmt","","",35,null],[11,"fmt","","",37,null],[11,"fmt","","",32,null],[11,"fmt","","",13,null],[11,"fmt","","",74,null],[11,"fmt","","",43,null],[11,"fmt","","",25,null],[11,"fmt","","",65,null],[11,"fmt","","",24,null],[11,"fmt","","",6,null],[11,"fmt","","",66,null],[11,"fmt","","",59,null],[11,"fmt","","",7,null],[11,"fmt","","",10,null],[11,"fmt","","",31,null],[11,"fmt","","",73,null],[11,"fmt","","",27,null],[11,"fmt","","",40,null],[11,"fmt","","",20,null],[11,"fmt","","",16,null],[11,"fmt","","",55,null],[11,"fmt","","",62,null],[11,"fmt","","",15,null],[11,"fmt","","",61,null],[11,"fmt","","",71,null],[11,"fmt","","",56,null],[11,"as_ref","reqwest","",75,null],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",1,{"inputs":[{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",1,{"inputs":[{"name":"utf8error"}],"output":{"name":"error"}}],[11,"from","","",1,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"contains","reqwest::header::parsing","",88,null],[11,"into_url","reqwest","",85,null],[11,"new","reqwest::header","Creates a new, empty headers map.",86,{"inputs":[],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",86,null],[11,"get_raw","","Access the raw value of a header.",86,null],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",86,null],[11,"remove_raw","","Remove a header set by set_raw",86,null],[11,"get","","Get a reference to the header field&#39;s value, if it exists.",86,null],[11,"get_mut","","Get a mutable reference to the header field&#39;s value, if it exists.",86,null],[11,"has","","Returns a boolean of whether a certain header is in the map.",86,null],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",86,null],[11,"iter","","Returns an iterator over the header fields.",86,null],[11,"len","","Returns the number of headers in the map.",86,null],[11,"clear","","Remove all headers from the map.",86,null],[11,"is","","Check if a HeaderView is a certain Header.",90,null],[11,"name","","Get the Header name as a slice.",90,null],[11,"value","","Cast the value to a certain Header type.",90,null],[11,"value_string","","Get just the header value as a String.",90,null],[11,"json","","A constructor  to easily create a `Content-Type: application/json` header.",6,{"inputs":[],"output":{"name":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",6,{"inputs":[],"output":{"name":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",6,{"inputs":[],"output":{"name":"contenttype"}}],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",6,{"inputs":[],"output":{"name":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",6,{"inputs":[],"output":{"name":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",6,{"inputs":[],"output":{"name":"contenttype"}}],[11,"including_subdomains","","Create an STS header that includes subdomains",23,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",23,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"bytes","","Get the most common byte range header (&quot;bytes=from-to&quot;)",28,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"range"}}],[11,"bytes_multi","","Get byte range header with multiple subranges\n(&quot;bytes=from1-to1,from2-to2,fromX-toX&quot;)",28,{"inputs":[{"name":"vec"}],"output":{"name":"range"}}],[11,"new","","Creates a new `Origin` header.",29,{"inputs":[{"name":"s"},{"name":"h"},{"name":"option"}],"output":{"name":"origin"}}],[11,"new","","Creates a new Protocol with the given name and version",38,{"inputs":[{"name":"protocolname"},{"name":"option"}],"output":{"name":"protocol"}}],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",39,{"inputs":[{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"star","","A constructor to easily create `Accept: */*`.",41,{"inputs":[],"output":{"name":"accept"}}],[11,"json","","A constructor to easily create `Accept: application/json`.",41,{"inputs":[],"output":{"name":"accept"}}],[11,"text","","A constructor to easily create `Accept: text/*`.",41,{"inputs":[],"output":{"name":"accept"}}],[11,"image","","A constructor to easily create `Accept: image/*`.",41,{"inputs":[],"output":{"name":"accept"}}],[11,"close","","A constructor to easily create a `Connection: close` header.",43,{"inputs":[],"output":{"name":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",43,{"inputs":[],"output":{"name":"connection"}}],[11,"canonical_reason","reqwest","Get the standardised `reason-phrase` for this status code.",76,null],[11,"class","","Determine the class of a status code, based on its first digit.",76,null],[11,"is_informational","","Check if class is Informational.",76,null],[11,"is_success","","Check if class is Success.",76,null],[11,"is_redirection","","Check if class is Redirection.",76,null],[11,"is_client_error","","Check if class is ClientError.",76,null],[11,"is_server_error","","Check if class is ServerError.",76,null],[11,"is_strange_status","","Check if class is NoClass",76,null],[11,"parse","","Parse an absolute URL from a string.",85,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",85,null],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",85,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",85,null],[11,"into_string","","Return the serialization of this URL.",85,null],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",85,null],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the &#39;:&#39; delimiter.",85,null],[11,"has_authority","","Return whether the URL has an &#39;authority&#39;,\nwhich can contain a username, password, host, and port number.",85,null],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL,\nmeaning that parsing a relative URL string with this URL as the base will return an error.",85,null],[11,"username","","Return the username for this URL (typically the empty string)\nas a percent-encoded ASCII string.",85,null],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",85,null],[11,"has_host","","Equivalent to `url.host().is_some()`.",85,null],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",85,null],[11,"host","","Return the parsed representation of the host for this URL.\nNon-ASCII domain labels are punycode-encoded per IDNA.",85,null],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",85,null],[11,"port","","Return the port number for this URL, if any.",85,null],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",85,null],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",85,null],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string.\nFor cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with &#39;/&#39;.\nFor other URLs, this starts with a &#39;/&#39; slash\nand continues with slash-separated path segments.",85,null],[11,"path_segments","","Unless this URL is cannot-be-a-base,\nreturn an iterator of &#39;/&#39; slash-separated path segments,\neach as a percent-encoded ASCII string.",85,null],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",85,null],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return an iterator of (key, value) pairs.",85,null],[11,"fragment","","Return this URL’s fragment identifier, if any.",85,null],[11,"set_fragment","","Change this URL’s fragment identifier.",85,null],[11,"set_query","","Change this URL’s query string.",85,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs\nin `application/x-www-form-urlencoded` syntax.",85,null],[11,"set_path","","Change this URL’s path.",85,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",85,null],[11,"set_port","","Change this URL’s port number.",85,null],[11,"set_host","","Change this URL’s host.",85,null],[11,"set_ip_host","","Change this URL’s host to the given IP address.",85,null],[11,"set_password","","Change this URL’s password.",85,null],[11,"set_username","","Change this URL’s username.",85,null],[11,"set_scheme","","Change this URL’s scheme.",85,null],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",85,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",85,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",85,null]],"paths":[[8,"IntoUrl"],[4,"HyperError"],[3,"ExtendedValue"],[8,"Header"],[8,"HeaderFormat"],[3,"HeaderFormatter"],[3,"ContentType"],[3,"Expires"],[4,"ContentRangeSpec"],[3,"Authorization"],[3,"From"],[4,"AccessControlAllowOrigin"],[3,"HttpDate"],[3,"AcceptRanges"],[3,"PreferenceApplied"],[3,"TransferEncoding"],[3,"Location"],[4,"CacheDirective"],[4,"Pragma"],[4,"ProtocolName"],[3,"LastModified"],[3,"Prefer"],[4,"Encoding"],[3,"StrictTransportSecurity"],[3,"ContentRange"],[3,"ContentEncoding"],[3,"AccessControlAllowMethods"],[4,"IfNoneMatch"],[4,"Range"],[3,"Origin"],[3,"Quality"],[4,"IfMatch"],[3,"AcceptLanguage"],[3,"EntityTag"],[3,"SetCookie"],[3,"AcceptCharset"],[4,"DispositionParam"],[3,"AcceptEncoding"],[3,"Protocol"],[3,"QualityItem"],[3,"IfUnmodifiedSince"],[3,"Accept"],[4,"ConnectionOption"],[3,"Connection"],[3,"AccessControlRequestMethod"],[3,"Basic"],[3,"CacheControl"],[4,"RangeUnit"],[3,"AccessControlAllowHeaders"],[4,"ReferrerPolicy"],[8,"Scheme"],[4,"ByteRangeSpec"],[4,"DispositionType"],[3,"ContentDisposition"],[4,"Preference"],[3,"Referer"],[4,"Vary"],[4,"Expect"],[3,"Host"],[3,"ETag"],[3,"ContentLength"],[3,"Upgrade"],[3,"Server"],[3,"Cookie"],[3,"AccessControlRequestHeaders"],[3,"ContentLanguage"],[3,"Date"],[3,"AccessControlExposeHeaders"],[4,"IfRange"],[3,"Bearer"],[4,"Charset"],[3,"UserAgent"],[3,"AccessControlMaxAge"],[3,"IfModifiedSince"],[3,"Allow"],[4,"Method"],[4,"StatusCode"],[4,"HttpVersion"],[4,"UrlError"],[4,"Error"],[3,"Body"],[3,"Client"],[3,"RequestBuilder"],[3,"Response"],[3,"RedirectPolicy"],[3,"Url"],[3,"Headers"],[3,"AccessControlAllowCredentials"],[3,"HTTP_VALUE"],[3,"HeadersItems"],[3,"HeaderView"]]};
searchIndex["serde_json"] = {"doc":"JSON and serialization","items":[[0,"builder","serde_json","JSON Builders",null,null],[3,"ArrayBuilder","serde_json::builder","This structure provides a simple interface for constructing a JSON array.",null,null],[3,"ObjectBuilder","","This structure provides a simple interface for constructing a JSON object.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"arraybuilder"}}],[11,"new","","Construct an `ObjectBuilder`.",0,{"inputs":[],"output":{"name":"arraybuilder"}}],[11,"build","","Return the constructed `Value`.",0,null],[11,"push","","Insert a value into the array.",0,null],[11,"push_array","","Creates and passes an `ArrayBuilder` into a closure, then inserts the resulting array into\nthis array.",0,null],[11,"push_object","","Creates and passes an `ArrayBuilder` into a closure, then inserts the resulting object into\nthis array.",0,null],[11,"default","","",1,{"inputs":[],"output":{"name":"objectbuilder"}}],[11,"new","","Construct an `ObjectBuilder`.",1,{"inputs":[],"output":{"name":"objectbuilder"}}],[11,"build","","Return the constructed `Value`.",1,null],[11,"insert","","Insert a key-value pair into the object.",1,null],[11,"insert_array","","Creates and passes an `ObjectBuilder` into a closure, then inserts the resulting array into\nthis object.",1,null],[11,"insert_object","","Creates and passes an `ObjectBuilder` into a closure, then inserts the resulting object into\nthis object.",1,null],[0,"de","serde_json","JSON Deserialization",null,null],[3,"Deserializer","serde_json::de","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON values.",null,null],[5,"from_iter","","Decodes a json value from an iterator over an iterator\n`Iterator&lt;Item=io::Result&lt;u8&gt;&gt;`.",null,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[5,"from_reader","","Decodes a json value from a `std::io::Read`.",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"from_slice","","Decodes a json value from a byte slice `&amp;[u8]`.",null,null],[5,"from_str","","Decodes a json value from a `&amp;str`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Creates the JSON parser from an `std::iter::Iterator`.",2,{"inputs":[{"name":"iter"}],"output":{"name":"self"}}],[11,"end","","The `Deserializer::end` method should be called after a value has been fully deserialized.\nThis allows the `Deserializer` to validate that the input stream is at the end or that it\nonly has trailing whitespace.",2,null],[11,"deserialize","","",2,null],[11,"deserialize_option","","Parses a `null` as a None, and any other values as a `Some(...)`.",2,null],[11,"deserialize_newtype_struct","","Parses a newtype struct as the underlying value.",2,null],[11,"deserialize_enum","","Parses an enum as an object like `{&quot;$KEY&quot;:$VALUE}`, where $VALUE is either a straight\nvalue, a `[..]`, or a `{..}`.",2,null],[11,"deserialize_bool","","",2,null],[11,"deserialize_usize","","",2,null],[11,"deserialize_u8","","",2,null],[11,"deserialize_u16","","",2,null],[11,"deserialize_u32","","",2,null],[11,"deserialize_u64","","",2,null],[11,"deserialize_isize","","",2,null],[11,"deserialize_i8","","",2,null],[11,"deserialize_i16","","",2,null],[11,"deserialize_i32","","",2,null],[11,"deserialize_i64","","",2,null],[11,"deserialize_f32","","",2,null],[11,"deserialize_f64","","",2,null],[11,"deserialize_char","","",2,null],[11,"deserialize_str","","",2,null],[11,"deserialize_string","","",2,null],[11,"deserialize_unit","","",2,null],[11,"deserialize_seq","","",2,null],[11,"deserialize_seq_fixed_size","","",2,null],[11,"deserialize_bytes","","",2,null],[11,"deserialize_map","","",2,null],[11,"deserialize_unit_struct","","",2,null],[11,"deserialize_tuple_struct","","",2,null],[11,"deserialize_struct","","",2,null],[11,"deserialize_struct_field","","",2,null],[11,"deserialize_tuple","","",2,null],[11,"deserialize_ignored_any","","",2,null],[11,"new","","Returns an `Iterator` of decoded JSON values from an iterator over\n`Iterator&lt;Item=io::Result&lt;u8&gt;&gt;`.",3,{"inputs":[{"name":"iter"}],"output":{"name":"streamdeserializer"}}],[11,"next","","",3,null],[0,"error","serde_json","JSON Errors",null,null],[4,"ErrorCode","serde_json::error","The errors that can arise while parsing a JSON stream.",null,null],[13,"Custom","","Catchall for syntax error messages",4,null],[13,"InvalidType","","Incorrect type from value",4,null],[13,"InvalidValue","","Incorrect value",4,null],[13,"InvalidLength","","Invalid length",4,null],[13,"UnknownVariant","","Unknown variant in an enum.",4,null],[13,"UnknownField","","Unknown field in struct.",4,null],[13,"MissingField","","Struct is missing a field.",4,null],[13,"EOFWhileParsingList","","EOF while parsing a list.",4,null],[13,"EOFWhileParsingObject","","EOF while parsing an object.",4,null],[13,"EOFWhileParsingString","","EOF while parsing a string.",4,null],[13,"EOFWhileParsingValue","","EOF while parsing a JSON value.",4,null],[13,"ExpectedColon","","Expected this character to be a `&#39;:&#39;`.",4,null],[13,"ExpectedListCommaOrEnd","","Expected this character to be either a `&#39;,&#39;` or a `]`.",4,null],[13,"ExpectedObjectCommaOrEnd","","Expected this character to be either a `&#39;,&#39;` or a `}`.",4,null],[13,"ExpectedSomeIdent","","Expected to parse either a `true`, `false`, or a `null`.",4,null],[13,"ExpectedSomeValue","","Expected this character to start a JSON value.",4,null],[13,"InvalidEscape","","Invalid hex escape code.",4,null],[13,"InvalidNumber","","Invalid number.",4,null],[13,"NumberOutOfRange","","Number is bigger than the maximum value of its type.",4,null],[13,"InvalidUnicodeCodePoint","","Invalid unicode code point.",4,null],[13,"KeyMustBeAString","","Object key is not a string.",4,null],[13,"LoneLeadingSurrogateInHexEscape","","Lone leading surrogate in hex escape.",4,null],[13,"TrailingCharacters","","JSON has non-whitespace trailing characters after the value.",4,null],[13,"UnexpectedEndOfHexEscape","","Unexpected end of hex excape.",4,null],[4,"Error","","This type represents all possible errors that can occur when serializing or deserializing a\nvalue into JSON.",null,null],[13,"Syntax","","The JSON value had some syntatic error.",5,null],[13,"Io","","Some IO error occurred when serializing or deserializing a value.",5,null],[6,"Result","","Helper alias for `Result` objects that return a JSON `Error`.",null,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"cause","","",5,null],[11,"fmt","","",5,null],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"custom","","",5,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[11,"end_of_stream","","",5,{"inputs":[],"output":{"name":"error"}}],[11,"invalid_type","","",5,{"inputs":[{"name":"type"}],"output":{"name":"error"}}],[11,"invalid_value","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"invalid_length","","",5,{"inputs":[{"name":"usize"}],"output":{"name":"error"}}],[11,"unknown_variant","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"unknown_field","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"missing_field","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"custom","","Raised when there is general error when deserializing a type.",5,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[0,"ser","serde_json","JSON Serialization",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra whitespace.",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human readable.",null,null],[5,"escape_str","","Serializes and escapes a `&amp;str` into a JSON string.",null,{"inputs":[{"name":"w"},{"name":"str"}],"output":{"name":"result"}}],[5,"to_writer","","Encode the specified struct into a json `[u8]` writer.",null,{"inputs":[{"name":"w"},{"name":"t"}],"output":{"name":"result"}}],[5,"to_writer_pretty","","Encode the specified struct into a json `[u8]` writer.",null,{"inputs":[{"name":"w"},{"name":"t"}],"output":{"name":"result"}}],[5,"to_vec","","Encode the specified struct into a json `[u8]` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_vec_pretty","","Encode the specified struct into a json `[u8]` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_string","","Encode the specified struct into a json `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_string_pretty","","Encode the specified struct into a json `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[8,"Formatter","","This trait abstracts away serializing the JSON control characters, which allows the user to\noptionally pretty print the JSON output.",null,null],[10,"open","","Called when serializing a &#39;{&#39; or &#39;[&#39;.",6,null],[10,"comma","","Called when serializing a &#39;,&#39;.",6,null],[10,"colon","","Called when serializing a &#39;:&#39;.",6,null],[10,"close","","Called when serializing a &#39;}&#39; or &#39;]&#39;.",6,null],[11,"new","","Creates a new JSON serializer.",7,{"inputs":[{"name":"w"}],"output":{"name":"self"}}],[11,"pretty","","Creates a new JSON pretty print serializer.",7,{"inputs":[{"name":"w"}],"output":{"name":"self"}}],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to the writer\nspecified.",7,{"inputs":[{"name":"w"},{"name":"f"}],"output":{"name":"self"}}],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",7,null],[11,"serialize_bool","","",7,null],[11,"serialize_isize","","",7,null],[11,"serialize_i8","","",7,null],[11,"serialize_i16","","",7,null],[11,"serialize_i32","","",7,null],[11,"serialize_i64","","",7,null],[11,"serialize_usize","","",7,null],[11,"serialize_u8","","",7,null],[11,"serialize_u16","","",7,null],[11,"serialize_u32","","",7,null],[11,"serialize_u64","","",7,null],[11,"serialize_f32","","",7,null],[11,"serialize_f64","","",7,null],[11,"serialize_char","","",7,null],[11,"serialize_str","","",7,null],[11,"serialize_bytes","","",7,null],[11,"serialize_unit","","",7,null],[11,"serialize_unit_struct","","",7,null],[11,"serialize_unit_variant","","",7,null],[11,"serialize_newtype_struct","","Serialize newtypes without an object wrapper.",7,null],[11,"serialize_newtype_variant","","",7,null],[11,"serialize_none","","",7,null],[11,"serialize_some","","",7,null],[11,"serialize_seq","","",7,null],[11,"serialize_seq_elt","","",7,null],[11,"serialize_seq_end","","",7,null],[11,"serialize_seq_fixed_size","","",7,null],[11,"serialize_tuple","","",7,null],[11,"serialize_tuple_elt","","",7,null],[11,"serialize_tuple_end","","",7,null],[11,"serialize_tuple_struct","","",7,null],[11,"serialize_tuple_struct_elt","","",7,null],[11,"serialize_tuple_struct_end","","",7,null],[11,"serialize_tuple_variant","","",7,null],[11,"serialize_tuple_variant_elt","","",7,null],[11,"serialize_tuple_variant_end","","",7,null],[11,"serialize_map","","",7,null],[11,"serialize_map_key","","",7,null],[11,"serialize_map_value","","",7,null],[11,"serialize_map_end","","",7,null],[11,"serialize_struct","","",7,null],[11,"serialize_struct_elt","","",7,null],[11,"serialize_struct_end","","",7,null],[11,"serialize_struct_variant","","",7,null],[11,"serialize_struct_variant_elt","","",7,null],[11,"serialize_struct_variant_end","","",7,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"open","","",8,null],[11,"comma","","",8,null],[11,"colon","","",8,null],[11,"close","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"new","","Construct a pretty printer formatter that defaults to using two spaces for indentation.",9,{"inputs":[],"output":{"name":"self"}}],[11,"with_indent","","Construct a pretty printer formatter that uses the `indent` string for indentation.",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"open","","",9,null],[11,"comma","","",9,null],[11,"colon","","",9,null],[11,"close","","",9,null],[0,"value","serde_json","JSON Value",null,null],[3,"Serializer","serde_json::value","Create a `serde::Serializer` that serializes a `Serialize`e into a `Value`.",null,null],[3,"Deserializer","","Creates a `serde::Deserializer` from a `json::Value` object.",null,null],[4,"Value","","Represents a JSON value",null,null],[13,"Null","","Represents a JSON null value",10,null],[13,"Bool","","Represents a JSON Boolean",10,null],[13,"I64","","Represents a JSON signed integer",10,null],[13,"U64","","Represents a JSON unsigned integer",10,null],[13,"F64","","Represents a JSON floating point number",10,null],[13,"String","","Represents a JSON string",10,null],[13,"Array","","Represents a JSON array",10,null],[13,"Object","","Represents a JSON object",10,null],[5,"to_value","","Shortcut function to encode a `T` into a JSON `Value`",null,{"inputs":[{"name":"t"}],"output":{"name":"value"}}],[5,"from_value","","Shortcut function to decode a JSON `Value` into a `T`",null,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[6,"Map","","Represents a key/value type.",null,null],[6,"MapIntoIter","","Represents the `IntoIter` type.",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",11,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"find","","If the `Value` is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",10,null],[11,"find_path","","Attempts to get a nested Value Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the `Value` associated with the final key.",10,null],[11,"lookup","","**Deprecated**: Use `Value.pointer()` and pointer syntax instead.",10,null],[11,"pointer","","Looks up a value by a JSON Pointer.",10,null],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable reference to\nthat value.",10,null],[11,"search","","If the `Value` is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the `Value` is not an Object, returns None.",10,null],[11,"is_object","","Returns true if the `Value` is an Object. Returns false otherwise.",10,null],[11,"as_object","","If the `Value` is an Object, returns the associated Map.\nReturns None otherwise.",10,null],[11,"as_object_mut","","If the `Value` is an Object, returns the associated mutable Map.\nReturns None otherwise.",10,null],[11,"is_array","","Returns true if the `Value` is an Array. Returns false otherwise.",10,null],[11,"as_array","","If the `Value` is an Array, returns the associated vector.\nReturns None otherwise.",10,null],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable vector.\nReturns None otherwise.",10,null],[11,"is_string","","Returns true if the `Value` is a String. Returns false otherwise.",10,null],[11,"as_str","","If the `Value` is a String, returns the associated str.\nReturns None otherwise.",10,null],[11,"is_number","","Returns true if the `Value` is a Number. Returns false otherwise.",10,null],[11,"is_i64","","Returns true if the `Value` is a i64. Returns false otherwise.",10,null],[11,"is_u64","","Returns true if the `Value` is a u64. Returns false otherwise.",10,null],[11,"is_f64","","Returns true if the `Value` is a f64. Returns false otherwise.",10,null],[11,"as_i64","","If the `Value` is a number, return or cast it to a i64.\nReturns None otherwise.",10,null],[11,"as_u64","","If the `Value` is a number, return or cast it to a u64.\nReturns None otherwise.",10,null],[11,"as_f64","","If the `Value` is a number, return or cast it to a f64.\nReturns None otherwise.",10,null],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false otherwise.",10,null],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.\nReturns None otherwise.",10,null],[11,"is_null","","Returns true if the `Value` is a Null. Returns false otherwise.",10,null],[11,"as_null","","If the `Value` is a Null, returns ().\nReturns None otherwise.",10,null],[11,"serialize","","",10,null],[11,"deserialize","","",10,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","Serializes a json value into a string",10,null],[11,"fmt","","Serializes a json value into a string",10,null],[11,"from_str","","",10,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Serializer`.",12,{"inputs":[],"output":{"name":"serializer"}}],[11,"unwrap","","Unwrap the `Serializer` and return the `Value`.",12,null],[11,"default","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"serialize_bool","","",12,null],[11,"serialize_isize","","",12,null],[11,"serialize_i8","","",12,null],[11,"serialize_i16","","",12,null],[11,"serialize_i32","","",12,null],[11,"serialize_i64","","",12,null],[11,"serialize_usize","","",12,null],[11,"serialize_u8","","",12,null],[11,"serialize_u16","","",12,null],[11,"serialize_u32","","",12,null],[11,"serialize_u64","","",12,null],[11,"serialize_f32","","",12,null],[11,"serialize_f64","","",12,null],[11,"serialize_char","","",12,null],[11,"serialize_str","","",12,null],[11,"serialize_bytes","","",12,null],[11,"serialize_unit","","",12,null],[11,"serialize_unit_struct","","",12,null],[11,"serialize_unit_variant","","",12,null],[11,"serialize_newtype_struct","","",12,null],[11,"serialize_newtype_variant","","",12,null],[11,"serialize_none","","",12,null],[11,"serialize_some","","",12,null],[11,"serialize_seq","","",12,null],[11,"serialize_seq_elt","","",12,null],[11,"serialize_seq_end","","",12,null],[11,"serialize_seq_fixed_size","","",12,null],[11,"serialize_tuple","","",12,null],[11,"serialize_tuple_elt","","",12,null],[11,"serialize_tuple_end","","",12,null],[11,"serialize_tuple_struct","","",12,null],[11,"serialize_tuple_struct_elt","","",12,null],[11,"serialize_tuple_struct_end","","",12,null],[11,"serialize_tuple_variant","","",12,null],[11,"serialize_tuple_variant_elt","","",12,null],[11,"serialize_tuple_variant_end","","",12,null],[11,"serialize_map","","",12,null],[11,"serialize_map_key","","",12,null],[11,"serialize_map_value","","",12,null],[11,"serialize_map_end","","",12,null],[11,"serialize_struct","","",12,null],[11,"serialize_struct_elt","","",12,null],[11,"serialize_struct_end","","",12,null],[11,"serialize_struct_variant","","",12,null],[11,"serialize_struct_variant_elt","","",12,null],[11,"serialize_struct_variant_end","","",12,null],[11,"new","","Creates a new deserializer instance for deserializing the specified JSON value.",13,{"inputs":[{"name":"value"}],"output":{"name":"deserializer"}}],[11,"deserialize","","",13,null],[11,"deserialize_option","","",13,null],[11,"deserialize_enum","","",13,null],[11,"deserialize_newtype_struct","","",13,null],[11,"deserialize_bool","","",13,null],[11,"deserialize_usize","","",13,null],[11,"deserialize_u8","","",13,null],[11,"deserialize_u16","","",13,null],[11,"deserialize_u32","","",13,null],[11,"deserialize_u64","","",13,null],[11,"deserialize_isize","","",13,null],[11,"deserialize_i8","","",13,null],[11,"deserialize_i16","","",13,null],[11,"deserialize_i32","","",13,null],[11,"deserialize_i64","","",13,null],[11,"deserialize_f32","","",13,null],[11,"deserialize_f64","","",13,null],[11,"deserialize_char","","",13,null],[11,"deserialize_str","","",13,null],[11,"deserialize_string","","",13,null],[11,"deserialize_unit","","",13,null],[11,"deserialize_seq","","",13,null],[11,"deserialize_seq_fixed_size","","",13,null],[11,"deserialize_bytes","","",13,null],[11,"deserialize_map","","",13,null],[11,"deserialize_unit_struct","","",13,null],[11,"deserialize_tuple_struct","","",13,null],[11,"deserialize_struct","","",13,null],[11,"deserialize_struct_field","","",13,null],[11,"deserialize_tuple","","",13,null],[11,"deserialize_ignored_any","","",13,null]],"paths":[[3,"ArrayBuilder"],[3,"ObjectBuilder"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"ErrorCode"],[4,"Error"],[8,"Formatter"],[3,"Serializer"],[3,"CompactFormatter"],[3,"PrettyFormatter"],[4,"Value"],[8,"ToJson"],[3,"Serializer"],[3,"Deserializer"]]};
searchIndex["hyper"] = {"doc":"# Hyper","items":[[3,"Url","hyper","A parsed URL record.",null,null],[3,"LanguageTag","","A language tag as described in [BCP47](http://tools.ietf.org/html/bcp47).",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all\nother aspects such as script, region or spefic invariants.",0,null],[12,"extlangs","","Extended language subtags are used to identify certain specially\nselected languages that, for various historical and compatibility\nreasons, are closely identified with or tagged using an existing\nprimary language subtag.",0,null],[12,"script","","Script subtags are used to indicate the script or writing system\nvariations that distinguish the written forms of a language or its\ndialects.",0,null],[12,"region","","Region subtags are used to indicate linguistic variations associated\nwith or appropriate to a specific country, territory, or region.\nTypically, a region subtag is used to indicate variations such as\nregional dialects or usage, or region-specific spelling conventions.\nIt can also be used to indicate that content is expressed in a way\nthat is appropriate for use throughout a region, for instance,\nSpanish content tailored to be useful throughout Latin America.",0,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized\nvariations that define a language or its dialects that are not\ncovered by other available subtags.",0,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in\nvarious applications.  They are intended to identify information that\nis commonly used in association with languages or language tags but\nthat is not part of language identification.",0,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language\nthat are important in a given context by private agreement.",0,null],[0,"client","","HTTP Client",null,null],[3,"Client","hyper::client","A Client to use additional features with Requests.",null,null],[3,"RequestBuilder","","Options for an individual Request.",null,null],[3,"ProxyConfig","","Proxy server configuration with a custom connector and TLS wrapper.",null,null],[4,"Body","","An enum of possible body types for a Request.",null,null],[13,"ChunkedBody","","A Reader does not necessarily know it&#39;s size, so it is chunked.",1,null],[13,"SizedBody","","For Readers that can know their size, like a `File`.",1,null],[13,"BufBody","","A String has a size, and uses Content-Length.",1,null],[4,"RedirectPolicy","","Behavior regarding how to handle redirects within a Client.",null,null],[13,"FollowNone","","Don&#39;t follow any redirects.",2,null],[13,"FollowAll","","Follow all redirects.",2,null],[13,"FollowIf","","Follow a redirect if the contained function returns true.",2,null],[0,"pool","","Client Connection Pooling",null,null],[3,"Pool","hyper::client::pool","The `NetworkConnector` that behaves as a connection pool used by hyper&#39;s `Client`.",null,null],[3,"Config","","Config options for the `Pool`.",null,null],[12,"max_idle","","The maximum idle connections *per host*.",3,null],[3,"PooledStream","","A Stream that will try to be returned to the Pool when dropped.",null,null],[11,"fmt","","",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"config"}}],[11,"new","","Creates a `Pool` with a `DefaultConnector`.",4,{"inputs":[{"name":"config"}],"output":{"name":"pool"}}],[11,"with_connector","","Creates a `Pool` with a specified `NetworkConnector`.",4,{"inputs":[{"name":"config"},{"name":"c"}],"output":{"name":"pool"}}],[11,"clear_idle","","Clear all idle connections from the Pool, closing them.",4,null],[11,"connect","","",4,null],[11,"fmt","","",5,null],[11,"into_inner","","Take the wrapped stream out of the pool completely.",5,null],[11,"read","","",5,null],[11,"write","","",5,null],[11,"flush","","",5,null],[11,"peer_addr","","",5,null],[11,"set_read_timeout","","",5,null],[11,"set_write_timeout","","",5,null],[11,"close","","",5,null],[11,"set_previous_response_expected_no_content","","",5,null],[11,"previous_response_expected_no_content","","",5,null],[11,"drop","","",5,null],[0,"request","hyper::client","Client Requests",null,null],[3,"Request","hyper::client::request","A client request to a remote server.\nThe W type tracks the state of the request, Fresh vs Streaming.",null,null],[12,"url","","The target URI for this request.",6,null],[12,"version","","The HTTP version of this request.",6,null],[11,"headers","","Read the Request headers.",6,null],[11,"method","","Read the Request method.",6,null],[11,"set_write_timeout","","Set the write timeout.",6,null],[11,"set_read_timeout","","Set the read timeout.",6,null],[11,"with_message","","Create a new `Request&lt;Fresh&gt;` that will use the given `HttpMessage` for its communication\nwith the server. This implies that the given `HttpMessage` instance has already been\nproperly initialized by the caller (e.g. a TCP connection&#39;s already established).",6,{"inputs":[{"name":"method"},{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"new","","Create a new client request.",6,{"inputs":[{"name":"method"},{"name":"url"}],"output":{"name":"result"}}],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",6,{"inputs":[{"name":"method"},{"name":"url"},{"name":"c"}],"output":{"name":"result"}}],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",6,null],[11,"headers_mut","","Get a mutable reference to the Request headers.",6,null],[11,"send","","Completes writing the request, and returns a response to read from.",6,null],[11,"write","","",6,null],[11,"flush","","",6,null],[0,"response","hyper::client","Client Responses",null,null],[3,"Response","hyper::client::response","A response for a client request to a remote server.",null,null],[12,"status","","The status from the server.",7,null],[12,"headers","","The headers from the server.",7,null],[12,"version","","The HTTP version of this response from the server.",7,null],[12,"url","","The final URL of this response.",7,null],[11,"fmt","","",7,null],[11,"new","","Creates a new response from a server.",7,{"inputs":[{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"with_message","","Creates a new response received from the server on the given `HttpMessage`.",7,{"inputs":[{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"status_raw","","Get the raw status code and reason.",7,null],[11,"read","","",7,null],[11,"drop","","",7,null],[8,"IntoUrl","hyper::client","A helper trait to convert common objects into a Url.",null,null],[10,"into_url","","Consumes the object, trying to return a Url.",8,null],[11,"fmt","","",9,null],[11,"new","","Create a new Client.",9,{"inputs":[],"output":{"name":"client"}}],[11,"with_pool_config","","Create a new Client with a configured Pool Config.",9,{"inputs":[{"name":"config"}],"output":{"name":"client"}}],[11,"with_http_proxy","","Create a Client with an HTTP proxy to a (host, port).",9,{"inputs":[{"name":"h"},{"name":"u16"}],"output":{"name":"client"}}],[11,"with_proxy_config","","Create a Client using a proxy with a custom connector and SSL client.",9,{"inputs":[{"name":"proxyconfig"}],"output":{"name":"client"}}],[11,"with_connector","","Create a new client with a specific connector.",9,{"inputs":[{"name":"c"}],"output":{"name":"client"}}],[11,"with_protocol","","Create a new client with a specific `Protocol`.",9,{"inputs":[{"name":"p"}],"output":{"name":"client"}}],[11,"set_redirect_policy","","Set the RedirectPolicy.",9,null],[11,"set_read_timeout","","Set the read timeout value for all requests.",9,null],[11,"set_write_timeout","","Set the write timeout value for all requests.",9,null],[11,"get","","Build a Get request.",9,null],[11,"head","","Build a Head request.",9,null],[11,"patch","","Build a Patch request.",9,null],[11,"post","","Build a Post request.",9,null],[11,"put","","Build a Put request.",9,null],[11,"delete","","Build a Delete request.",9,null],[11,"request","","Build a new request using this Client.",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"client"}}],[11,"body","","Set a request body to be sent.",10,null],[11,"headers","","Add additional headers to the request.",10,null],[11,"header","","Add an individual new header to the request.",10,null],[11,"send","","Execute this request and receive a Response back.",10,null],[11,"read","","",1,null],[11,"from","","",1,{"inputs":[{"name":"r"}],"output":{"name":"body"}}],[11,"into_url","hyper","",11,null],[11,"new","hyper::client","Create a new `ProxyConfig`.",12,{"inputs":[{"name":"str"},{"name":"h"},{"name":"u16"},{"name":"c"},{"name":"s"}],"output":{"name":"proxyconfig"}}],[11,"set_pool_config","","Change the `pool::Config` for the proxy.",12,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"redirectpolicy"}}],[0,"error","hyper","Error and Result module.",null,null],[4,"ParseError","hyper::error","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",13,null],[13,"IdnaError","","",13,null],[13,"InvalidPort","","",13,null],[13,"InvalidIpv4Address","","",13,null],[13,"InvalidIpv6Address","","",13,null],[13,"InvalidDomainCharacter","","",13,null],[13,"RelativeUrlWithoutBase","","",13,null],[13,"RelativeUrlWithCannotBeABaseBase","","",13,null],[13,"SetHostOnCannotBeABaseUrl","","",13,null],[13,"Overflow","","",13,null],[4,"Error","","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",14,null],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",14,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",14,null],[13,"Header","","An invalid `Header`.",14,null],[13,"TooLarge","","A message head is too large to be reasonable.",14,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",14,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",14,null],[13,"Ssl","","An error from a SSL library.",14,null],[13,"Utf8","","Parsing a field as string failed",14,null],[6,"Result","","Result type often returned from methods that can have hyper `Error`s.",null,null],[11,"fmt","","",14,null],[11,"fmt","","",14,null],[11,"description","","",14,null],[11,"cause","","",14,null],[11,"from","","",14,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"utf8error"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[0,"method","hyper","The HTTP request method",null,null],[4,"Method","hyper::method","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",15,null],[13,"Get","","GET",15,null],[13,"Post","","POST",15,null],[13,"Put","","PUT",15,null],[13,"Delete","","DELETE",15,null],[13,"Head","","HEAD",15,null],[13,"Trace","","TRACE",15,null],[13,"Connect","","CONNECT",15,null],[13,"Patch","","PATCH",15,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(&quot;FOO&quot;.to_string())`.",15,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"hash","","",15,null],[11,"fmt","","",15,null],[11,"as_ref","","",15,null],[11,"safe","","Whether a method is considered &quot;safe&quot;, meaning the request is\nessentially read-only.",15,null],[11,"idempotent","","Whether a method is considered &quot;idempotent&quot;, meaning the request has\nthe same result is executed multiple times.",15,null],[11,"from_str","","",15,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",15,null],[0,"header","hyper","Headers container, and common header fields.",null,null],[3,"EntityTag","hyper::header","An entity tag, defined in [RFC7232](https://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"weak","","Weakness indicator for the tag",16,null],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",null,null],[12,"0","","",17,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[12,"0","","",18,null],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1).",null,null],[12,"item","","The actual contents of the field.",19,null],[12,"quality","","The quality (client or server preference) for the value.",19,null],[3,"Accept","","`Accept` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.2)",null,null],[12,"0","","",20,null],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[12,"0","","",21,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-methods-response-header)",null,null],[12,"0","","",22,null],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-expose-headers-response-header)",null,null],[12,"0","","",23,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-max-age-response-header)",null,null],[12,"0","","",24,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-headers-request-header)",null,null],[12,"0","","",25,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-method-request-header)",null,null],[12,"0","","",26,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.3)",null,null],[12,"0","","",27,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.4)",null,null],[12,"0","","",28,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.5)",null,null],[12,"0","","",29,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-2.3)",null,null],[12,"0","","",30,null],[3,"Allow","","`Allow` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.1)",null,null],[12,"0","","",31,null],[3,"Authorization","","`Authorization` header, defined in [RFC7235](https://tools.ietf.org/html/rfc7235#section-4.2)",null,null],[12,"0","","",32,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",33,null],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",33,null],[3,"Bearer","","Token holder for Bearer Authentication, most often seen with oauth",null,null],[12,"token","","Actual bearer token as a string",34,null],[3,"CacheControl","","`Cache-Control` header, defined in [RFC7234](https://tools.ietf.org/html/rfc7234#section-5.2)",null,null],[12,"0","","",35,null],[3,"Connection","","`Connection` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-6.1)",null,null],[12,"0","","",36,null],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in [RFC6266](https://tools.ietf.org/html/rfc6266)",null,null],[12,"disposition","","The disposition",37,null],[12,"parameters","","Disposition parameters",37,null],[3,"ContentLength","","`Content-Length` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.2)",null,null],[12,"0","","",38,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.2.2)",null,null],[12,"0","","",39,null],[3,"ContentLanguage","","`Content-Language` header, defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-3.1.3.2)",null,null],[12,"0","","",40,null],[3,"ContentRange","","`Content-Range` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[12,"0","","",41,null],[3,"ContentType","","`Content-Type` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.1.5)",null,null],[12,"0","","",42,null],[3,"Cookie","","`Cookie` header, defined in [RFC6265](http://tools.ietf.org/html/rfc6265#section-5.4)",null,null],[12,"0","","",43,null],[3,"Date","","`Date` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.1.2)",null,null],[12,"0","","",44,null],[3,"ETag","","`ETag` header, defined in [RFC7232](http://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"0","","",45,null],[3,"Expires","","`Expires` header, defined in [RFC7234](http://tools.ietf.org/html/rfc7234#section-5.3)",null,null],[12,"0","","",46,null],[3,"From","","`From` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.1)",null,null],[12,"0","","",47,null],[3,"Host","","The `Host` header.",null,null],[12,"hostname","","The hostname, such a example.domain.",48,null],[12,"port","","An optional port number.",48,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.3)",null,null],[12,"0","","",49,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.4)",null,null],[12,"0","","",50,null],[3,"LastModified","","`Last-Modified` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-2.2)",null,null],[12,"0","","",51,null],[3,"Location","","`Location` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.2)",null,null],[12,"0","","",52,null],[3,"Origin","","The `Origin` header.",null,null],[12,"scheme","","The scheme, such as http or https",53,null],[12,"host","","The host, such as Host{hostname: &quot;hyper.rs&quot;.to_owned(), port: None}",53,null],[3,"Prefer","","`Prefer` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",54,null],[3,"PreferenceApplied","","`Preference-Applied` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",55,null],[3,"Referer","","`Referer` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.2)",null,null],[12,"0","","",56,null],[3,"Server","","`Server` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.2)",null,null],[12,"0","","",57,null],[3,"SetCookie","","`Set-Cookie` header, defined [RFC6265](http://tools.ietf.org/html/rfc6265#section-4.1)",null,null],[12,"0","","",58,null],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in [RFC6797](https://tools.ietf.org/html/rfc6797)",null,null],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS Host as well as\nany subdomains of the host&#39;s domain name.",59,null],[12,"max_age","","Specifies the number of seconds, after the reception of the STS header\nfield, during which the UA regards the host (from whom the message was\nreceived) as a Known HSTS Host.",59,null],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.1)",null,null],[12,"0","","",60,null],[3,"Upgrade","","`Upgrade` header, defined in [RFC7230](http://tools.ietf.org/html/rfc7230#section-6.7)",null,null],[12,"0","","",61,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",62,null],[12,"version","","The optional version of the protocol, often in the format &quot;DIGIT.DIGIT&quot; (e.g.. &quot;1.2&quot;)",62,null],[3,"UserAgent","","`User-Agent` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.3)",null,null],[12,"0","","",63,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header.",null,null],[12,"0","","",64,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",65,null],[13,"Iso_8859_1","","ISO-8859-1",65,null],[13,"Iso_8859_2","","ISO-8859-2",65,null],[13,"Iso_8859_3","","ISO-8859-3",65,null],[13,"Iso_8859_4","","ISO-8859-4",65,null],[13,"Iso_8859_5","","ISO-8859-5",65,null],[13,"Iso_8859_6","","ISO-8859-6",65,null],[13,"Iso_8859_7","","ISO-8859-7",65,null],[13,"Iso_8859_8","","ISO-8859-8",65,null],[13,"Iso_8859_9","","ISO-8859-9",65,null],[13,"Iso_8859_10","","ISO-8859-10",65,null],[13,"Shift_Jis","","Shift_JIS",65,null],[13,"Euc_Jp","","EUC-JP",65,null],[13,"Iso_2022_Kr","","ISO-2022-KR",65,null],[13,"Euc_Kr","","EUC-KR",65,null],[13,"Iso_2022_Jp","","ISO-2022-JP",65,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",65,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",65,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",65,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",65,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",65,null],[13,"Gb2312","","GB2312",65,null],[13,"Big5","","Big5",65,null],[13,"Koi8_R","","KOI8-R",65,null],[13,"Ext","","An arbitrary charset specified as a string",65,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",66,null],[13,"Gzip","","The `gzip` encoding.",66,null],[13,"Deflate","","The `deflate` encoding.",66,null],[13,"Compress","","The `compress` encoding.",66,null],[13,"Identity","","The `identity` encoding.",66,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",66,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/#access-control-allow-origin-response-header)",null,null],[13,"Any","","Allow all origins",67,null],[13,"Null","","A hidden origin",67,null],[13,"Value","","Allow one particular origin",67,null],[4,"RangeUnit","","Range Units, described in [RFC7233](http://tools.ietf.org/html/rfc7233#section-2)",null,null],[13,"Bytes","","Indicating byte-range requests are supported.",68,null],[13,"None","","Reserved as keyword, indicating no ranges are supported.",68,null],[13,"Unregistered","","The given range unit is not registered at IANA.",68,null],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",null,null],[13,"NoCache","","&quot;no-cache&quot;",69,null],[13,"NoStore","","&quot;no-store&quot;",69,null],[13,"NoTransform","","&quot;no-transform&quot;",69,null],[13,"OnlyIfCached","","&quot;only-if-cached&quot;",69,null],[13,"MaxAge","","&quot;max-age=delta&quot;",69,null],[13,"MaxStale","","&quot;max-stale=delta&quot;",69,null],[13,"MinFresh","","&quot;min-fresh=delta&quot;",69,null],[13,"MustRevalidate","","&quot;must-revalidate&quot;",69,null],[13,"Public","","&quot;public&quot;",69,null],[13,"Private","","&quot;private&quot;",69,null],[13,"ProxyRevalidate","","&quot;proxy-revalidate&quot;",69,null],[13,"SMaxAge","","&quot;s-maxage=delta&quot;",69,null],[13,"Extension","","Extension directives. Optionally include an argument.",69,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",70,null],[13,"Close","","The `close` connection value.",70,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",70,null],[4,"DispositionType","","The implied disposition of the content of the HTTP body",null,null],[13,"Inline","","Inline implies default processing",71,null],[13,"Attachment","","Attachment implies that the recipient should prompt the user to save the response locally,\nrather than process it normally (as per its media type).",71,null],[13,"Ext","","Extension type.  Should be handled by recipients the same way as Attachment",71,null],[4,"DispositionParam","","A parameter to the disposition type",null,null],[13,"Filename","","A Filename consisting of a Charset, an optional LanguageTag, and finally a sequence of\nbytes representing the filename",72,null],[13,"Ext","","Extension type consisting of token and value.  Recipients should ignore unrecognized\nparameters.",72,null],[4,"ContentRangeSpec","","Content-Range, described in [RFC7233](https://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[13,"Bytes","","Byte range",73,null],[12,"range","hyper::header::ContentRangeSpec","First and last bytes of the range, omitted if request could not be\nsatisfied",73,null],[12,"instance_length","","Total length of the instance, can be omitted if unknown",73,null],[13,"Unregistered","hyper::header","Custom range, with unit not registered at IANA",73,null],[12,"unit","hyper::header::ContentRangeSpec","other-range-unit",73,null],[12,"resp","","other-range-resp",73,null],[4,"Expect","hyper::header","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",74,null],[4,"IfMatch","","`If-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.1)",null,null],[13,"Any","","Any value is a match",75,null],[13,"Items","","Only the listed items are a match",75,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.2)",null,null],[13,"Any","","Any value is a match",76,null],[13,"Items","","Only the listed items are a match",76,null],[4,"IfRange","","`If-Range` header, defined in [RFC7233](http://tools.ietf.org/html/rfc7233#section-3.2)",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",77,null],[13,"Date","","The date when the client retrieved the resource",77,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",78,null],[13,"Ext","","Every value other than `no-cache`.",78,null],[4,"Preference","","Prefer contains a list of these preferences.",null,null],[13,"RespondAsync","","&quot;respond-async&quot;",79,null],[13,"ReturnRepresentation","","&quot;return=representation&quot;",79,null],[13,"ReturnMinimal","","&quot;return=minimal&quot;",79,null],[13,"HandlingStrict","","&quot;handling=strict&quot;",79,null],[13,"HandlingLeniant","","&quot;handling=leniant&quot;",79,null],[13,"Wait","","&quot;wait=delta&quot;",79,null],[13,"Extension","","Extension preferences. Always has a value, if none is specified it is\njust &quot;&quot;. A preference can also have a list of parameters.",79,null],[4,"Range","","`Range` header, defined in [RFC7233](https://tools.ietf.org/html/rfc7233#section-3.1)",null,null],[13,"Bytes","","Byte range",80,null],[13,"Unregistered","","Custom range, with unit not registered at IANA\n(`other-range-unit`: String , `other-range-set`: String)",80,null],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more `ByteRangeSpecs`.\nEach `ByteRangeSpec` defines a range of bytes to fetch",null,null],[13,"FromTo","","Get all bytes between x and y (&quot;x-y&quot;)",81,null],[13,"AllFrom","","Get all bytes starting from x (&quot;x-&quot;)",81,null],[13,"Last","","Get last x bytes (&quot;-x&quot;)",81,null],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of\n[Referrer Policy](https://www.w3.org/TR/referrer-policy/#referrer-policy-header)",null,null],[13,"NoReferrer","","`no-referrer`",82,null],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",82,null],[13,"SameOrigin","","`same-origin`",82,null],[13,"Origin","","`origin`",82,null],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",82,null],[13,"UnsafeUrl","","`unsafe-url`",82,null],[13,"StrictOrigin","","`strict-origin`",82,null],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",82,null],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names are case-sensitive\nexcept for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",83,null],[13,"Tls","","`TLS` value, Transport Layer Security [RFC2817](http://tools.ietf.org/html/rfc2817)",83,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol\n[RFC6455](http://tools.ietf.org/html/rfc6455)",83,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",83,null],[13,"Unregistered","","Any other protocol name not known to hyper",83,null],[4,"Vary","","`Vary` header, defined in [RFC7231](https://tools.ietf.org/html/rfc7231#section-7.1.4)",null,null],[13,"Any","","Any value is a match",84,null],[13,"Items","","Only the listed items are a match",84,null],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0",null,{"inputs":[{"name":"t"}],"output":{"name":"qualityitem"}}],[5,"q","","Convenience function to create a `Quality` from a float.",null,{"inputs":[{"name":"f32"}],"output":{"name":"quality"}}],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"deref","","",20,null],[11,"deref_mut","","",20,null],[11,"header_name","","",20,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",20,null],[11,"fmt_header","","",20,null],[11,"fmt","","",20,null],[11,"star","","A constructor to easily create `Accept: */*`.",20,{"inputs":[],"output":{"name":"accept"}}],[11,"json","","A constructor to easily create `Accept: application/json`.",20,{"inputs":[],"output":{"name":"accept"}}],[11,"text","","A constructor to easily create `Accept: text/*`.",20,{"inputs":[],"output":{"name":"accept"}}],[11,"image","","A constructor to easily create `Accept: image/*`.",20,{"inputs":[],"output":{"name":"accept"}}],[11,"clone","","",85,null],[11,"eq","","",85,null],[11,"fmt","","",85,null],[11,"header_name","","",85,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",85,null],[11,"fmt_header","","",85,null],[11,"fmt","","",85,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"deref","","",21,null],[11,"deref_mut","","",21,null],[11,"header_name","","",21,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",21,null],[11,"fmt_header","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"deref","","",22,null],[11,"deref_mut","","",22,null],[11,"header_name","","",22,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",22,null],[11,"fmt_header","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",67,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"fmt","","",67,null],[11,"header_name","","",67,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",67,null],[11,"fmt_header","","",67,null],[11,"fmt","","",67,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"deref","","",23,null],[11,"deref_mut","","",23,null],[11,"header_name","","",23,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",23,null],[11,"fmt_header","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"deref","","",24,null],[11,"deref_mut","","",24,null],[11,"header_name","","",24,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",24,null],[11,"fmt_header","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",25,null],[11,"fmt","","",25,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"deref","","",25,null],[11,"deref_mut","","",25,null],[11,"header_name","","",25,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",25,null],[11,"fmt_header","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",26,null],[11,"fmt","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"deref","","",26,null],[11,"deref_mut","","",26,null],[11,"header_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",26,null],[11,"fmt_header","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",27,null],[11,"fmt","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"deref","","",27,null],[11,"deref_mut","","",27,null],[11,"header_name","","",27,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",27,null],[11,"fmt_header","","",27,null],[11,"fmt","","",27,null],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"deref","","",28,null],[11,"deref_mut","","",28,null],[11,"header_name","","",28,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",28,null],[11,"fmt_header","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"deref","","",29,null],[11,"deref_mut","","",29,null],[11,"header_name","","",29,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",29,null],[11,"fmt_header","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"deref","","",30,null],[11,"deref_mut","","",30,null],[11,"header_name","","",30,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",30,null],[11,"fmt_header","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",68,null],[11,"fmt","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"from_str","","",68,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",68,null],[11,"clone","","",31,null],[11,"fmt","","",31,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"deref","","",31,null],[11,"deref_mut","","",31,null],[11,"header_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",31,null],[11,"fmt_header","","",31,null],[11,"fmt","","",31,null],[11,"clone","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"fmt","","",32,null],[11,"deref","","",32,null],[11,"deref_mut","","",32,null],[11,"header_name","","",32,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",32,null],[11,"fmt_header","","",32,null],[11,"clone","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"fmt","","",33,null],[11,"scheme","","",33,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",33,null],[11,"from_str","","",33,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"fmt","","",34,null],[11,"scheme","","",34,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",34,null],[11,"from_str","","",34,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"deref","","",35,null],[11,"deref_mut","","",35,null],[11,"header_name","","",35,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",35,null],[11,"fmt_header","","",35,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",69,null],[11,"fmt","","",69,null],[11,"from_str","","",69,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"fmt","","",43,null],[11,"deref","","",43,null],[11,"deref_mut","","",43,null],[11,"header_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",43,null],[11,"fmt_header","","",43,null],[11,"clone","","",70,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"fmt","","",70,null],[11,"from_str","","",70,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",70,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"deref","","",36,null],[11,"deref_mut","","",36,null],[11,"header_name","","",36,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",36,null],[11,"fmt_header","","",36,null],[11,"fmt","","",36,null],[11,"close","","A constructor to easily create a `Connection: close` header.",36,{"inputs":[],"output":{"name":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",36,{"inputs":[],"output":{"name":"connection"}}],[11,"clone","","",71,null],[11,"fmt","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"clone","","",72,null],[11,"fmt","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"header_name","","",37,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",37,null],[11,"fmt_header","","",37,null],[11,"fmt","","",37,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"deref","","",39,null],[11,"deref_mut","","",39,null],[11,"header_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",39,null],[11,"fmt_header","","",39,null],[11,"fmt","","",39,null],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"deref","","",40,null],[11,"deref_mut","","",40,null],[11,"header_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",40,null],[11,"fmt_header","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"header_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",38,null],[11,"fmt_header","","",38,null],[11,"fmt","","",38,null],[11,"deref","","",38,null],[11,"deref_mut","","",38,null],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"deref","","",41,null],[11,"deref_mut","","",41,null],[11,"header_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",41,null],[11,"fmt_header","","",41,null],[11,"fmt","","",41,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"clone","","",73,null],[11,"fmt","","",73,null],[11,"from_str","","",73,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",73,null],[11,"clone","","",42,null],[11,"fmt","","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"deref","","",42,null],[11,"deref_mut","","",42,null],[11,"header_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",42,null],[11,"fmt_header","","",42,null],[11,"fmt","","",42,null],[11,"json","","A constructor  to easily create a `Content-Type: application/json` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",42,{"inputs":[],"output":{"name":"contenttype"}}],[11,"clone","","",44,null],[11,"fmt","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"deref","","",44,null],[11,"deref_mut","","",44,null],[11,"header_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",44,null],[11,"fmt_header","","",44,null],[11,"fmt","","",44,null],[11,"clone","","",45,null],[11,"fmt","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"deref","","",45,null],[11,"deref_mut","","",45,null],[11,"header_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",45,null],[11,"fmt_header","","",45,null],[11,"fmt","","",45,null],[11,"clone","","",74,null],[11,"eq","","",74,null],[11,"fmt","","",74,null],[11,"header_name","","",74,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",74,null],[11,"fmt_header","","",74,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"deref","","",46,null],[11,"deref_mut","","",46,null],[11,"header_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",46,null],[11,"fmt_header","","",46,null],[11,"fmt","","",46,null],[11,"clone","","",47,null],[11,"fmt","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"deref","","",47,null],[11,"deref_mut","","",47,null],[11,"header_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",47,null],[11,"fmt_header","","",47,null],[11,"fmt","","",47,null],[11,"clone","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"fmt","","",48,null],[11,"header_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",48,null],[11,"fmt_header","","",48,null],[11,"fmt","","",48,null],[11,"from_str","","",48,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",75,null],[11,"fmt","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"header_name","","",75,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",75,null],[11,"fmt_header","","",75,null],[11,"fmt","","",75,null],[11,"clone","","",49,null],[11,"fmt","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"deref","","",49,null],[11,"deref_mut","","",49,null],[11,"header_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",49,null],[11,"fmt_header","","",49,null],[11,"fmt","","",49,null],[11,"clone","","",76,null],[11,"fmt","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"header_name","","",76,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",76,null],[11,"fmt_header","","",76,null],[11,"fmt","","",76,null],[11,"clone","","",77,null],[11,"fmt","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"header_name","","",77,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",77,null],[11,"fmt_header","","",77,null],[11,"fmt","","",77,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"eq","","",50,null],[11,"ne","","",50,null],[11,"deref","","",50,null],[11,"deref_mut","","",50,null],[11,"header_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",50,null],[11,"fmt_header","","",50,null],[11,"fmt","","",50,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"deref","","",51,null],[11,"deref_mut","","",51,null],[11,"header_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",51,null],[11,"fmt_header","","",51,null],[11,"fmt","","",51,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"deref","","",52,null],[11,"deref_mut","","",52,null],[11,"header_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",52,null],[11,"fmt_header","","",52,null],[11,"fmt","","",52,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"new","","Creates a new `Origin` header.",53,{"inputs":[{"name":"s"},{"name":"h"},{"name":"option"}],"output":{"name":"origin"}}],[11,"header_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",53,null],[11,"from_str","","",53,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt_header","","",53,null],[11,"eq","","",53,null],[11,"clone","","",78,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"fmt","","",78,null],[11,"header_name","","",78,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",78,null],[11,"fmt_header","","",78,null],[11,"eq","","",54,null],[11,"ne","","",54,null],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"deref","","",54,null],[11,"deref_mut","","",54,null],[11,"header_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",54,null],[11,"fmt_header","","",54,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"clone","","",79,null],[11,"fmt","","",79,null],[11,"fmt","","",79,null],[11,"from_str","","",79,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"deref","","",55,null],[11,"deref_mut","","",55,null],[11,"header_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",55,null],[11,"fmt_header","","",55,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"fmt","","",80,null],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"clone","","",81,null],[11,"fmt","","",81,null],[11,"bytes","","Get the most common byte range header (&quot;bytes=from-to&quot;)",80,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"range"}}],[11,"bytes_multi","","Get byte range header with multiple subranges\n(&quot;bytes=from1-to1,from2-to2,fromX-toX&quot;)",80,{"inputs":[{"name":"vec"}],"output":{"name":"range"}}],[11,"fmt","","",81,null],[11,"fmt","","",80,null],[11,"from_str","","",80,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",81,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",80,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",80,null],[11,"fmt_header","","",80,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"deref","","",56,null],[11,"deref_mut","","",56,null],[11,"header_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",56,null],[11,"fmt_header","","",56,null],[11,"fmt","","",56,null],[11,"clone","","",82,null],[11,"eq","","",82,null],[11,"fmt","","",82,null],[11,"header_name","","",82,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",82,null],[11,"fmt_header","","",82,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"deref","","",57,null],[11,"deref_mut","","",57,null],[11,"header_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",57,null],[11,"fmt_header","","",57,null],[11,"fmt","","",57,null],[11,"clone","","",58,null],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"fmt","","",58,null],[11,"deref","","",58,null],[11,"deref_mut","","",58,null],[11,"header_name","","",58,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",58,null],[11,"fmt_header","","",58,null],[11,"fmt_multi_header","","",58,null],[11,"clone","","",59,null],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"fmt","","",59,null],[11,"including_subdomains","","Create an STS header that includes subdomains",59,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",59,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"from_str","","",59,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",59,null],[11,"fmt_header","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"eq","","",60,null],[11,"ne","","",60,null],[11,"deref","","",60,null],[11,"deref_mut","","",60,null],[11,"header_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",60,null],[11,"fmt_header","","",60,null],[11,"fmt","","",60,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"deref","","",61,null],[11,"deref_mut","","",61,null],[11,"header_name","","",61,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",61,null],[11,"fmt_header","","",61,null],[11,"fmt","","",61,null],[11,"clone","","",83,null],[11,"fmt","","",83,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"from_str","","",83,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",83,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"new","","Creates a new Protocol with the given name and version",62,{"inputs":[{"name":"protocolname"},{"name":"option"}],"output":{"name":"protocol"}}],[11,"from_str","","",62,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",62,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"deref","","",63,null],[11,"deref_mut","","",63,null],[11,"header_name","","",63,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",63,null],[11,"fmt_header","","",63,null],[11,"fmt","","",63,null],[11,"clone","","",84,null],[11,"fmt","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"header_name","","",84,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",84,null],[11,"fmt_header","","",84,null],[11,"fmt","","",84,null],[11,"clone","","",65,null],[11,"fmt","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"fmt","","",65,null],[11,"from_str","","",65,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"fmt","","",66,null],[11,"fmt","","",66,null],[11,"from_str","","",66,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"new","","Constructs a new EntityTag.\n# Panics\nIf the tag contains invalid characters.",16,{"inputs":[{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"weak","","Constructs a new weak EntityTag.\n# Panics\nIf the tag contains invalid characters.",16,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"strong","","Constructs a new strong EntityTag.\n# Panics\nIf the tag contains invalid characters.",16,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",16,null],[11,"set_tag","","Set the tag.\n# Panics\nIf the tag contains invalid characters.",16,null],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their\nopaque-tags match character-by-character.",16,null],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their\nopaque-tags match character-by-character, regardless of either or\nboth being tagged as &quot;weak&quot;.",16,null],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",16,null],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",16,null],[11,"fmt","","",16,null],[11,"from_str","","",16,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"partial_cmp","","",17,null],[11,"lt","","",17,null],[11,"le","","",17,null],[11,"gt","","",17,null],[11,"ge","","",17,null],[11,"cmp","","",17,null],[11,"from_str","","",17,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",17,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"cmp","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"partial_cmp","","",18,null],[11,"lt","","",18,null],[11,"le","","",18,null],[11,"gt","","",18,null],[11,"ge","","",18,null],[11,"fmt","","",18,null],[11,"default","","",18,{"inputs":[],"output":{"name":"quality"}}],[11,"clone","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"fmt","","",19,null],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",19,{"inputs":[{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"partial_cmp","","",19,null],[11,"fmt","","",19,null],[11,"from_str","","",19,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"parsing","","Utility functions for Header implementations.",null,null],[3,"ExtendedValue","hyper::header::parsing","An extended header parameter value (i.e., tagged with a character set and optionally,\na language), as defined in [RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,null],[12,"charset","","The character set that is used to encode the `value` to a string.",86,null],[12,"language_tag","","The human language details of the `value`, if available.",86,null],[12,"value","","The parameter value, as expressed in octets.",86,null],[3,"HTTP_VALUE","","This encode set is used for HTTP header values and is defined at\nhttps://tools.ietf.org/html/rfc5987#section-3.2",null,null],[5,"from_one_raw_str","","Reads a single raw string when parsing a header.",null,null],[5,"from_raw_str","","Reads a raw string into a value.",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,null],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as defined in\n[RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",86,null],[11,"fmt","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"clone","","",87,null],[11,"contains","","",87,null],[11,"fmt","","",86,null],[8,"Scheme","hyper::header","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",88,{"inputs":[],"output":{"name":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",88,null],[8,"Header","","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",89,{"inputs":[],"output":{"name":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",89,null],[8,"HeaderFormat","","A trait for any object that will represent a header field and value.",null,null],[10,"fmt_header","","Format a header to be output into a TcpStream.",90,null],[11,"clone","","",91,null],[11,"new","","Creates a new, empty headers map.",91,{"inputs":[],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",91,null],[11,"get_raw","","Access the raw value of a header.",91,null],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",91,null],[11,"remove_raw","","Remove a header set by set_raw",91,null],[11,"get","","Get a reference to the header field&#39;s value, if it exists.",91,null],[11,"get_mut","","Get a mutable reference to the header field&#39;s value, if it exists.",91,null],[11,"has","","Returns a boolean of whether a certain header is in the map.",91,null],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",91,null],[11,"iter","","Returns an iterator over the header fields.",91,null],[11,"len","","Returns the number of headers in the map.",91,null],[11,"clear","","Remove all headers from the map.",91,null],[11,"eq","","",91,null],[11,"fmt","","",91,null],[11,"fmt","","",91,null],[11,"next","","",92,null],[11,"is","","Check if a HeaderView is a certain Header.",93,null],[11,"name","","Get the Header name as a slice.",93,null],[11,"value","","Cast the value to a certain Header type.",93,null],[11,"value_string","","Get just the header value as a String.",93,null],[11,"fmt","","",93,null],[11,"fmt","","",93,null],[11,"extend","","",91,null],[11,"from_iter","","",91,{"inputs":[{"name":"i"}],"output":{"name":"headers"}}],[11,"fmt","","",64,null],[11,"fmt","","",64,null],[0,"http","hyper","Pieces pertaining to the HTTP message protocol.",null,null],[3,"RawStatus","hyper::http","The raw status code and reason-phrase.",null,null],[12,"0","","",94,null],[12,"1","","",94,null],[5,"should_keep_alive","","Checks if a connection should be kept alive.",null,{"inputs":[{"name":"httpversion"},{"name":"headers"}],"output":{"name":"bool"}}],[0,"h1","","Adapts the HTTP/1.1 implementation into the `HttpMessage` API.",null,null],[3,"Http11Message","hyper::http::h1","An implementation of the `HttpMessage` trait for HTTP/1.1.",null,null],[3,"Http11Protocol","","The `Protocol` implementation provides HTTP/1.1 messages.",null,null],[3,"EndError","","",null,null],[3,"Incoming","","An Incoming Message head. Includes request/status line, and headers.",null,null],[12,"version","","HTTP version of the message.",95,null],[12,"subject","","Subject (request line or status line) of Incoming message.",95,null],[12,"headers","","Headers of the Incoming message.",95,null],[4,"HttpReader","","Readers to handle different Transfer-Encodings.",null,null],[13,"SizedReader","","A Reader used when a Content-Length header is passed with a positive integer.",96,null],[13,"ChunkedReader","","A Reader used when Transfer-Encoding is `chunked`.",96,null],[13,"EofReader","","A Reader used for responses that don&#39;t indicate a length or chunked.",96,null],[13,"EmptyReader","","A Reader used for messages that should never have a body.",96,null],[4,"HttpWriter","","Writers to handle different Transfer-Encodings.",null,null],[13,"ThroughWriter","","A no-op Writer, used initially before Transfer-Encoding is determined.",97,null],[13,"ChunkedWriter","","A Writer for when Transfer-Encoding includes `chunked`.",97,null],[13,"SizedWriter","","A Writer for when Content-Length is set.",97,null],[13,"EmptyWriter","","A writer that should not write any body.",97,null],[5,"parse_request","","Parses a request into an Incoming message head.",null,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[5,"parse_response","","Parses a response into an Incoming message head.",null,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[17,"CR","","The `\\r` byte.",null,null],[17,"LF","","The `\\n` byte.",null,null],[17,"LINE_ENDING","","The bytes `\\r\\n`.",null,null],[11,"fmt","","",98,null],[11,"write","","",98,null],[11,"flush","","",98,null],[11,"read","","",98,null],[11,"set_outgoing","","",98,null],[11,"get_incoming","","",98,null],[11,"has_body","","",98,null],[11,"set_read_timeout","","",98,null],[11,"set_write_timeout","","",98,null],[11,"close_connection","","",98,null],[11,"set_proxied","","",98,null],[11,"into_inner","","Consumes the `Http11Message` and returns the underlying `NetworkStream`.",98,null],[11,"get_ref","","Gets a mutable reference to the underlying `NetworkStream`, regardless of the state of the\n`Http11Message`.",98,null],[11,"get_mut","","Gets a mutable reference to the underlying `NetworkStream`, regardless of the state of the\n`Http11Message`.",98,null],[11,"with_stream","","Creates a new `Http11Message` that will use the given `NetworkStream` for communicating to\nthe peer.",98,{"inputs":[{"name":"box"}],"output":{"name":"http11message"}}],[11,"flush_outgoing","","Flushes the current outgoing content and moves the stream into the `stream` property.",98,null],[11,"new_message","","",99,null],[11,"with_connector","","Creates a new `Http11Protocol` instance that will use the given `NetworkConnector` for\nestablishing HTTP connections.",99,{"inputs":[{"name":"c"}],"output":{"name":"http11protocol"}}],[11,"into_inner","","Unwraps this HttpReader and returns the underlying Reader.",96,null],[11,"get_ref","","Gets a borrowed reference to the underlying Reader.",96,null],[11,"get_mut","","Gets a mutable reference to the underlying Reader.",96,null],[11,"fmt","","",96,null],[11,"read","","",96,null],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",97,null],[11,"get_ref","","Access the inner Writer.",97,null],[11,"get_mut","","Access the inner Writer mutably.",97,null],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",97,null],[11,"fmt","","",100,null],[11,"write","","",97,null],[11,"flush","","",97,null],[11,"fmt","","",97,null],[11,"fmt","","",95,null],[0,"message","hyper::http","Defines the `HttpMessage` trait that serves to encapsulate the operations of a single\nrequest-response cycle on any HTTP connection.",null,null],[3,"RequestHead","hyper::http::message","Describes a request.",null,null],[12,"headers","","The headers of the request",101,null],[12,"method","","The method of the request",101,null],[12,"url","","The URL of the request",101,null],[3,"ResponseHead","","Describes a response.",null,null],[12,"headers","","The headers of the reponse",102,null],[12,"raw_status","","The raw status line of the response",102,null],[12,"version","","The HTTP/2 version which generated the response",102,null],[8,"Protocol","","The trait provides an API for creating new `HttpMessage`s depending on the underlying HTTP\nprotocol.",null,null],[10,"new_message","","Creates a fresh `HttpMessage` bound to the given host, based on the given protocol scheme.",103,null],[8,"HttpMessage","","The trait provides an API for sending an receiving HTTP messages.",null,null],[10,"set_outgoing","","Initiates a new outgoing request.",104,null],[10,"get_incoming","","Obtains the incoming response and returns its head (i.e. the `ResponseHead` struct)",104,null],[10,"set_read_timeout","","Set the read timeout duration for this message.",104,null],[10,"set_write_timeout","","Set the write timeout duration for this message.",104,null],[10,"close_connection","","Closes the underlying HTTP connection.",104,null],[10,"has_body","","Returns whether the incoming message has a body.",104,null],[11,"set_proxied","","Called when the Client wishes to use a Proxy.",104,null],[11,"clone","","",101,null],[11,"fmt","","",101,null],[11,"clone","","",102,null],[11,"fmt","","",102,null],[11,"is","","Is the underlying type in this trait object a T?",104,null],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",104,null],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",104,null],[11,"downcast","","If the underlying type is T, extract it.",104,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"clone","hyper::http","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"fmt","","",94,null],[0,"net","hyper","A collection of traits abstracting over Listeners and Streams.",null,null],[3,"NetworkConnections","hyper::net","An iterator wrapper over a `NetworkAcceptor`.",null,null],[3,"HttpListener","","A `NetworkListener` for `HttpStream`s.",null,null],[3,"HttpStream","","A wrapper around a `TcpStream`.",null,null],[12,"0","","",105,null],[3,"HttpConnector","","A connector that will produce HttpStreams.",null,null],[3,"HttpsListener","","A Http Listener over SSL.",null,null],[3,"HttpsConnector","","A connector that can protect HTTP streams using SSL.",null,null],[4,"Fresh","","The write-status indicating headers have not been written.",null,null],[4,"Streaming","","The write-status indicating headers have been written.",null,null],[4,"HttpsStream","","A stream over the HTTP protocol, possibly protected by SSL.",null,null],[13,"Http","","A plain text stream.",106,null],[13,"Https","","A stream protected by SSL.",106,null],[8,"NetworkListener","","An abstraction to listen for connections on a certain port.",null,null],[16,"Stream","","The stream produced for each connection.",107,null],[10,"accept","","Returns an iterator of streams.",107,null],[10,"local_addr","","Get the address this Listener ended up listening on.",107,null],[11,"incoming","","Returns an iterator over incoming connections.",107,null],[11,"set_read_timeout","","Sets the read timeout for all streams that are accepted",107,null],[11,"set_write_timeout","","Sets the write timeout for all streams that are accepted",107,null],[8,"NetworkStream","","An abstraction over streams that a `Server` can utilize.",null,null],[10,"peer_addr","","Get the remote address of the underlying connection.",108,null],[10,"set_read_timeout","","Set the maximum time to wait for a read to complete.",108,null],[10,"set_write_timeout","","Set the maximum time to wait for a write to complete.",108,null],[11,"close","","This will be called when Stream should no longer be kept alive.",108,null],[8,"NetworkConnector","","A connector creates a NetworkStream.",null,null],[16,"Stream","","Type of `Stream` to create",109,null],[10,"connect","","Connect to a remote address.",109,null],[8,"SslClient","","An abstraction to allow any SSL implementation to be used with client-side HttpsStreams.",null,null],[16,"Stream","","The protected stream.",110,null],[10,"wrap_client","","Wrap a client stream with SSL.",110,null],[8,"SslServer","","An abstraction to allow any SSL implementation to be used with server-side HttpsStreams.",null,null],[16,"Stream","","The protected stream.",111,null],[10,"wrap_server","","Wrap a server stream with SSL.",111,null],[11,"next","","",112,null],[11,"is","","Is the underlying type in this trait object a `T`?",108,null],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the contained data.",108,null],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to the contained\ndata.",108,null],[11,"downcast","","If the underlying type is `T`, extract it.",108,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"is","","Is the underlying type in this trait object a `T`?",108,null],[11,"downcast_ref","","If the underlying type is `T`, get a reference to the contained data.",108,null],[11,"downcast_mut","","If the underlying type is `T`, get a mutable reference to the contained\ndata.",108,null],[11,"downcast","","If the underlying type is `T`, extract it.",108,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"clone","","",113,null],[11,"from","","",113,{"inputs":[{"name":"tcplistener"}],"output":{"name":"httplistener"}}],[11,"new","","Start listening to an address over HTTP.",113,{"inputs":[{"name":"to"}],"output":{"name":"result"}}],[11,"accept","","",113,null],[11,"local_addr","","",113,null],[11,"set_read_timeout","","",113,null],[11,"set_write_timeout","","",113,null],[11,"as_raw_fd","","",113,null],[11,"from_raw_fd","","",113,{"inputs":[{"name":"rawfd"}],"output":{"name":"httplistener"}}],[11,"clone","","",105,null],[11,"fmt","","",105,null],[11,"read","","",105,null],[11,"write","","",105,null],[11,"flush","","",105,null],[11,"as_raw_fd","","",105,null],[11,"from_raw_fd","","",105,{"inputs":[{"name":"rawfd"}],"output":{"name":"httpstream"}}],[11,"peer_addr","","",105,null],[11,"set_read_timeout","","",105,null],[11,"set_write_timeout","","",105,null],[11,"close","","",105,null],[11,"fmt","","",114,null],[11,"clone","","",114,null],[11,"default","","",114,{"inputs":[],"output":{"name":"httpconnector"}}],[11,"connect","","",114,null],[11,"fmt","","",106,null],[11,"clone","","",106,null],[11,"read","","",106,null],[11,"write","","",106,null],[11,"flush","","",106,null],[11,"peer_addr","","",106,null],[11,"set_read_timeout","","",106,null],[11,"set_write_timeout","","",106,null],[11,"close","","",106,null],[11,"clone","","",115,null],[11,"new","","Start listening to an address over HTTPS.",115,{"inputs":[{"name":"to"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_listener","","Construct an HttpsListener from a bound `TcpListener`.",115,{"inputs":[{"name":"httplistener"},{"name":"s"}],"output":{"name":"httpslistener"}}],[11,"accept","","",115,null],[11,"local_addr","","",115,null],[11,"set_read_timeout","","",115,null],[11,"set_write_timeout","","",115,null],[11,"fmt","","",116,null],[11,"default","","",116,{"inputs":[],"output":{"name":"httpsconnector"}}],[11,"new","","Create a new connector using the provided SSL implementation.",116,{"inputs":[{"name":"s"}],"output":{"name":"httpsconnector"}}],[11,"with_connector","","Create a new connector using the provided SSL implementation.",116,{"inputs":[{"name":"s"},{"name":"c"}],"output":{"name":"httpsconnector"}}],[11,"connect","","",116,null],[0,"server","hyper","HTTP Server",null,null],[3,"Server","hyper::server","A server can listen on a TCP socket.",null,null],[3,"Listening","","A listening server, which can later be closed.",null,null],[12,"socket","","The socket addresses that the server is bound to.",117,null],[0,"request","","Server Requests",null,null],[3,"Request","hyper::server::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",null,null],[12,"remote_addr","","The IP address of the remote connection.",118,null],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",118,null],[12,"headers","","The headers of the incoming request.",118,null],[12,"uri","","The target request-uri for this request.",118,null],[12,"version","","The version of HTTP for this request.",118,null],[11,"new","","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",118,{"inputs":[{"name":"bufreader"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Set the read timeout of the underlying NetworkStream.",118,null],[11,"downcast_ref","","Get a reference to the underlying `NetworkStream`.",118,null],[11,"ssl","","Get a reference to the underlying Ssl stream, if connected\nover HTTPS.",118,null],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",118,null],[11,"read","","",118,null],[0,"response","hyper::server","Server Responses",null,null],[3,"Response","hyper::server::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`.",null,null],[12,"version","","The HTTP version of this response.",119,null],[11,"fmt","","",119,null],[11,"status","","The status of this response.",119,null],[11,"headers","","The headers of this response.",119,null],[11,"construct","","Construct a Response from its constituent parts.",119,{"inputs":[{"name":"httpversion"},{"name":"httpwriter"},{"name":"statuscode"},{"name":"headers"}],"output":{"name":"response"}}],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",119,null],[11,"new","","Creates a new Response that can be used to write to a network stream.",119,{"inputs":[{"name":"write"},{"name":"headers"}],"output":{"name":"response"}}],[11,"send","","Writes the body and ends the response.",119,null],[11,"start","","Consume this Response&lt;Fresh&gt;, writing the Headers and Status and\ncreating a Response&lt;Streaming&gt;",119,null],[11,"status_mut","","Get a mutable reference to the status.",119,null],[11,"headers_mut","","Get a mutable reference to the Headers.",119,null],[11,"end","","Flushes all writing of a response to the client.",119,null],[11,"write","","",119,null],[11,"flush","","",119,null],[11,"drop","","",119,null],[8,"Handler","hyper::server","A handler that can handle incoming requests for a server.",null,null],[10,"handle","","Receives a `Request`/`Response` pair, and should perform some action on them.",120,null],[11,"check_continue","","Called when a Request includes a `Expect: 100-continue` header.",120,null],[11,"on_connection_start","","This is run after a connection is received, on a per-connection basis (not a\nper-request basis, as a connection with keep-alive may handle multiple\nrequests)",120,null],[11,"on_connection_end","","This is run before a connection is closed, on a per-connection basis (not a\nper-request basis, as a connection with keep-alive may handle multiple\nrequests)",120,null],[11,"fmt","","",121,null],[11,"new","","Creates a new server with the provided handler.",121,{"inputs":[{"name":"l"}],"output":{"name":"server"}}],[11,"keep_alive","","Controls keep-alive for this server.",121,null],[11,"set_read_timeout","","Sets the read timeout for all Request reads.",121,null],[11,"set_write_timeout","","Sets the write timeout for all Response writes.",121,null],[11,"http","","Creates a new server that will handle `HttpStream`s.",121,{"inputs":[{"name":"to"}],"output":{"name":"result"}}],[11,"https","","Creates a new server that will handle `HttpStream`s over SSL.",121,{"inputs":[{"name":"a"},{"name":"s"}],"output":{"name":"result"}}],[11,"handle","","Binds to a socket and starts handling connections.",121,null],[11,"handle_threads","","Binds to a socket and starts handling connections with the provided\nnumber of threads.",121,null],[11,"fmt","","",117,null],[11,"drop","","",117,null],[11,"close","","Warning: This function doesn&#39;t work. The server remains listening after you called\nit. See https://github.com/hyperium/hyper/issues/338 for more details.",117,null],[0,"status","hyper","HTTP status codes",null,null],[4,"StatusCode","hyper::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",122,null],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",122,null],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",122,null],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",122,null],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",122,null],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",122,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",122,null],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",122,null],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",122,null],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",122,null],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",122,null],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",122,null],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",122,null],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",122,null],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",122,null],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",122,null],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",122,null],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",122,null],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",122,null],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",122,null],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",122,null],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",122,null],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",122,null],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",122,null],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",122,null],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",122,null],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",122,null],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",122,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",122,null],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",122,null],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",122,null],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",122,null],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",122,null],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",122,null],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",122,null],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",122,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",122,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",122,null],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",122,null],[13,"ImATeapot","","418 I&#39;m a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",122,null],[13,"MisdirectedRequest","","421 Misdirected Request\n[RFC7540, Section 9.1.2](http://tools.ietf.org/html/rfc7540#section-9.1.2)",122,null],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",122,null],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",122,null],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",122,null],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",122,null],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",122,null],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",122,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",122,null],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons\n[[RFC7725](http://tools.ietf.org/html/rfc7725)]",122,null],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",122,null],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",122,null],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",122,null],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",122,null],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",122,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",122,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",122,null],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",122,null],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",122,null],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",122,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",122,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",122,null],[4,"StatusClass","","The class of an HTTP `status-code`.",null,null],[13,"Informational","","1xx (Informational): The request was received, continuing process",123,null],[13,"Success","","2xx (Success): The request was successfully received, understood, and accepted",123,null],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in order to complete the request",123,null],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or cannot be fulfilled",123,null],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an apparently valid request",123,null],[13,"NoClass","","A status code lower than 100 or higher than 599. These codes do no belong to any class.",123,null],[11,"fmt","","",122,null],[11,"hash","","",122,null],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",122,null],[11,"class","","Determine the class of a status code, based on its first digit.",122,null],[11,"is_informational","","Check if class is Informational.",122,null],[11,"is_success","","Check if class is Success.",122,null],[11,"is_redirection","","Check if class is Redirection.",122,null],[11,"is_client_error","","Check if class is ClientError.",122,null],[11,"is_server_error","","Check if class is ServerError.",122,null],[11,"is_strange_status","","Check if class is NoClass",122,null],[11,"fmt","","",122,null],[11,"eq","","",122,null],[11,"clone","","",122,null],[11,"partial_cmp","","",122,null],[11,"cmp","","",122,null],[11,"fmt","","",123,null],[11,"clone","","",123,null],[11,"eq","","",123,null],[11,"partial_cmp","","",123,null],[11,"cmp","","",123,null],[11,"default_code","","Get the default status code for the class.",123,null],[0,"uri","hyper","HTTP RequestUris",null,null],[4,"RequestUri","hyper::uri","The Request-URI of a Request&#39;s StartLine.",null,null],[13,"AbsolutePath","","The most common request target, an absolute path and optional query.",124,null],[13,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",124,null],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",124,null],[13,"Star","","The star is used to target the entire server, instead of a specific resource.",124,null],[11,"fmt","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"clone","","",124,null],[11,"from_str","","",124,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",124,null],[0,"version","hyper","HTTP Versions enum",null,null],[4,"HttpVersion","hyper::version","Represents a version of the HTTP spec.",null,null],[13,"Http09","","`HTTP/0.9`",125,null],[13,"Http10","","`HTTP/1.0`",125,null],[13,"Http11","","`HTTP/1.1`",125,null],[13,"Http20","","`HTTP/2.0`",125,null],[11,"eq","","",125,null],[11,"partial_cmp","","",125,null],[11,"clone","","",125,null],[11,"cmp","","",125,null],[11,"hash","","",125,null],[11,"fmt","","",125,null],[11,"fmt","","",125,null],[0,"mime","hyper","Re-exporting the mime crate, for convenience.",null,null],[14,"header","","",null,null],[11,"parse","","Parse an absolute URL from a string.",11,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",11,null],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",11,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",11,null],[11,"into_string","","Return the serialization of this URL.",11,null],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",11,null],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the &#39;:&#39; delimiter.",11,null],[11,"has_authority","","Return whether the URL has an &#39;authority&#39;,\nwhich can contain a username, password, host, and port number.",11,null],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL,\nmeaning that parsing a relative URL string with this URL as the base will return an error.",11,null],[11,"username","","Return the username for this URL (typically the empty string)\nas a percent-encoded ASCII string.",11,null],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",11,null],[11,"has_host","","Equivalent to `url.host().is_some()`.",11,null],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",11,null],[11,"host","","Return the parsed representation of the host for this URL.\nNon-ASCII domain labels are punycode-encoded per IDNA.",11,null],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",11,null],[11,"port","","Return the port number for this URL, if any.",11,null],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",11,null],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",11,null],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string.\nFor cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with &#39;/&#39;.\nFor other URLs, this starts with a &#39;/&#39; slash\nand continues with slash-separated path segments.",11,null],[11,"path_segments","","Unless this URL is cannot-be-a-base,\nreturn an iterator of &#39;/&#39; slash-separated path segments,\neach as a percent-encoded ASCII string.",11,null],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",11,null],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return an iterator of (key, value) pairs.",11,null],[11,"fragment","","Return this URL’s fragment identifier, if any.",11,null],[11,"set_fragment","","Change this URL’s fragment identifier.",11,null],[11,"set_query","","Change this URL’s query string.",11,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs\nin `application/x-www-form-urlencoded` syntax.",11,null],[11,"set_path","","Change this URL’s path.",11,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",11,null],[11,"set_port","","Change this URL’s port number.",11,null],[11,"set_host","","Change this URL’s host.",11,null],[11,"set_ip_host","","Change this URL’s host to the given IP address.",11,null],[11,"set_password","","Change this URL’s password.",11,null],[11,"set_username","","Change this URL’s username.",11,null],[11,"set_scheme","","Change this URL’s scheme.",11,null],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",11,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",11,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",11,null],[11,"partial_cmp","","",11,null],[11,"description","hyper::error","",13,null],[11,"from_str","hyper","",11,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"index","","",11,null],[11,"index","","",11,null],[11,"index","","",11,null],[11,"index","","",11,null],[11,"eq","","",11,null],[11,"eq","hyper::error","",13,null],[11,"fmt","hyper","",11,null],[11,"fmt","hyper::error","",13,null],[11,"to_socket_addrs","hyper","",11,null],[11,"fmt","hyper::error","",13,null],[11,"fmt","hyper","",11,null],[11,"as_ref","","",11,null],[11,"from","hyper::error","",13,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"cmp","hyper","",11,null],[11,"clone","hyper::error","",13,null],[11,"clone","hyper","",11,null],[11,"hash","","",11,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"languagetag"}}],[11,"eq","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used\nas a normal language tag. None fields in the language range are ignored. If the language\ntag has more extlangs than the range these extlangs are ignored. Matches are\ncase-insensitive. `*` in language ranges are represented using `None` values. The language\nrange `*` that matches language tags is created by the default language tag:\n`let wildcard: LanguageTag = Default::default();.`",0,null],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,null],[11,"canonicalize","","Returns the canonical version of the language tag.",0,null]],"paths":[[3,"LanguageTag"],[4,"Body"],[4,"RedirectPolicy"],[3,"Config"],[3,"Pool"],[3,"PooledStream"],[3,"Request"],[3,"Response"],[8,"IntoUrl"],[3,"Client"],[3,"RequestBuilder"],[3,"Url"],[3,"ProxyConfig"],[4,"ParseError"],[4,"Error"],[4,"Method"],[3,"EntityTag"],[3,"HttpDate"],[3,"Quality"],[3,"QualityItem"],[3,"Accept"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentLength"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentRange"],[3,"ContentType"],[3,"Cookie"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"From"],[3,"Host"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[3,"Origin"],[3,"Prefer"],[3,"PreferenceApplied"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"Protocol"],[3,"UserAgent"],[3,"HeaderFormatter"],[4,"Charset"],[4,"Encoding"],[4,"AccessControlAllowOrigin"],[4,"RangeUnit"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"DispositionType"],[4,"DispositionParam"],[4,"ContentRangeSpec"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"Pragma"],[4,"Preference"],[4,"Range"],[4,"ByteRangeSpec"],[4,"ReferrerPolicy"],[4,"ProtocolName"],[4,"Vary"],[3,"AccessControlAllowCredentials"],[3,"ExtendedValue"],[3,"HTTP_VALUE"],[8,"Scheme"],[8,"Header"],[8,"HeaderFormat"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"RawStatus"],[3,"Incoming"],[4,"HttpReader"],[4,"HttpWriter"],[3,"Http11Message"],[3,"Http11Protocol"],[3,"EndError"],[3,"RequestHead"],[3,"ResponseHead"],[8,"Protocol"],[8,"HttpMessage"],[3,"HttpStream"],[4,"HttpsStream"],[8,"NetworkListener"],[8,"NetworkStream"],[8,"NetworkConnector"],[8,"SslClient"],[8,"SslServer"],[3,"NetworkConnections"],[3,"HttpListener"],[3,"HttpConnector"],[3,"HttpsListener"],[3,"HttpsConnector"],[3,"Listening"],[3,"Request"],[3,"Response"],[8,"Handler"],[3,"Server"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"]]};
searchIndex["serde_urlencoded"] = {"doc":"`x-www-form-urlencoded` meets Serde","items":[[0,"de","serde_urlencoded","Deserialization support for the `application/x-www-form-urlencoded` format.",null,null],[4,"Error","serde_urlencoded::de","This represents all the possible errors that can occur using the `ValueDeserializer`.",null,null],[13,"Custom","","The value had some custom error.",0,null],[13,"InvalidType","","The value had an incorrect type.",0,null],[13,"InvalidLength","","The value had an invalid length.",0,null],[13,"InvalidValue","","The value is invalid and cannot be deserialized.",0,null],[13,"EndOfStream","","EOF while deserializing a value.",0,null],[13,"UnknownVariant","","Unknown variant in enum.",0,null],[13,"UnknownField","","Unknown field in struct.",0,null],[13,"MissingField","","Struct is missing a field.",0,null],[3,"Deserializer","","A deserializer for the `application/x-www-form-urlencoded` format.",null,null],[5,"from_bytes","","Deserializes a `application/x-wwww-url-encoded` value from a `&amp;[u8]`.",null,null],[5,"from_str","","Deserializes a `application/x-wwww-url-encoded` value from a `&amp;str`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Returns a new `Deserializer`.",1,{"inputs":[{"name":"urlencodedparse"}],"output":{"name":"self"}}],[11,"deserialize","","",1,null],[11,"deserialize_map","","",1,null],[11,"deserialize_seq","","",1,null],[11,"deserialize_seq_fixed_size","","",1,null],[11,"deserialize_bool","","",1,null],[11,"deserialize_usize","","",1,null],[11,"deserialize_u8","","",1,null],[11,"deserialize_u16","","",1,null],[11,"deserialize_u32","","",1,null],[11,"deserialize_u64","","",1,null],[11,"deserialize_isize","","",1,null],[11,"deserialize_i8","","",1,null],[11,"deserialize_i16","","",1,null],[11,"deserialize_i32","","",1,null],[11,"deserialize_i64","","",1,null],[11,"deserialize_f32","","",1,null],[11,"deserialize_f64","","",1,null],[11,"deserialize_char","","",1,null],[11,"deserialize_str","","",1,null],[11,"deserialize_string","","",1,null],[11,"deserialize_unit","","",1,null],[11,"deserialize_option","","",1,null],[11,"deserialize_bytes","","",1,null],[11,"deserialize_unit_struct","","",1,null],[11,"deserialize_newtype_struct","","",1,null],[11,"deserialize_tuple_struct","","",1,null],[11,"deserialize_struct","","",1,null],[11,"deserialize_struct_field","","",1,null],[11,"deserialize_tuple","","",1,null],[11,"deserialize_enum","","",1,null],[11,"deserialize_ignored_any","","",1,null],[0,"ser","serde_urlencoded","Serialization support for the `application/x-www-form-urlencoded` format.",null,null],[3,"Serializer","serde_urlencoded::ser","A serializer for the `application/x-www-form-urlencoded` format.",null,null],[3,"SeqState","","State used when serializing sequences.",null,null],[3,"TupleState","","State used when serializing tuples.",null,null],[3,"TupleStructState","","State used when serializing tuple structs.",null,null],[3,"TupleVariantState","","State used when serializing tuple variants.",null,null],[3,"MapState","","State used when serializing maps.",null,null],[3,"StructState","","State used when serializing structs.",null,null],[3,"StructVariantState","","State used when serializing struct variants.",null,null],[4,"Error","","Errors returned during serializing to `application/x-www-form-urlencoded`.",null,null],[13,"Custom","","",2,null],[13,"InvalidValue","","",2,null],[13,"Utf8","","",2,null],[5,"to_string","","Serializes a value into a `application/x-wwww-url-encoded` `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"new","","Returns a new `Serializer`.",3,{"inputs":[{"name":"urlencodedserializer"}],"output":{"name":"self"}}],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"cause","","The lower-level cause of this error, in the case of a `Utf8` error.",2,null],[11,"custom","","",2,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"invalid_value","","",2,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"serialize_bool","","Returns an error.",3,null],[11,"serialize_isize","","Returns an error.",3,null],[11,"serialize_i8","","Returns an error.",3,null],[11,"serialize_i16","","Returns an error.",3,null],[11,"serialize_i32","","Returns an error.",3,null],[11,"serialize_i64","","Returns an error.",3,null],[11,"serialize_usize","","Returns an error.",3,null],[11,"serialize_u8","","Returns an error.",3,null],[11,"serialize_u16","","Returns an error.",3,null],[11,"serialize_u32","","Returns an error.",3,null],[11,"serialize_u64","","Returns an error.",3,null],[11,"serialize_f32","","Returns an error.",3,null],[11,"serialize_f64","","Returns an error.",3,null],[11,"serialize_char","","Returns an error.",3,null],[11,"serialize_str","","Returns an error.",3,null],[11,"serialize_bytes","","Returns an error.",3,null],[11,"serialize_unit","","Returns an error.",3,null],[11,"serialize_unit_struct","","Returns an error.",3,null],[11,"serialize_unit_variant","","Returns an error.",3,null],[11,"serialize_newtype_struct","","Serializes the inner value, ignoring the newtype name.",3,null],[11,"serialize_newtype_variant","","Returns an error.",3,null],[11,"serialize_none","","Returns an error.",3,null],[11,"serialize_some","","Returns an error.",3,null],[11,"serialize_seq","","Begins to serialize a sequence, given length (if any) is ignored.",3,null],[11,"serialize_seq_elt","","Serializes a sequence element.",3,null],[11,"serialize_seq_end","","Finishes serializing a sequence.",3,null],[11,"serialize_seq_fixed_size","","Begins to serialize a sequence, given length is ignored.",3,null],[11,"serialize_tuple","","Returns an error.",3,null],[11,"serialize_tuple_elt","","Returns an error.",3,null],[11,"serialize_tuple_end","","Returns an error.",3,null],[11,"serialize_tuple_struct","","Returns an error.",3,null],[11,"serialize_tuple_struct_elt","","Returns an error.",3,null],[11,"serialize_tuple_struct_end","","Returns an error.",3,null],[11,"serialize_tuple_variant","","Returns an error.",3,null],[11,"serialize_tuple_variant_elt","","Returns an error.",3,null],[11,"serialize_tuple_variant_end","","Returns an error.",3,null],[11,"serialize_map","","Begins to serialize a map, given length (if any) is ignored.",3,null],[11,"serialize_map_key","","Serializes a map key.",3,null],[11,"serialize_map_value","","Serializes a map value.",3,null],[11,"serialize_map_end","","Finishes serializing a map.",3,null],[11,"serialize_struct","","Begins to serialize a struct, given length is ignored.",3,null],[11,"serialize_struct_elt","","Serializes a struct element.",3,null],[11,"serialize_struct_end","","Finishes serializing a struct.",3,null],[11,"serialize_struct_variant","","Returns an error.",3,null],[11,"serialize_struct_variant_elt","","Returns an error.",3,null],[11,"serialize_struct_variant_end","","Returns an error.",3,null],[11,"clone","serde_urlencoded::de","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"custom","","",0,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[11,"end_of_stream","","",0,{"inputs":[],"output":{"name":"error"}}],[11,"invalid_type","","",0,{"inputs":[{"name":"type"}],"output":{"name":"error"}}],[11,"invalid_value","","",0,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"invalid_length","","",0,{"inputs":[{"name":"usize"}],"output":{"name":"error"}}],[11,"unknown_variant","","",0,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"unknown_field","","",0,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"missing_field","","",0,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"fmt","","",0,null],[11,"fmt","","",0,null]],"paths":[[4,"Error"],[3,"Deserializer"],[4,"Error"],[3,"Serializer"]]};
searchIndex["serde"] = {"doc":"Serde Serialization Framework","items":[[0,"bytes","serde","Helper module to enable serializing bytes more efficiently",null,null],[3,"ByteBuf","serde::bytes","`ByteBuf` wraps a `Vec&lt;u8&gt;` and serializes as a byte array.",null,null],[3,"ByteBufVisitor","","This type implements the `serde::de::Visitor` trait for a `ByteBuf`.",null,null],[3,"Bytes","","`Bytes` wraps a `&amp;[u8]` in order to serialize into a byte array.",null,null],[11,"clone","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"bytebuf"}}],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"new","","Construct a new, empty `ByteBuf`.",0,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Construct a new, empty `ByteBuf` with the specified capacity.",0,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from","","Wrap existing bytes in a `ByteBuf`.",0,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",0,null],[11,"into","","",0,null],[11,"from","","",0,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"as_ref","","",0,null],[11,"as_ref","","",0,null],[11,"as_mut","","",0,null],[11,"as_mut","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"serialize","","",0,null],[11,"visit_unit","","",1,null],[11,"visit_seq","","",1,null],[11,"visit_bytes","","",1,null],[11,"visit_byte_buf","","",1,null],[11,"visit_str","","",1,null],[11,"visit_string","","",1,null],[11,"deserialize","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",2,null],[11,"hash","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"cmp","","",2,null],[11,"new","","Wrap an existing `&amp;[u8]`.",2,null],[11,"fmt","","",2,null],[11,"from","","",2,null],[11,"from","","",2,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"into","","",2,null],[11,"deref","","",2,null],[11,"serialize","","",2,null],[0,"de","serde","Generic deserialization framework.",null,null],[4,"Type","serde::de","`Type` represents all the primitive types that can be deserialized. This is used by\n`Error::invalid_type`.",null,null],[13,"Bool","","Represents a `bool` type.",3,null],[13,"Usize","","Represents a `usize` type.",3,null],[13,"U8","","Represents a `u8` type.",3,null],[13,"U16","","Represents a `u16` type.",3,null],[13,"U32","","Represents a `u32` type.",3,null],[13,"U64","","Represents a `u64` type.",3,null],[13,"Isize","","Represents a `isize` type.",3,null],[13,"I8","","Represents a `i8` type.",3,null],[13,"I16","","Represents a `i16` type.",3,null],[13,"I32","","Represents a `i32` type.",3,null],[13,"I64","","Represents a `i64` type.",3,null],[13,"F32","","Represents a `f32` type.",3,null],[13,"F64","","Represents a `f64` type.",3,null],[13,"Char","","Represents a `char` type.",3,null],[13,"Str","","Represents a `&amp;str` type.",3,null],[13,"String","","Represents a `String` type.",3,null],[13,"Unit","","Represents a `()` type.",3,null],[13,"Option","","Represents an `Option&lt;T&gt;` type.",3,null],[13,"Seq","","Represents a sequence type.",3,null],[13,"Map","","Represents a map type.",3,null],[13,"UnitStruct","","Represents a unit struct type.",3,null],[13,"NewtypeStruct","","Represents a newtype type.",3,null],[13,"TupleStruct","","Represents a tuple struct type.",3,null],[13,"Struct","","Represents a struct type.",3,null],[13,"FieldName","","Represents a struct field name.",3,null],[13,"Tuple","","Represents a tuple type.",3,null],[13,"Enum","","Represents an `enum` type.",3,null],[13,"VariantName","","Represents an enum variant name.",3,null],[13,"StructVariant","","Represents a struct variant.",3,null],[13,"TupleVariant","","Represents a tuple variant.",3,null],[13,"UnitVariant","","Represents a unit variant.",3,null],[13,"Bytes","","Represents a `&amp;[u8]` type.",3,null],[0,"impls","","This module contains `Deserialize` and `Visitor` implementations.",null,null],[3,"UnitVisitor","serde::de::impls","A visitor that produces a `()`.",null,null],[3,"BoolVisitor","","A visitor that produces a `bool`.",null,null],[3,"PhantomDataVisitor","","A visitor that produces a `PhantomData`.",null,null],[3,"BinaryHeapVisitor","","A visitor that produces a sequence.",null,null],[3,"BTreeSetVisitor","","A visitor that produces a sequence.",null,null],[3,"LinkedListVisitor","","A visitor that produces a sequence.",null,null],[3,"HashSetVisitor","","A visitor that produces a sequence.",null,null],[3,"VecVisitor","","A visitor that produces a sequence.",null,null],[3,"VecDequeVisitor","","A visitor that produces a sequence.",null,null],[3,"TupleVisitor1","","Construct a tuple visitor.",null,null],[3,"TupleVisitor2","","Construct a tuple visitor.",null,null],[3,"TupleVisitor3","","Construct a tuple visitor.",null,null],[3,"TupleVisitor4","","Construct a tuple visitor.",null,null],[3,"TupleVisitor5","","Construct a tuple visitor.",null,null],[3,"TupleVisitor6","","Construct a tuple visitor.",null,null],[3,"TupleVisitor7","","Construct a tuple visitor.",null,null],[3,"TupleVisitor8","","Construct a tuple visitor.",null,null],[3,"TupleVisitor9","","Construct a tuple visitor.",null,null],[3,"TupleVisitor10","","Construct a tuple visitor.",null,null],[3,"TupleVisitor11","","Construct a tuple visitor.",null,null],[3,"TupleVisitor12","","Construct a tuple visitor.",null,null],[3,"TupleVisitor13","","Construct a tuple visitor.",null,null],[3,"TupleVisitor14","","Construct a tuple visitor.",null,null],[3,"TupleVisitor15","","Construct a tuple visitor.",null,null],[3,"TupleVisitor16","","Construct a tuple visitor.",null,null],[3,"BTreeMapVisitor","","A visitor that produces a map.",null,null],[3,"HashMapVisitor","","A visitor that produces a map.",null,null],[3,"IgnoredAny","","A target for deserializers that want to ignore data. Implements\nDeserialize and silently eats data given to it.",null,null],[11,"visit_unit","","",4,null],[11,"visit_seq","","",4,null],[11,"visit_bool","","",5,null],[11,"visit_str","","",5,null],[11,"visit_unit","","",6,null],[11,"new","","Construct a new sequence visitor.",7,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",7,null],[11,"visit_seq","","",7,null],[11,"new","","Construct a new sequence visitor.",8,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",8,null],[11,"visit_seq","","",8,null],[11,"new","","Construct a new sequence visitor.",9,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",9,null],[11,"visit_seq","","",9,null],[11,"new","","Construct a new sequence visitor.",10,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",10,null],[11,"visit_seq","","",10,null],[11,"new","","Construct a new sequence visitor.",11,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",11,null],[11,"visit_seq","","",11,null],[11,"new","","Construct a new sequence visitor.",12,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",12,null],[11,"visit_seq","","",12,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",13,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",13,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",14,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",14,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",15,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",15,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",16,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",16,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",17,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",17,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",18,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",18,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",19,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",19,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",20,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",20,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",21,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",21,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",22,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",22,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",23,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",23,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",24,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",24,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",25,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",25,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",26,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",26,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",27,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",27,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",28,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",28,null],[11,"new","","Construct a `MapVisitor*&lt;T&gt;`.",29,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",29,null],[11,"visit_map","","",29,null],[11,"new","","Construct a `MapVisitor*&lt;T&gt;`.",30,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",30,null],[11,"visit_map","","",30,null],[11,"deserialize","","",31,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"value","serde::de","This module supports deserializing from primitives with the `ValueDeserializer` trait.",null,null],[3,"UnitDeserializer","serde::de::value","A helper deserializer that deserializes a `()`.",null,null],[3,"BoolDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I8Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I16Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"IsizeDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U8Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U16Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"UsizeDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"F32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"F64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"CharDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"StrDeserializer","","A helper deserializer that deserializes a `&amp;str`.",null,null],[3,"StringDeserializer","","A helper deserializer that deserializes a `String`.",null,null],[3,"CowStrDeserializer","","A helper deserializer that deserializes a `String`.",null,null],[3,"SeqDeserializer","","A helper deserializer that deserializes a sequence.",null,null],[3,"SeqVisitorDeserializer","","A helper deserializer that deserializes a sequence using a `SeqVisitor`.",null,null],[3,"MapDeserializer","","A helper deserializer that deserializes a map.",null,null],[3,"MapVisitorDeserializer","","A helper deserializer that deserializes a map using a `MapVisitor`.",null,null],[3,"BytesDeserializer","","A helper deserializer that deserializes a `&amp;[u8]`.",null,null],[3,"ByteBufDeserializer","","A helper deserializer that deserializes a `Vec&lt;u8&gt;`.",null,null],[4,"Error","","This represents all the possible errors that can occur using the `ValueDeserializer`.",null,null],[13,"Custom","","The value had some custom error.",32,null],[13,"InvalidType","","The value had an incorrect type.",32,null],[13,"InvalidLength","","The value had an invalid length.",32,null],[13,"InvalidValue","","The value is invalid and cannot be deserialized.",32,null],[13,"EndOfStream","","EOF while deserializing a value.",32,null],[13,"UnknownVariant","","Unknown variant in enum.",32,null],[13,"UnknownField","","Unknown field in struct.",32,null],[13,"MissingField","","Struct is missing a field.",32,null],[8,"ValueDeserializer","","This trait converts primitive types into a deserializer.",null,null],[16,"Deserializer","","The actual deserializer type.",33,null],[10,"into_deserializer","","Convert this value into a deserializer.",33,null],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"custom","","",32,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"end_of_stream","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"invalid_type","","",32,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"invalid_value","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"invalid_length","","",32,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"unknown_variant","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"unknown_field","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"missing_field","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"fmt","","",32,null],[11,"description","","",32,null],[11,"cause","","",32,null],[11,"deserialize_bool","","",34,null],[11,"deserialize_usize","","",34,null],[11,"deserialize_u8","","",34,null],[11,"deserialize_u16","","",34,null],[11,"deserialize_u32","","",34,null],[11,"deserialize_u64","","",34,null],[11,"deserialize_isize","","",34,null],[11,"deserialize_i8","","",34,null],[11,"deserialize_i16","","",34,null],[11,"deserialize_i32","","",34,null],[11,"deserialize_i64","","",34,null],[11,"deserialize_f32","","",34,null],[11,"deserialize_f64","","",34,null],[11,"deserialize_char","","",34,null],[11,"deserialize_str","","",34,null],[11,"deserialize_string","","",34,null],[11,"deserialize_unit","","",34,null],[11,"deserialize_seq","","",34,null],[11,"deserialize_seq_fixed_size","","",34,null],[11,"deserialize_bytes","","",34,null],[11,"deserialize_map","","",34,null],[11,"deserialize_unit_struct","","",34,null],[11,"deserialize_newtype_struct","","",34,null],[11,"deserialize_tuple_struct","","",34,null],[11,"deserialize_struct","","",34,null],[11,"deserialize_struct_field","","",34,null],[11,"deserialize_tuple","","",34,null],[11,"deserialize_enum","","",34,null],[11,"deserialize_ignored_any","","",34,null],[11,"deserialize","","",34,null],[11,"deserialize_option","","",34,null],[11,"deserialize_bool","","",35,null],[11,"deserialize_usize","","",35,null],[11,"deserialize_u8","","",35,null],[11,"deserialize_u16","","",35,null],[11,"deserialize_u32","","",35,null],[11,"deserialize_u64","","",35,null],[11,"deserialize_isize","","",35,null],[11,"deserialize_i8","","",35,null],[11,"deserialize_i16","","",35,null],[11,"deserialize_i32","","",35,null],[11,"deserialize_i64","","",35,null],[11,"deserialize_f32","","",35,null],[11,"deserialize_f64","","",35,null],[11,"deserialize_char","","",35,null],[11,"deserialize_str","","",35,null],[11,"deserialize_string","","",35,null],[11,"deserialize_unit","","",35,null],[11,"deserialize_option","","",35,null],[11,"deserialize_seq","","",35,null],[11,"deserialize_seq_fixed_size","","",35,null],[11,"deserialize_bytes","","",35,null],[11,"deserialize_map","","",35,null],[11,"deserialize_unit_struct","","",35,null],[11,"deserialize_newtype_struct","","",35,null],[11,"deserialize_tuple_struct","","",35,null],[11,"deserialize_struct","","",35,null],[11,"deserialize_struct_field","","",35,null],[11,"deserialize_tuple","","",35,null],[11,"deserialize_enum","","",35,null],[11,"deserialize_ignored_any","","",35,null],[11,"deserialize","","",35,null],[11,"deserialize_bool","","",36,null],[11,"deserialize_usize","","",36,null],[11,"deserialize_u8","","",36,null],[11,"deserialize_u16","","",36,null],[11,"deserialize_u32","","",36,null],[11,"deserialize_u64","","",36,null],[11,"deserialize_isize","","",36,null],[11,"deserialize_i8","","",36,null],[11,"deserialize_i16","","",36,null],[11,"deserialize_i32","","",36,null],[11,"deserialize_i64","","",36,null],[11,"deserialize_f32","","",36,null],[11,"deserialize_f64","","",36,null],[11,"deserialize_char","","",36,null],[11,"deserialize_str","","",36,null],[11,"deserialize_string","","",36,null],[11,"deserialize_unit","","",36,null],[11,"deserialize_option","","",36,null],[11,"deserialize_seq","","",36,null],[11,"deserialize_seq_fixed_size","","",36,null],[11,"deserialize_bytes","","",36,null],[11,"deserialize_map","","",36,null],[11,"deserialize_unit_struct","","",36,null],[11,"deserialize_newtype_struct","","",36,null],[11,"deserialize_tuple_struct","","",36,null],[11,"deserialize_struct","","",36,null],[11,"deserialize_struct_field","","",36,null],[11,"deserialize_tuple","","",36,null],[11,"deserialize_enum","","",36,null],[11,"deserialize_ignored_any","","",36,null],[11,"deserialize","","",36,null],[11,"deserialize_bool","","",37,null],[11,"deserialize_usize","","",37,null],[11,"deserialize_u8","","",37,null],[11,"deserialize_u16","","",37,null],[11,"deserialize_u32","","",37,null],[11,"deserialize_u64","","",37,null],[11,"deserialize_isize","","",37,null],[11,"deserialize_i8","","",37,null],[11,"deserialize_i16","","",37,null],[11,"deserialize_i32","","",37,null],[11,"deserialize_i64","","",37,null],[11,"deserialize_f32","","",37,null],[11,"deserialize_f64","","",37,null],[11,"deserialize_char","","",37,null],[11,"deserialize_str","","",37,null],[11,"deserialize_string","","",37,null],[11,"deserialize_unit","","",37,null],[11,"deserialize_option","","",37,null],[11,"deserialize_seq","","",37,null],[11,"deserialize_seq_fixed_size","","",37,null],[11,"deserialize_bytes","","",37,null],[11,"deserialize_map","","",37,null],[11,"deserialize_unit_struct","","",37,null],[11,"deserialize_newtype_struct","","",37,null],[11,"deserialize_tuple_struct","","",37,null],[11,"deserialize_struct","","",37,null],[11,"deserialize_struct_field","","",37,null],[11,"deserialize_tuple","","",37,null],[11,"deserialize_enum","","",37,null],[11,"deserialize_ignored_any","","",37,null],[11,"deserialize","","",37,null],[11,"deserialize_bool","","",38,null],[11,"deserialize_usize","","",38,null],[11,"deserialize_u8","","",38,null],[11,"deserialize_u16","","",38,null],[11,"deserialize_u32","","",38,null],[11,"deserialize_u64","","",38,null],[11,"deserialize_isize","","",38,null],[11,"deserialize_i8","","",38,null],[11,"deserialize_i16","","",38,null],[11,"deserialize_i32","","",38,null],[11,"deserialize_i64","","",38,null],[11,"deserialize_f32","","",38,null],[11,"deserialize_f64","","",38,null],[11,"deserialize_char","","",38,null],[11,"deserialize_str","","",38,null],[11,"deserialize_string","","",38,null],[11,"deserialize_unit","","",38,null],[11,"deserialize_option","","",38,null],[11,"deserialize_seq","","",38,null],[11,"deserialize_seq_fixed_size","","",38,null],[11,"deserialize_bytes","","",38,null],[11,"deserialize_map","","",38,null],[11,"deserialize_unit_struct","","",38,null],[11,"deserialize_newtype_struct","","",38,null],[11,"deserialize_tuple_struct","","",38,null],[11,"deserialize_struct","","",38,null],[11,"deserialize_struct_field","","",38,null],[11,"deserialize_tuple","","",38,null],[11,"deserialize_enum","","",38,null],[11,"deserialize_ignored_any","","",38,null],[11,"deserialize","","",38,null],[11,"deserialize_bool","","",39,null],[11,"deserialize_usize","","",39,null],[11,"deserialize_u8","","",39,null],[11,"deserialize_u16","","",39,null],[11,"deserialize_u32","","",39,null],[11,"deserialize_u64","","",39,null],[11,"deserialize_isize","","",39,null],[11,"deserialize_i8","","",39,null],[11,"deserialize_i16","","",39,null],[11,"deserialize_i32","","",39,null],[11,"deserialize_i64","","",39,null],[11,"deserialize_f32","","",39,null],[11,"deserialize_f64","","",39,null],[11,"deserialize_char","","",39,null],[11,"deserialize_str","","",39,null],[11,"deserialize_string","","",39,null],[11,"deserialize_unit","","",39,null],[11,"deserialize_option","","",39,null],[11,"deserialize_seq","","",39,null],[11,"deserialize_seq_fixed_size","","",39,null],[11,"deserialize_bytes","","",39,null],[11,"deserialize_map","","",39,null],[11,"deserialize_unit_struct","","",39,null],[11,"deserialize_newtype_struct","","",39,null],[11,"deserialize_tuple_struct","","",39,null],[11,"deserialize_struct","","",39,null],[11,"deserialize_struct_field","","",39,null],[11,"deserialize_tuple","","",39,null],[11,"deserialize_enum","","",39,null],[11,"deserialize_ignored_any","","",39,null],[11,"deserialize","","",39,null],[11,"deserialize_bool","","",40,null],[11,"deserialize_usize","","",40,null],[11,"deserialize_u8","","",40,null],[11,"deserialize_u16","","",40,null],[11,"deserialize_u32","","",40,null],[11,"deserialize_u64","","",40,null],[11,"deserialize_isize","","",40,null],[11,"deserialize_i8","","",40,null],[11,"deserialize_i16","","",40,null],[11,"deserialize_i32","","",40,null],[11,"deserialize_i64","","",40,null],[11,"deserialize_f32","","",40,null],[11,"deserialize_f64","","",40,null],[11,"deserialize_char","","",40,null],[11,"deserialize_str","","",40,null],[11,"deserialize_string","","",40,null],[11,"deserialize_unit","","",40,null],[11,"deserialize_option","","",40,null],[11,"deserialize_seq","","",40,null],[11,"deserialize_seq_fixed_size","","",40,null],[11,"deserialize_bytes","","",40,null],[11,"deserialize_map","","",40,null],[11,"deserialize_unit_struct","","",40,null],[11,"deserialize_newtype_struct","","",40,null],[11,"deserialize_tuple_struct","","",40,null],[11,"deserialize_struct","","",40,null],[11,"deserialize_struct_field","","",40,null],[11,"deserialize_tuple","","",40,null],[11,"deserialize_enum","","",40,null],[11,"deserialize_ignored_any","","",40,null],[11,"deserialize","","",40,null],[11,"deserialize_bool","","",41,null],[11,"deserialize_usize","","",41,null],[11,"deserialize_u8","","",41,null],[11,"deserialize_u16","","",41,null],[11,"deserialize_u32","","",41,null],[11,"deserialize_u64","","",41,null],[11,"deserialize_isize","","",41,null],[11,"deserialize_i8","","",41,null],[11,"deserialize_i16","","",41,null],[11,"deserialize_i32","","",41,null],[11,"deserialize_i64","","",41,null],[11,"deserialize_f32","","",41,null],[11,"deserialize_f64","","",41,null],[11,"deserialize_char","","",41,null],[11,"deserialize_str","","",41,null],[11,"deserialize_string","","",41,null],[11,"deserialize_unit","","",41,null],[11,"deserialize_option","","",41,null],[11,"deserialize_seq","","",41,null],[11,"deserialize_seq_fixed_size","","",41,null],[11,"deserialize_bytes","","",41,null],[11,"deserialize_map","","",41,null],[11,"deserialize_unit_struct","","",41,null],[11,"deserialize_newtype_struct","","",41,null],[11,"deserialize_tuple_struct","","",41,null],[11,"deserialize_struct","","",41,null],[11,"deserialize_struct_field","","",41,null],[11,"deserialize_tuple","","",41,null],[11,"deserialize_enum","","",41,null],[11,"deserialize_ignored_any","","",41,null],[11,"deserialize","","",41,null],[11,"deserialize_bool","","",42,null],[11,"deserialize_usize","","",42,null],[11,"deserialize_u8","","",42,null],[11,"deserialize_u16","","",42,null],[11,"deserialize_u32","","",42,null],[11,"deserialize_u64","","",42,null],[11,"deserialize_isize","","",42,null],[11,"deserialize_i8","","",42,null],[11,"deserialize_i16","","",42,null],[11,"deserialize_i32","","",42,null],[11,"deserialize_i64","","",42,null],[11,"deserialize_f32","","",42,null],[11,"deserialize_f64","","",42,null],[11,"deserialize_char","","",42,null],[11,"deserialize_str","","",42,null],[11,"deserialize_string","","",42,null],[11,"deserialize_unit","","",42,null],[11,"deserialize_option","","",42,null],[11,"deserialize_seq","","",42,null],[11,"deserialize_seq_fixed_size","","",42,null],[11,"deserialize_bytes","","",42,null],[11,"deserialize_map","","",42,null],[11,"deserialize_unit_struct","","",42,null],[11,"deserialize_newtype_struct","","",42,null],[11,"deserialize_tuple_struct","","",42,null],[11,"deserialize_struct","","",42,null],[11,"deserialize_struct_field","","",42,null],[11,"deserialize_tuple","","",42,null],[11,"deserialize_enum","","",42,null],[11,"deserialize_ignored_any","","",42,null],[11,"deserialize","","",42,null],[11,"deserialize_bool","","",43,null],[11,"deserialize_usize","","",43,null],[11,"deserialize_u8","","",43,null],[11,"deserialize_u16","","",43,null],[11,"deserialize_u32","","",43,null],[11,"deserialize_u64","","",43,null],[11,"deserialize_isize","","",43,null],[11,"deserialize_i8","","",43,null],[11,"deserialize_i16","","",43,null],[11,"deserialize_i32","","",43,null],[11,"deserialize_i64","","",43,null],[11,"deserialize_f32","","",43,null],[11,"deserialize_f64","","",43,null],[11,"deserialize_char","","",43,null],[11,"deserialize_str","","",43,null],[11,"deserialize_string","","",43,null],[11,"deserialize_unit","","",43,null],[11,"deserialize_option","","",43,null],[11,"deserialize_seq","","",43,null],[11,"deserialize_seq_fixed_size","","",43,null],[11,"deserialize_bytes","","",43,null],[11,"deserialize_map","","",43,null],[11,"deserialize_unit_struct","","",43,null],[11,"deserialize_newtype_struct","","",43,null],[11,"deserialize_tuple_struct","","",43,null],[11,"deserialize_struct","","",43,null],[11,"deserialize_struct_field","","",43,null],[11,"deserialize_tuple","","",43,null],[11,"deserialize_enum","","",43,null],[11,"deserialize_ignored_any","","",43,null],[11,"deserialize","","",43,null],[11,"deserialize_bool","","",44,null],[11,"deserialize_usize","","",44,null],[11,"deserialize_u8","","",44,null],[11,"deserialize_u16","","",44,null],[11,"deserialize_u32","","",44,null],[11,"deserialize_u64","","",44,null],[11,"deserialize_isize","","",44,null],[11,"deserialize_i8","","",44,null],[11,"deserialize_i16","","",44,null],[11,"deserialize_i32","","",44,null],[11,"deserialize_i64","","",44,null],[11,"deserialize_f32","","",44,null],[11,"deserialize_f64","","",44,null],[11,"deserialize_char","","",44,null],[11,"deserialize_str","","",44,null],[11,"deserialize_string","","",44,null],[11,"deserialize_unit","","",44,null],[11,"deserialize_option","","",44,null],[11,"deserialize_seq","","",44,null],[11,"deserialize_seq_fixed_size","","",44,null],[11,"deserialize_bytes","","",44,null],[11,"deserialize_map","","",44,null],[11,"deserialize_unit_struct","","",44,null],[11,"deserialize_newtype_struct","","",44,null],[11,"deserialize_tuple_struct","","",44,null],[11,"deserialize_struct","","",44,null],[11,"deserialize_struct_field","","",44,null],[11,"deserialize_tuple","","",44,null],[11,"deserialize_enum","","",44,null],[11,"deserialize_ignored_any","","",44,null],[11,"deserialize","","",44,null],[11,"deserialize_bool","","",45,null],[11,"deserialize_usize","","",45,null],[11,"deserialize_u8","","",45,null],[11,"deserialize_u16","","",45,null],[11,"deserialize_u32","","",45,null],[11,"deserialize_u64","","",45,null],[11,"deserialize_isize","","",45,null],[11,"deserialize_i8","","",45,null],[11,"deserialize_i16","","",45,null],[11,"deserialize_i32","","",45,null],[11,"deserialize_i64","","",45,null],[11,"deserialize_f32","","",45,null],[11,"deserialize_f64","","",45,null],[11,"deserialize_char","","",45,null],[11,"deserialize_str","","",45,null],[11,"deserialize_string","","",45,null],[11,"deserialize_unit","","",45,null],[11,"deserialize_option","","",45,null],[11,"deserialize_seq","","",45,null],[11,"deserialize_seq_fixed_size","","",45,null],[11,"deserialize_bytes","","",45,null],[11,"deserialize_map","","",45,null],[11,"deserialize_unit_struct","","",45,null],[11,"deserialize_newtype_struct","","",45,null],[11,"deserialize_tuple_struct","","",45,null],[11,"deserialize_struct","","",45,null],[11,"deserialize_struct_field","","",45,null],[11,"deserialize_tuple","","",45,null],[11,"deserialize_enum","","",45,null],[11,"deserialize_ignored_any","","",45,null],[11,"deserialize","","",45,null],[11,"deserialize_bool","","",46,null],[11,"deserialize_usize","","",46,null],[11,"deserialize_u8","","",46,null],[11,"deserialize_u16","","",46,null],[11,"deserialize_u32","","",46,null],[11,"deserialize_u64","","",46,null],[11,"deserialize_isize","","",46,null],[11,"deserialize_i8","","",46,null],[11,"deserialize_i16","","",46,null],[11,"deserialize_i32","","",46,null],[11,"deserialize_i64","","",46,null],[11,"deserialize_f32","","",46,null],[11,"deserialize_f64","","",46,null],[11,"deserialize_char","","",46,null],[11,"deserialize_str","","",46,null],[11,"deserialize_string","","",46,null],[11,"deserialize_unit","","",46,null],[11,"deserialize_option","","",46,null],[11,"deserialize_seq","","",46,null],[11,"deserialize_seq_fixed_size","","",46,null],[11,"deserialize_bytes","","",46,null],[11,"deserialize_map","","",46,null],[11,"deserialize_unit_struct","","",46,null],[11,"deserialize_newtype_struct","","",46,null],[11,"deserialize_tuple_struct","","",46,null],[11,"deserialize_struct","","",46,null],[11,"deserialize_struct_field","","",46,null],[11,"deserialize_tuple","","",46,null],[11,"deserialize_enum","","",46,null],[11,"deserialize_ignored_any","","",46,null],[11,"deserialize","","",46,null],[11,"deserialize_bool","","",47,null],[11,"deserialize_usize","","",47,null],[11,"deserialize_u8","","",47,null],[11,"deserialize_u16","","",47,null],[11,"deserialize_u32","","",47,null],[11,"deserialize_u64","","",47,null],[11,"deserialize_isize","","",47,null],[11,"deserialize_i8","","",47,null],[11,"deserialize_i16","","",47,null],[11,"deserialize_i32","","",47,null],[11,"deserialize_i64","","",47,null],[11,"deserialize_f32","","",47,null],[11,"deserialize_f64","","",47,null],[11,"deserialize_char","","",47,null],[11,"deserialize_str","","",47,null],[11,"deserialize_string","","",47,null],[11,"deserialize_unit","","",47,null],[11,"deserialize_option","","",47,null],[11,"deserialize_seq","","",47,null],[11,"deserialize_seq_fixed_size","","",47,null],[11,"deserialize_bytes","","",47,null],[11,"deserialize_map","","",47,null],[11,"deserialize_unit_struct","","",47,null],[11,"deserialize_newtype_struct","","",47,null],[11,"deserialize_tuple_struct","","",47,null],[11,"deserialize_struct","","",47,null],[11,"deserialize_struct_field","","",47,null],[11,"deserialize_tuple","","",47,null],[11,"deserialize_enum","","",47,null],[11,"deserialize_ignored_any","","",47,null],[11,"deserialize","","",47,null],[11,"deserialize_bool","","",48,null],[11,"deserialize_usize","","",48,null],[11,"deserialize_u8","","",48,null],[11,"deserialize_u16","","",48,null],[11,"deserialize_u32","","",48,null],[11,"deserialize_u64","","",48,null],[11,"deserialize_isize","","",48,null],[11,"deserialize_i8","","",48,null],[11,"deserialize_i16","","",48,null],[11,"deserialize_i32","","",48,null],[11,"deserialize_i64","","",48,null],[11,"deserialize_f32","","",48,null],[11,"deserialize_f64","","",48,null],[11,"deserialize_char","","",48,null],[11,"deserialize_str","","",48,null],[11,"deserialize_string","","",48,null],[11,"deserialize_unit","","",48,null],[11,"deserialize_option","","",48,null],[11,"deserialize_seq","","",48,null],[11,"deserialize_seq_fixed_size","","",48,null],[11,"deserialize_bytes","","",48,null],[11,"deserialize_map","","",48,null],[11,"deserialize_unit_struct","","",48,null],[11,"deserialize_newtype_struct","","",48,null],[11,"deserialize_tuple_struct","","",48,null],[11,"deserialize_struct","","",48,null],[11,"deserialize_struct_field","","",48,null],[11,"deserialize_tuple","","",48,null],[11,"deserialize_enum","","",48,null],[11,"deserialize_ignored_any","","",48,null],[11,"deserialize","","",48,null],[11,"deserialize","","",49,null],[11,"deserialize_enum","","",49,null],[11,"deserialize_bool","","",49,null],[11,"deserialize_usize","","",49,null],[11,"deserialize_u8","","",49,null],[11,"deserialize_u16","","",49,null],[11,"deserialize_u32","","",49,null],[11,"deserialize_u64","","",49,null],[11,"deserialize_isize","","",49,null],[11,"deserialize_i8","","",49,null],[11,"deserialize_i16","","",49,null],[11,"deserialize_i32","","",49,null],[11,"deserialize_i64","","",49,null],[11,"deserialize_f32","","",49,null],[11,"deserialize_f64","","",49,null],[11,"deserialize_char","","",49,null],[11,"deserialize_str","","",49,null],[11,"deserialize_string","","",49,null],[11,"deserialize_unit","","",49,null],[11,"deserialize_option","","",49,null],[11,"deserialize_seq","","",49,null],[11,"deserialize_seq_fixed_size","","",49,null],[11,"deserialize_bytes","","",49,null],[11,"deserialize_map","","",49,null],[11,"deserialize_unit_struct","","",49,null],[11,"deserialize_newtype_struct","","",49,null],[11,"deserialize_tuple_struct","","",49,null],[11,"deserialize_struct","","",49,null],[11,"deserialize_struct_field","","",49,null],[11,"deserialize_tuple","","",49,null],[11,"deserialize_ignored_any","","",49,null],[11,"visit_variant","","",49,null],[11,"visit_unit","","",49,null],[11,"visit_newtype","","",49,null],[11,"visit_tuple","","",49,null],[11,"visit_struct","","",49,null],[11,"deserialize","","",50,null],[11,"deserialize_enum","","",50,null],[11,"deserialize_bool","","",50,null],[11,"deserialize_usize","","",50,null],[11,"deserialize_u8","","",50,null],[11,"deserialize_u16","","",50,null],[11,"deserialize_u32","","",50,null],[11,"deserialize_u64","","",50,null],[11,"deserialize_isize","","",50,null],[11,"deserialize_i8","","",50,null],[11,"deserialize_i16","","",50,null],[11,"deserialize_i32","","",50,null],[11,"deserialize_i64","","",50,null],[11,"deserialize_f32","","",50,null],[11,"deserialize_f64","","",50,null],[11,"deserialize_char","","",50,null],[11,"deserialize_str","","",50,null],[11,"deserialize_string","","",50,null],[11,"deserialize_unit","","",50,null],[11,"deserialize_option","","",50,null],[11,"deserialize_seq","","",50,null],[11,"deserialize_seq_fixed_size","","",50,null],[11,"deserialize_bytes","","",50,null],[11,"deserialize_map","","",50,null],[11,"deserialize_unit_struct","","",50,null],[11,"deserialize_newtype_struct","","",50,null],[11,"deserialize_tuple_struct","","",50,null],[11,"deserialize_struct","","",50,null],[11,"deserialize_struct_field","","",50,null],[11,"deserialize_tuple","","",50,null],[11,"deserialize_ignored_any","","",50,null],[11,"visit_variant","","",50,null],[11,"visit_unit","","",50,null],[11,"visit_newtype","","",50,null],[11,"visit_tuple","","",50,null],[11,"visit_struct","","",50,null],[11,"deserialize","","",51,null],[11,"deserialize_enum","","",51,null],[11,"deserialize_bool","","",51,null],[11,"deserialize_usize","","",51,null],[11,"deserialize_u8","","",51,null],[11,"deserialize_u16","","",51,null],[11,"deserialize_u32","","",51,null],[11,"deserialize_u64","","",51,null],[11,"deserialize_isize","","",51,null],[11,"deserialize_i8","","",51,null],[11,"deserialize_i16","","",51,null],[11,"deserialize_i32","","",51,null],[11,"deserialize_i64","","",51,null],[11,"deserialize_f32","","",51,null],[11,"deserialize_f64","","",51,null],[11,"deserialize_char","","",51,null],[11,"deserialize_str","","",51,null],[11,"deserialize_string","","",51,null],[11,"deserialize_unit","","",51,null],[11,"deserialize_option","","",51,null],[11,"deserialize_seq","","",51,null],[11,"deserialize_seq_fixed_size","","",51,null],[11,"deserialize_bytes","","",51,null],[11,"deserialize_map","","",51,null],[11,"deserialize_unit_struct","","",51,null],[11,"deserialize_newtype_struct","","",51,null],[11,"deserialize_tuple_struct","","",51,null],[11,"deserialize_struct","","",51,null],[11,"deserialize_struct_field","","",51,null],[11,"deserialize_tuple","","",51,null],[11,"deserialize_ignored_any","","",51,null],[11,"visit_variant","","",51,null],[11,"visit_unit","","",51,null],[11,"visit_newtype","","",51,null],[11,"visit_tuple","","",51,null],[11,"visit_struct","","",51,null],[11,"new","","Construct a new `SeqDeserializer&lt;I&gt;`.",52,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"deserialize","","",52,null],[11,"deserialize_bool","","",52,null],[11,"deserialize_usize","","",52,null],[11,"deserialize_u8","","",52,null],[11,"deserialize_u16","","",52,null],[11,"deserialize_u32","","",52,null],[11,"deserialize_u64","","",52,null],[11,"deserialize_isize","","",52,null],[11,"deserialize_i8","","",52,null],[11,"deserialize_i16","","",52,null],[11,"deserialize_i32","","",52,null],[11,"deserialize_i64","","",52,null],[11,"deserialize_f32","","",52,null],[11,"deserialize_f64","","",52,null],[11,"deserialize_char","","",52,null],[11,"deserialize_str","","",52,null],[11,"deserialize_string","","",52,null],[11,"deserialize_unit","","",52,null],[11,"deserialize_option","","",52,null],[11,"deserialize_seq","","",52,null],[11,"deserialize_seq_fixed_size","","",52,null],[11,"deserialize_bytes","","",52,null],[11,"deserialize_map","","",52,null],[11,"deserialize_unit_struct","","",52,null],[11,"deserialize_newtype_struct","","",52,null],[11,"deserialize_tuple_struct","","",52,null],[11,"deserialize_struct","","",52,null],[11,"deserialize_struct_field","","",52,null],[11,"deserialize_tuple","","",52,null],[11,"deserialize_enum","","",52,null],[11,"deserialize_ignored_any","","",52,null],[11,"visit","","",52,null],[11,"end","","",52,null],[11,"size_hint","","",52,null],[11,"new","","Construct a new `SeqVisitorDeserializer&lt;V_, E&gt;`.",53,{"inputs":[{"name":"v_"}],"output":{"name":"self"}}],[11,"deserialize","","",53,null],[11,"deserialize_bool","","",53,null],[11,"deserialize_usize","","",53,null],[11,"deserialize_u8","","",53,null],[11,"deserialize_u16","","",53,null],[11,"deserialize_u32","","",53,null],[11,"deserialize_u64","","",53,null],[11,"deserialize_isize","","",53,null],[11,"deserialize_i8","","",53,null],[11,"deserialize_i16","","",53,null],[11,"deserialize_i32","","",53,null],[11,"deserialize_i64","","",53,null],[11,"deserialize_f32","","",53,null],[11,"deserialize_f64","","",53,null],[11,"deserialize_char","","",53,null],[11,"deserialize_str","","",53,null],[11,"deserialize_string","","",53,null],[11,"deserialize_unit","","",53,null],[11,"deserialize_option","","",53,null],[11,"deserialize_seq","","",53,null],[11,"deserialize_seq_fixed_size","","",53,null],[11,"deserialize_bytes","","",53,null],[11,"deserialize_map","","",53,null],[11,"deserialize_unit_struct","","",53,null],[11,"deserialize_newtype_struct","","",53,null],[11,"deserialize_tuple_struct","","",53,null],[11,"deserialize_struct","","",53,null],[11,"deserialize_struct_field","","",53,null],[11,"deserialize_tuple","","",53,null],[11,"deserialize_enum","","",53,null],[11,"deserialize_ignored_any","","",53,null],[11,"new","","Construct a new `MapDeserializer&lt;I, K, V, E&gt;` with a specific length.",54,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"unbounded","","Construct a new `MapDeserializer&lt;I, K, V, E&gt;` that is not bounded\nby a specific length and that delegates to `iter` for its size hint.",54,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deserialize","","",54,null],[11,"deserialize_seq","","",54,null],[11,"deserialize_seq_fixed_size","","",54,null],[11,"deserialize_bool","","",54,null],[11,"deserialize_usize","","",54,null],[11,"deserialize_u8","","",54,null],[11,"deserialize_u16","","",54,null],[11,"deserialize_u32","","",54,null],[11,"deserialize_u64","","",54,null],[11,"deserialize_isize","","",54,null],[11,"deserialize_i8","","",54,null],[11,"deserialize_i16","","",54,null],[11,"deserialize_i32","","",54,null],[11,"deserialize_i64","","",54,null],[11,"deserialize_f32","","",54,null],[11,"deserialize_f64","","",54,null],[11,"deserialize_char","","",54,null],[11,"deserialize_str","","",54,null],[11,"deserialize_string","","",54,null],[11,"deserialize_unit","","",54,null],[11,"deserialize_option","","",54,null],[11,"deserialize_bytes","","",54,null],[11,"deserialize_map","","",54,null],[11,"deserialize_unit_struct","","",54,null],[11,"deserialize_newtype_struct","","",54,null],[11,"deserialize_tuple_struct","","",54,null],[11,"deserialize_struct","","",54,null],[11,"deserialize_struct_field","","",54,null],[11,"deserialize_tuple","","",54,null],[11,"deserialize_enum","","",54,null],[11,"deserialize_ignored_any","","",54,null],[11,"visit_key","","",54,null],[11,"visit_value","","",54,null],[11,"end","","",54,null],[11,"size_hint","","",54,null],[11,"visit","","",54,null],[11,"end","","",54,null],[11,"size_hint","","",54,null],[11,"new","","Construct a new `MapVisitorDeserializer&lt;V_, E&gt;`.",55,{"inputs":[{"name":"v_"}],"output":{"name":"self"}}],[11,"deserialize","","",55,null],[11,"deserialize_bool","","",55,null],[11,"deserialize_usize","","",55,null],[11,"deserialize_u8","","",55,null],[11,"deserialize_u16","","",55,null],[11,"deserialize_u32","","",55,null],[11,"deserialize_u64","","",55,null],[11,"deserialize_isize","","",55,null],[11,"deserialize_i8","","",55,null],[11,"deserialize_i16","","",55,null],[11,"deserialize_i32","","",55,null],[11,"deserialize_i64","","",55,null],[11,"deserialize_f32","","",55,null],[11,"deserialize_f64","","",55,null],[11,"deserialize_char","","",55,null],[11,"deserialize_str","","",55,null],[11,"deserialize_string","","",55,null],[11,"deserialize_unit","","",55,null],[11,"deserialize_option","","",55,null],[11,"deserialize_seq","","",55,null],[11,"deserialize_seq_fixed_size","","",55,null],[11,"deserialize_bytes","","",55,null],[11,"deserialize_map","","",55,null],[11,"deserialize_unit_struct","","",55,null],[11,"deserialize_newtype_struct","","",55,null],[11,"deserialize_tuple_struct","","",55,null],[11,"deserialize_struct","","",55,null],[11,"deserialize_struct_field","","",55,null],[11,"deserialize_tuple","","",55,null],[11,"deserialize_enum","","",55,null],[11,"deserialize_ignored_any","","",55,null],[11,"into_deserializer","serde::bytes","",2,null],[11,"deserialize","serde::de::value","",56,null],[11,"deserialize_bool","","",56,null],[11,"deserialize_usize","","",56,null],[11,"deserialize_u8","","",56,null],[11,"deserialize_u16","","",56,null],[11,"deserialize_u32","","",56,null],[11,"deserialize_u64","","",56,null],[11,"deserialize_isize","","",56,null],[11,"deserialize_i8","","",56,null],[11,"deserialize_i16","","",56,null],[11,"deserialize_i32","","",56,null],[11,"deserialize_i64","","",56,null],[11,"deserialize_f32","","",56,null],[11,"deserialize_f64","","",56,null],[11,"deserialize_char","","",56,null],[11,"deserialize_str","","",56,null],[11,"deserialize_string","","",56,null],[11,"deserialize_unit","","",56,null],[11,"deserialize_option","","",56,null],[11,"deserialize_seq","","",56,null],[11,"deserialize_seq_fixed_size","","",56,null],[11,"deserialize_bytes","","",56,null],[11,"deserialize_map","","",56,null],[11,"deserialize_unit_struct","","",56,null],[11,"deserialize_newtype_struct","","",56,null],[11,"deserialize_tuple_struct","","",56,null],[11,"deserialize_struct","","",56,null],[11,"deserialize_struct_field","","",56,null],[11,"deserialize_tuple","","",56,null],[11,"deserialize_enum","","",56,null],[11,"deserialize_ignored_any","","",56,null],[11,"into_deserializer","serde::bytes","",0,null],[11,"deserialize","serde::de::value","",57,null],[11,"deserialize_bool","","",57,null],[11,"deserialize_usize","","",57,null],[11,"deserialize_u8","","",57,null],[11,"deserialize_u16","","",57,null],[11,"deserialize_u32","","",57,null],[11,"deserialize_u64","","",57,null],[11,"deserialize_isize","","",57,null],[11,"deserialize_i8","","",57,null],[11,"deserialize_i16","","",57,null],[11,"deserialize_i32","","",57,null],[11,"deserialize_i64","","",57,null],[11,"deserialize_f32","","",57,null],[11,"deserialize_f64","","",57,null],[11,"deserialize_char","","",57,null],[11,"deserialize_str","","",57,null],[11,"deserialize_string","","",57,null],[11,"deserialize_unit","","",57,null],[11,"deserialize_option","","",57,null],[11,"deserialize_seq","","",57,null],[11,"deserialize_seq_fixed_size","","",57,null],[11,"deserialize_bytes","","",57,null],[11,"deserialize_map","","",57,null],[11,"deserialize_unit_struct","","",57,null],[11,"deserialize_newtype_struct","","",57,null],[11,"deserialize_tuple_struct","","",57,null],[11,"deserialize_struct","","",57,null],[11,"deserialize_struct_field","","",57,null],[11,"deserialize_tuple","","",57,null],[11,"deserialize_enum","","",57,null],[11,"deserialize_ignored_any","","",57,null],[8,"Error","serde::de","`Error` is a trait that allows a `Deserialize` to generically create a\n`Deserializer` error.",null,null],[10,"custom","","Raised when there is general error when deserializing a type.",58,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[10,"end_of_stream","","Raised when a `Deserialize` type unexpectedly hit the end of the stream.",58,{"inputs":[],"output":{"name":"self"}}],[11,"invalid_type","","Raised when a `Deserialize` was passed an incorrect type.",58,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Deserialize` was passed an incorrect value.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"invalid_length","","Raised when a fixed sized sequence or map was passed in the wrong amount of arguments.",58,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"unknown_variant","","Raised when a `Deserialize` enum type received an unexpected variant.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"unknown_field","","Raised when a `Deserialize` struct type received an unexpected struct field.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"missing_field","","raised when a `deserialize` struct type did not receive a field.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the\nsame struct field.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Deserialize","","`Deserialize` represents a type that can be deserialized.",null,null],[10,"deserialize","","Deserialize this value given this `Deserializer`.",59,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","`Deserializer` is a trait that can deserialize values by threading a `Visitor` trait through a\nvalue. It supports two entry point styles which enables different kinds of deserialization.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",60,null],[10,"deserialize","","This method walks a visitor through a value as it is being deserialized.",60,null],[10,"deserialize_bool","","This method hints that the `Deserialize` type is expecting a `bool` value.",60,null],[10,"deserialize_usize","","This method hints that the `Deserialize` type is expecting an `usize` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u8","","This method hints that the `Deserialize` type is expecting an `u8` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u16","","This method hints that the `Deserialize` type is expecting an `u16` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u32","","This method hints that the `Deserialize` type is expecting an `u32` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u64","","This method hints that the `Deserialize` type is expecting an `u64` value.",60,null],[10,"deserialize_isize","","This method hints that the `Deserialize` type is expecting an `isize` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i8","","This method hints that the `Deserialize` type is expecting an `i8` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i16","","This method hints that the `Deserialize` type is expecting an `i16` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i32","","This method hints that the `Deserialize` type is expecting an `i32` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i64","","This method hints that the `Deserialize` type is expecting an `i64` value.",60,null],[10,"deserialize_f32","","This method hints that the `Deserialize` type is expecting a `f32` value.\nA reasonable default is to forward to `deserialize_f64`.",60,null],[10,"deserialize_f64","","This method hints that the `Deserialize` type is expecting a `f64` value.",60,null],[10,"deserialize_char","","This method hints that the `Deserialize` type is expecting a `char` value.",60,null],[10,"deserialize_str","","This method hints that the `Deserialize` type is expecting a `&amp;str` value.",60,null],[10,"deserialize_string","","This method hints that the `Deserialize` type is expecting a `String` value.",60,null],[10,"deserialize_unit","","This method hints that the `Deserialize` type is expecting an `unit` value.",60,null],[10,"deserialize_option","","This method hints that the `Deserialize` type is expecting an `Option` value. This allows\ndeserializers that encode an optional value as a nullable value to convert the null value\ninto a `None`, and a regular value as `Some(value)`.",60,null],[10,"deserialize_seq","","This method hints that the `Deserialize` type is expecting a sequence value. This allows\ndeserializers to parse sequences that aren&#39;t tagged as sequences.",60,null],[10,"deserialize_seq_fixed_size","","This method hints that the `Deserialize` type is expecting a fixed size array. This allows\ndeserializers to parse arrays that aren&#39;t tagged as arrays.",60,null],[10,"deserialize_bytes","","This method hints that the `Deserialize` type is expecting a `Vec&lt;u8&gt;`. This allows\ndeserializers that provide a custom byte vector serialization to properly deserialize the\ntype.",60,null],[10,"deserialize_map","","This method hints that the `Deserialize` type is expecting a map of values. This allows\ndeserializers to parse sequences that aren&#39;t tagged as maps.",60,null],[10,"deserialize_unit_struct","","This method hints that the `Deserialize` type is expecting a unit struct. This allows\ndeserializers to a unit struct that aren&#39;t tagged as a unit struct.",60,null],[10,"deserialize_newtype_struct","","This method hints that the `Deserialize` type is expecting a newtype struct. This allows\ndeserializers to a newtype struct that aren&#39;t tagged as a newtype struct.\nA reasonable default is to simply deserialize the expected value directly.",60,null],[10,"deserialize_tuple_struct","","This method hints that the `Deserialize` type is expecting a tuple struct. This allows\ndeserializers to parse sequences that aren&#39;t tagged as sequences.",60,null],[10,"deserialize_struct","","This method hints that the `Deserialize` type is expecting a struct. This allows\ndeserializers to parse sequences that aren&#39;t tagged as maps.",60,null],[10,"deserialize_struct_field","","This method hints that the `Deserialize` type is expecting some sort of struct field\nname.  This allows deserializers to choose between &amp;str, usize, or &amp;[u8] to properly\ndeserialize a struct field.",60,null],[10,"deserialize_tuple","","This method hints that the `Deserialize` type is expecting a tuple value. This allows\ndeserializers that provide a custom tuple serialization to properly deserialize the type.",60,null],[10,"deserialize_enum","","This method hints that the `Deserialize` type is expecting an enum value. This allows\ndeserializers that provide a custom enumeration serialization to properly deserialize the\ntype.",60,null],[10,"deserialize_ignored_any","","This method hints that the `Deserialize` type needs to deserialize a value whose type\ndoesn&#39;t matter because it is ignored.",60,null],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",null,null],[16,"Value","","The value produced by this visitor.",61,null],[11,"visit_bool","","`visit_bool` deserializes a `bool` into a `Value`.",61,null],[11,"visit_isize","","`visit_isize` deserializes a `isize` into a `Value`.",61,null],[11,"visit_i8","","`visit_i8` deserializes a `i8` into a `Value`.",61,null],[11,"visit_i16","","`visit_i16` deserializes a `i16` into a `Value`.",61,null],[11,"visit_i32","","`visit_i32` deserializes a `i32` into a `Value`.",61,null],[11,"visit_i64","","`visit_i64` deserializes a `i64` into a `Value`.",61,null],[11,"visit_usize","","`visit_usize` deserializes a `usize` into a `Value`.",61,null],[11,"visit_u8","","`visit_u8` deserializes a `u8` into a `Value`.",61,null],[11,"visit_u16","","`visit_u16` deserializes a `u16` into a `Value`.",61,null],[11,"visit_u32","","`visit_u32` deserializes a `u32` into a `Value`.",61,null],[11,"visit_u64","","`visit_u64` deserializes a `u64` into a `Value`.",61,null],[11,"visit_f32","","`visit_f32` deserializes a `f32` into a `Value`.",61,null],[11,"visit_f64","","`visit_f64` deserializes a `f64` into a `Value`.",61,null],[11,"visit_char","","`visit_char` deserializes a `char` into a `Value`.",61,null],[11,"visit_str","","`visit_str` deserializes a `&amp;str` into a `Value`.",61,null],[11,"visit_string","","`visit_string` deserializes a `String` into a `Value`.  This allows a deserializer to avoid\na copy if it is deserializing a string from a `String` type.  By default it passes a `&amp;str`\nto the `visit_str` method.",61,null],[11,"visit_unit","","`visit_unit` deserializes a `()` into a `Value`.",61,null],[11,"visit_unit_struct","","`visit_unit_struct` deserializes a unit struct into a `Value`.",61,null],[11,"visit_none","","`visit_none` deserializes a none value into a `Value`.",61,null],[11,"visit_some","","`visit_some` deserializes a value into a `Value`.",61,null],[11,"visit_newtype_struct","","`visit_newtype_struct` deserializes a value into a `Value`.",61,null],[11,"visit_seq","","`visit_seq` deserializes a `SeqVisitor` into a `Value`.",61,null],[11,"visit_map","","`visit_map` deserializes a `MapVisitor` into a `Value`.",61,null],[11,"visit_bytes","","`visit_bytes` deserializes a `&amp;[u8]` into a `Value`.",61,null],[11,"visit_byte_buf","","`visit_byte_buf` deserializes a `Vec&lt;u8&gt;` into a `Value`.",61,null],[8,"SeqVisitor","","`SeqVisitor` visits each item in a sequence.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",62,null],[10,"visit","","This returns a `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there\nare no more remaining items.",62,null],[10,"end","","This signals to the `SeqVisitor` that the `Visitor` does not expect any more items.",62,null],[11,"size_hint","","Return the lower and upper bound of items remaining in the sequence.",62,null],[8,"MapVisitor","","`MapVisitor` visits each item in a sequence.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",63,null],[11,"visit","","This returns a `Ok(Some((key, value)))` for the next (key-value) pair in the map, or\n`Ok(None)` if there are no more remaining items.",63,null],[10,"visit_key","","This returns a `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no\nmore remaining items.",63,null],[10,"visit_value","","This returns a `Ok(value)` for the next value in the map.",63,null],[10,"end","","This signals to the `MapVisitor` that the `Visitor` does not expect any more items.",63,null],[11,"size_hint","","Return the lower and upper bound of items remaining in the sequence.",63,null],[11,"missing_field","","Report that the struct has a field that wasn&#39;t deserialized",63,null],[8,"EnumVisitor","","`EnumVisitor` is a visitor that is created by the `Deserialize` and passed to the\n`Deserializer` in order to deserialize enums.",null,null],[16,"Value","","The value produced by this visitor.",64,null],[10,"visit","","Visit the specific variant with the `VariantVisitor`.",64,null],[8,"VariantVisitor","","`VariantVisitor` is a visitor that is created by the `Deserializer` and passed to the\n`Deserialize` in order to deserialize a specific enum variant.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",65,null],[10,"visit_variant","","`visit_variant` is called to identify which variant to deserialize.",65,null],[11,"visit_unit","","`visit_unit` is called when deserializing a variant with no values.",65,null],[10,"visit_newtype","","`visit_newtype` is called when deserializing a variant with a single value.\nA good default is often to use the `visit_tuple` method to deserialize a `(value,)`.",65,null],[10,"visit_tuple","","`visit_tuple` is called when deserializing a tuple-like variant.\nIf no tuple variants are expected, yield a\n`Err(serde::de::Error::invalid_type(serde::de::Type::TupleVariant))`",65,null],[10,"visit_struct","","`visit_struct` is called when deserializing a struct-like variant.\nIf no struct variants are expected, yield a\n`Err(serde::de::Error::invalid_type(serde::de::Type::StructVariant))`",65,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[0,"iter","serde","Module that contains helper iterators.",null,null],[3,"LineColIterator","serde::iter","Iterator over a byte stream that tracks the current position&#39;s line and column.",null,null],[11,"new","","Construct a new `LineColIterator&lt;Iter&gt;`.",66,{"inputs":[{"name":"iter"}],"output":{"name":"linecoliterator"}}],[11,"line","","Report the current line inside the iterator.",66,null],[11,"col","","Report the current column inside the iterator.",66,null],[11,"get_ref","","Gets a reference to the underlying iterator.",66,null],[11,"get_mut","","Gets a mutable reference to the underlying iterator.",66,null],[11,"into_inner","","Unwraps this `LineColIterator`, returning the underlying iterator.",66,null],[11,"peek","","peeks at the next value",66,null],[11,"next","","",66,null],[0,"ser","serde","Generic serialization framework.\n# For Developers who want to serialize objects\nImplement the `Serialize` trait for the type of objects you want to serialize. Call methods of\nthe `serializer` object. For which methods to call and how to do so, look at the documentation\nof the `Serializer` trait.",null,null],[0,"impls","serde::ser","Implementations for all of Rust&#39;s builtin types. Tuples implement the `Serialize` trait if they\nhave at most 16 fields. Arrays implement the `Serialize` trait if their length is 32 or less.\nYou can always forward array serialization to slice serialization, which works for any length.\nLong tuples are best replaced by tuple structs, for which you can use `derive(Serialize)`. In\nthat case the number of fields is irrelevant.",null,null],[8,"Error","","`Error` is a trait that allows a `Serialize` to generically create a\n`Serializer` error.",null,null],[10,"custom","","Raised when there is a general error when serializing a type.",67,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Serialize` was passed an incorrect value.",67,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Serialize","","A trait that describes a type that can be serialized by a `Serializer`.",null,null],[10,"serialize","","Serializes this value into this serializer.",68,null],[8,"Serializer","","A trait that describes a type that can serialize a stream of values into the underlying format.",null,null],[16,"Error","","The error type that can be returned if some error occurs during serialization.",69,null],[16,"SeqState","","A state object that is initialized by `serialize_seq`, passed to\n`serialize_seq_elt`, and consumed by `serialize_seq_end`. Use `()` if no\nstate is required.",69,null],[16,"TupleState","","A state object that is initialized by `serialize_tuple`, passed to\n`serialize_tuple_elt`, and consumed by `serialize_tuple_end`. Use `()`\nif no state is required.",69,null],[16,"TupleStructState","","A state object that is initialized by `serialize_tuple_struct`, passed\nto `serialize_tuple_struct_elt`, and consumed by\n`serialize_tuple_struct_end`. Use `()` if no state is required.",69,null],[16,"TupleVariantState","","A state object that is initialized by `serialize_tuple_variant`, passed\nto `serialize_tuple_variant_elt`, and consumed by\n`serialize_tuple_variant_end`. Use `()` if no state is required.",69,null],[16,"MapState","","A state object that is initialized by `serialize_map`, passed to\n`serialize_map_elt`, and consumed by `serialize_map_end`. Use `()` if no\nstate is required.",69,null],[16,"StructState","","A state object that is initialized by `serialize_struct`, passed to\n`serialize_struct_elt`, and consumed by `serialize_struct_end`. Use `()`\nif no state is required.",69,null],[16,"StructVariantState","","A state object that is initialized by `serialize_struct_variant`, passed\nto `serialize_struct_variant_elt`, and consumed by\n`serialize_struct_variant_end`. Use `()` if no state is required.",69,null],[10,"serialize_bool","","Serializes a `bool` value.",69,null],[10,"serialize_isize","","Serializes an `isize` value. If the format does not differentiate\nbetween `isize` and `i64`, a reasonable implementation would be to cast\nthe value to `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i8","","Serializes an `i8` value. If the format does not differentiate between\n`i8` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i16","","Serializes an `i16` value. If the format does not differentiate between\n`i16` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i32","","Serializes an `i32` value. If the format does not differentiate between\n`i32` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i64","","Serializes an `i64` value.",69,null],[10,"serialize_usize","","Serializes a `usize` value. If the format does not differentiate between\n`usize` and `u64`, a reasonable implementation would be to cast the\nvalue to `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u8","","Serializes a `u8` value. If the format does not differentiate between\n`u8` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u16","","Serializes a `u16` value. If the format does not differentiate between\n`u16` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u32","","Serializes a `u32` value. If the format does not differentiate between\n`u32` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u64","","`Serializes a `u64` value.",69,null],[10,"serialize_f32","","Serializes an `f32` value. If the format does not differentiate between\n`f32` and `f64`, a reasonable implementation would be to cast the value\nto `f64` and forward to `serialize_f64`.",69,null],[10,"serialize_f64","","Serializes an `f64` value.",69,null],[10,"serialize_char","","Serializes a character. If the format does not support characters,\nit is reasonable to serialize it as a single element `str` or a `u32`.",69,null],[10,"serialize_str","","Serializes a `&amp;str`.",69,null],[10,"serialize_bytes","","Enables serializers to serialize byte slices more compactly or more\nefficiently than other types of slices. If no efficient implementation\nis available, a reasonable implementation would be to forward to\n`serialize_seq`. If forwarded, the implementation looks usually just like this:\n```rust\nlet mut state = try!(self.serialize_seq(value));\nfor b in value {\n    try!(self.serialize_seq_elt(&amp;mut state, b));\n}\nself.serialize_seq_end(state)\n```",69,null],[10,"serialize_unit","","Serializes a `()` value. It&#39;s reasonable to just not serialize anything.",69,null],[10,"serialize_unit_struct","","Serializes a unit struct value. A reasonable implementation would be to\nforward to `serialize_unit`.",69,null],[10,"serialize_unit_variant","","Serializes a unit variant, otherwise known as a variant with no\narguments. A reasonable implementation would be to forward to\n`serialize_unit`.",69,null],[10,"serialize_newtype_struct","","Allows a tuple struct with a single element, also known as a newtype\nstruct, to be more efficiently serialized than a tuple struct with\nmultiple items. A reasonable implementation would be to forward to\n`serialize_tuple_struct` or to just serialize the inner value without wrapping.",69,null],[10,"serialize_newtype_variant","","Allows a variant with a single item to be more efficiently serialized\nthan a variant with multiple items. A reasonable implementation would be\nto forward to `serialize_tuple_variant`.",69,null],[10,"serialize_none","","Serializes a `None` value.",69,null],[10,"serialize_some","","Serializes a `Some(...)` value.",69,null],[10,"serialize_seq","","Begins to serialize a sequence. This call must be followed by zero or\nmore calls to `serialize_seq_elt`, then a call to `serialize_seq_end`.",69,null],[10,"serialize_seq_elt","","Serializes a sequence element. Must have previously called\n`serialize_seq`.",69,null],[10,"serialize_seq_end","","Finishes serializing a sequence.",69,null],[10,"serialize_seq_fixed_size","","Begins to serialize a sequence whose length will be known at\ndeserialization time. This call must be followed by zero or more calls\nto `serialize_seq_elt`, then a call to `serialize_seq_end`. A reasonable\nimplementation would be to forward to `serialize_seq`.",69,null],[10,"serialize_tuple","","Begins to serialize a tuple. This call must be followed by zero or more\ncalls to `serialize_tuple_elt`, then a call to `serialize_tuple_end`. A\nreasonable implementation would be to forward to `serialize_seq`.",69,null],[10,"serialize_tuple_elt","","Serializes a tuple element. Must have previously called\n`serialize_tuple`.",69,null],[10,"serialize_tuple_end","","Finishes serializing a tuple.",69,null],[10,"serialize_tuple_struct","","Begins to serialize a tuple struct. This call must be followed by zero\nor more calls to `serialize_tuple_struct_elt`, then a call to\n`serialize_tuple_struct_end`. A reasonable implementation would be to\nforward to `serialize_tuple`.",69,null],[10,"serialize_tuple_struct_elt","","Serializes a tuple struct element. Must have previously called\n`serialize_tuple_struct`.",69,null],[10,"serialize_tuple_struct_end","","Finishes serializing a tuple struct.",69,null],[10,"serialize_tuple_variant","","Begins to serialize a tuple variant. This call must be followed by zero\nor more calls to `serialize_tuple_variant_elt`, then a call to\n`serialize_tuple_variant_end`. A reasonable implementation would be to\nforward to `serialize_tuple_struct`.",69,null],[10,"serialize_tuple_variant_elt","","Serializes a tuple variant element. Must have previously called\n`serialize_tuple_variant`.",69,null],[10,"serialize_tuple_variant_end","","Finishes serializing a tuple variant.",69,null],[10,"serialize_map","","Begins to serialize a map. This call must be followed by zero or more\ncalls to `serialize_map_key` and `serialize_map_value`, then a call to\n`serialize_map_end`.",69,null],[10,"serialize_map_key","","Serialize a map key. Must have previously called `serialize_map`.",69,null],[10,"serialize_map_value","","Serialize a map value. Must have previously called `serialize_map`.",69,null],[10,"serialize_map_end","","Finishes serializing a map.",69,null],[10,"serialize_struct","","Begins to serialize a struct. This call must be followed by zero or more\ncalls to `serialize_struct_elt`, then a call to `serialize_struct_end`.",69,null],[10,"serialize_struct_elt","","Serializes a struct field. Must have previously called\n`serialize_struct`.",69,null],[10,"serialize_struct_end","","Finishes serializing a struct.",69,null],[10,"serialize_struct_variant","","Begins to serialize a struct variant. This call must be followed by zero\nor more calls to `serialize_struct_variant_elt`, then a call to\n`serialize_struct_variant_end`.",69,null],[10,"serialize_struct_variant_elt","","Serialize a struct variant element. Must have previously called\n`serialize_struct_variant`.",69,null],[10,"serialize_struct_variant_end","","Finishes serializing a struct variant.",69,null],[14,"forward_to_deserialize","serde","Helper to forward `Deserializer` methods to `Deserializer::deserialize`.\nEvery given method ignores all arguments and forwards to `deserialize`.\nNote that `deserialize_enum` simply returns an `Error::invalid_type`; a\nbetter approach is tracked in [serde-rs/serde#521][1].",null,null]],"paths":[[3,"ByteBuf"],[3,"ByteBufVisitor"],[3,"Bytes"],[4,"Type"],[3,"UnitVisitor"],[3,"BoolVisitor"],[3,"PhantomDataVisitor"],[3,"BinaryHeapVisitor"],[3,"BTreeSetVisitor"],[3,"LinkedListVisitor"],[3,"HashSetVisitor"],[3,"VecVisitor"],[3,"VecDequeVisitor"],[3,"TupleVisitor1"],[3,"TupleVisitor2"],[3,"TupleVisitor3"],[3,"TupleVisitor4"],[3,"TupleVisitor5"],[3,"TupleVisitor6"],[3,"TupleVisitor7"],[3,"TupleVisitor8"],[3,"TupleVisitor9"],[3,"TupleVisitor10"],[3,"TupleVisitor11"],[3,"TupleVisitor12"],[3,"TupleVisitor13"],[3,"TupleVisitor14"],[3,"TupleVisitor15"],[3,"TupleVisitor16"],[3,"BTreeMapVisitor"],[3,"HashMapVisitor"],[3,"IgnoredAny"],[4,"Error"],[8,"ValueDeserializer"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U32Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"SeqDeserializer"],[3,"SeqVisitorDeserializer"],[3,"MapDeserializer"],[3,"MapVisitorDeserializer"],[3,"BytesDeserializer"],[3,"ByteBufDeserializer"],[8,"Error"],[8,"Deserialize"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqVisitor"],[8,"MapVisitor"],[8,"EnumVisitor"],[8,"VariantVisitor"],[3,"LineColIterator"],[8,"Error"],[8,"Serialize"],[8,"Serializer"]]};
searchIndex["native_tls"] = {"doc":"An abstraction over platform-specific TLS implementations.","items":[[3,"Error","native_tls","An error returned from the TLS implementation.",null,null],[3,"Pkcs12","","A PKCS #12 archive.",null,null],[3,"MidHandshakeTlsStream","","A TLS stream which has been interrupted midway through the handshake process.",null,null],[3,"TlsConnectorBuilder","","A builder for `TlsConnector`s.",null,null],[3,"TlsConnector","","A builder for client-side TLS connections.",null,null],[3,"TlsAcceptorBuilder","","A builder for `TlsAcceptor`s.",null,null],[3,"TlsAcceptor","","A builder for server-side TLS connections.",null,null],[3,"TlsStream","","A stream managing a TLS session.",null,null],[4,"HandshakeError","","An error returned from `ClientBuilder::handshake`.",null,null],[13,"Failure","","A fatal error.",0,null],[13,"Interrupted","","A stream interrupted midway through the handshake process due to a\n`WouldBlock` error.",0,null],[4,"Protocol","","SSL/TLS protocol versions.",null,null],[13,"Sslv3","","The SSL 3.0 protocol.",1,null],[13,"Tlsv10","","The TLS 1.0 protocol.",1,null],[13,"Tlsv11","","The TLS 1.1 protocol.",1,null],[13,"Tlsv12","","The TLS 1.2 protocol.",1,null],[0,"backend","","TLS backend-specific functionality.",null,null],[0,"security_framework","native_tls::backend","Security Framework-specific functionality.",null,null],[8,"TlsStreamExt","native_tls::backend::security_framework","Security Framework-specific extensions to `TlsStream`.",null,null],[10,"raw_stream","","Returns a shared reference to the Security Framework `SslStream`.",2,null],[10,"raw_stream_mut","","Returns a mutable reference to the Security Framework `SslStream`.",2,null],[8,"TlsConnectorBuilderExt","","Security Framework-specific extensions to `TlsConnectorBuilder`.",null,null],[10,"anchor_certificates","","Specifies the set of additional root certificates to trust when\nverifying the server&#39;s certificate.",3,null],[8,"ErrorExt","","Security Framework-specific extensions to `Error`",null,null],[10,"security_framework_error","","Extract the underlying Security Framework error for inspection.",4,null],[11,"raw_stream","native_tls","",5,null],[11,"raw_stream_mut","","",5,null],[11,"anchor_certificates","","",6,null],[11,"security_framework_error","","",7,null],[6,"Result","","A typedef of the result type returned by many methods.",null,null],[11,"description","","",7,null],[11,"cause","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"from","","",7,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_der","","Parses a DER-formatted PKCS #12 archive, using the specified password to decrypt the key.",8,null],[11,"fmt","","",9,null],[11,"get_ref","","Returns a shared reference to the inner stream.",9,null],[11,"get_mut","","Returns a mutable reference to the inner stream.",9,null],[11,"handshake","","Restarts the handshake process.",9,null],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"handshakeerror"}],"output":{"name":"handshakeerror"}}],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"identity","","Sets the identity to be used for client certificate authentication.",6,null],[11,"supported_protocols","","Sets the protocols which the connector will support.",6,null],[11,"build","","Consumes the builder, returning a `TlsConnector`.",6,null],[11,"builder","","Returns a new builder for a `TlsConnector`.",10,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Initiates a TLS handshake.",10,null],[11,"supported_protocols","","Sets the protocols which the acceptor will support.",11,null],[11,"build","","Consumes the builder, returning a `TlsAcceptor`.",11,null],[11,"builder","","Returns a new builder for a `TlsAcceptor`.",12,{"inputs":[{"name":"pkcs12"}],"output":{"name":"result"}}],[11,"accept","","Initiates a TLS handshake.",12,null],[11,"fmt","","",5,null],[11,"get_ref","","Returns a shared reference to the inner stream.",5,null],[11,"get_mut","","Returns a mutable reference to the inner stream.",5,null],[11,"buffered_read_size","","Returns the number of bytes that can be read without resulting in any\nnetwork calls.",5,null],[11,"shutdown","","Shuts down the TLS session.",5,null],[11,"read","","",5,null],[11,"write","","",5,null],[11,"flush","","",5,null]],"paths":[[4,"HandshakeError"],[4,"Protocol"],[8,"TlsStreamExt"],[8,"TlsConnectorBuilderExt"],[8,"ErrorExt"],[3,"TlsStream"],[3,"TlsConnectorBuilder"],[3,"Error"],[3,"Pkcs12"],[3,"MidHandshakeTlsStream"],[3,"TlsConnector"],[3,"TlsAcceptorBuilder"],[3,"TlsAcceptor"]]};
searchIndex["security_framework"] = {"doc":"Wrappers around the OSX Security Framework.","items":[[0,"base","security_framework","Support types for other modules.",null,null],[3,"Error","security_framework::base","A Security Framework error.",null,null],[6,"Result","","A `Result` type commonly returned by functions.",null,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"from_code","","Creates a new `Error` from a status code.",0,{"inputs":[{"name":"osstatus"}],"output":{"name":"error"}}],[11,"message","","Returns a string describing the current error, if available.",0,null],[11,"code","","Returns the code of the current error.",0,null],[11,"from","","",0,{"inputs":[{"name":"osstatus"}],"output":{"name":"error"}}],[11,"fmt","","",0,null],[11,"description","","",0,null],[0,"certificate","security_framework","Certificate support.",null,null],[3,"SecCertificate","security_framework::certificate","A type representing a certificate.",null,null],[11,"drop","","",1,null],[11,"clone","","",1,null],[11,"as_concrete_TypeRef","","",1,null],[11,"wrap_under_get_rule","","",1,{"inputs":[{"name":"seccertificateref"}],"output":{"name":"seccertificate"}}],[11,"as_CFTypeRef","","",1,null],[11,"wrap_under_create_rule","","",1,{"inputs":[{"name":"seccertificateref"}],"output":{"name":"seccertificate"}}],[11,"type_id","","",1,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"fmt","","",1,null],[11,"from_der","","Creates a `SecCertificate` from DER encoded certificate data.",1,null],[11,"to_der","","Returns DER encoded data describing this certificate.",1,null],[11,"subject_summary","","Returns a human readable summary of this certificate.",1,null],[0,"cipher_suite","security_framework","Cipher Suites supported by Secure Transport",null,null],[4,"CipherSuite","security_framework::cipher_suite","Specifies cipher suites",null,null],[13,"SSL_RSA_EXPORT_WITH_RC4_40_MD5","","",2,null],[13,"SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5","","",2,null],[13,"SSL_RSA_WITH_IDEA_CBC_SHA","","",2,null],[13,"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA","","",2,null],[13,"SSL_RSA_WITH_DES_CBC_SHA","","",2,null],[13,"SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA","","",2,null],[13,"SSL_DH_DSS_WITH_DES_CBC_SHA","","",2,null],[13,"SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA","","",2,null],[13,"SSL_DH_RSA_WITH_DES_CBC_SHA","","",2,null],[13,"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA","","",2,null],[13,"SSL_DHE_DSS_WITH_DES_CBC_SHA","","",2,null],[13,"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","","",2,null],[13,"SSL_DHE_RSA_WITH_DES_CBC_SHA","","",2,null],[13,"SSL_DH_anon_EXPORT_WITH_RC4_40_MD5","","",2,null],[13,"SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA","","",2,null],[13,"SSL_DH_anon_WITH_DES_CBC_SHA","","",2,null],[13,"SSL_FORTEZZA_DMS_WITH_NULL_SHA","","",2,null],[13,"SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA","","",2,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_ECDH_ECDSA_WITH_NULL_SHA","","",2,null],[13,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA","","",2,null],[13,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_ECDHE_ECDSA_WITH_NULL_SHA","","",2,null],[13,"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA","","",2,null],[13,"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_ECDH_RSA_WITH_NULL_SHA","","",2,null],[13,"TLS_ECDH_RSA_WITH_RC4_128_SHA","","",2,null],[13,"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_ECDHE_RSA_WITH_NULL_SHA","","",2,null],[13,"TLS_ECDHE_RSA_WITH_RC4_128_SHA","","",2,null],[13,"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_ECDH_anon_WITH_NULL_SHA","","",2,null],[13,"TLS_ECDH_anon_WITH_RC4_128_SHA","","",2,null],[13,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_ECDH_anon_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_ECDH_anon_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_NULL_WITH_NULL_NULL","","",2,null],[13,"TLS_RSA_WITH_NULL_MD5","","",2,null],[13,"TLS_RSA_WITH_NULL_SHA","","",2,null],[13,"TLS_RSA_WITH_RC4_128_MD5","","",2,null],[13,"TLS_RSA_WITH_RC4_128_SHA","","",2,null],[13,"TLS_RSA_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_RSA_WITH_NULL_SHA256","","",2,null],[13,"TLS_RSA_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_RSA_WITH_AES_256_CBC_SHA256","","",2,null],[13,"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_DH_DSS_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_DH_RSA_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_DH_DSS_WITH_AES_256_CBC_SHA256","","",2,null],[13,"TLS_DH_RSA_WITH_AES_256_CBC_SHA256","","",2,null],[13,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256","","",2,null],[13,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256","","",2,null],[13,"TLS_DH_anon_WITH_RC4_128_MD5","","",2,null],[13,"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_DH_anon_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_DH_anon_WITH_AES_256_CBC_SHA256","","",2,null],[13,"TLS_PSK_WITH_RC4_128_SHA","","",2,null],[13,"TLS_PSK_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_DHE_PSK_WITH_RC4_128_SHA","","",2,null],[13,"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_RSA_PSK_WITH_RC4_128_SHA","","",2,null],[13,"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA","","",2,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA","","",2,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA","","",2,null],[13,"TLS_PSK_WITH_NULL_SHA","","",2,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA","","",2,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA","","",2,null],[13,"TLS_RSA_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_RSA_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_DH_RSA_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_DH_RSA_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_DH_DSS_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_DH_DSS_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_DH_anon_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_DH_anon_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_PSK_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_PSK_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_PSK_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_PSK_WITH_AES_256_CBC_SHA384","","",2,null],[13,"TLS_PSK_WITH_NULL_SHA256","","",2,null],[13,"TLS_PSK_WITH_NULL_SHA384","","",2,null],[13,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384","","",2,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA256","","",2,null],[13,"TLS_DHE_PSK_WITH_NULL_SHA384","","",2,null],[13,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384","","",2,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA256","","",2,null],[13,"TLS_RSA_PSK_WITH_NULL_SHA384","","",2,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384","","",2,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384","","",2,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384","","",2,null],[13,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256","","",2,null],[13,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384","","",2,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256","","",2,null],[13,"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384","","",2,null],[13,"TLS_EMPTY_RENEGOTIATION_INFO_SCSV","","",2,null],[13,"SSL_RSA_WITH_RC2_CBC_MD5","","",2,null],[13,"SSL_RSA_WITH_IDEA_CBC_MD5","","",2,null],[13,"SSL_RSA_WITH_DES_CBC_MD5","","",2,null],[13,"SSL_RSA_WITH_3DES_EDE_CBC_MD5","","",2,null],[13,"SSL_NO_SUCH_CIPHERSUITE","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[0,"identity","security_framework","Identity support.",null,null],[3,"SecIdentity","security_framework::identity","A type representing an identity.",null,null],[11,"drop","","",3,null],[11,"clone","","",3,null],[11,"as_concrete_TypeRef","","",3,null],[11,"wrap_under_get_rule","","",3,{"inputs":[{"name":"secidentityref"}],"output":{"name":"secidentity"}}],[11,"as_CFTypeRef","","",3,null],[11,"wrap_under_create_rule","","",3,{"inputs":[{"name":"secidentityref"}],"output":{"name":"secidentity"}}],[11,"type_id","","",3,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"fmt","","",3,null],[11,"certificate","","Returns the certificate corresponding to this identity.",3,null],[11,"private_key","","Returns the private key corresponding to this identity.",3,null],[0,"import_export","security_framework","Security Framework type import/export support.",null,null],[3,"ImportedIdentity","security_framework::import_export","Information about an imported identity.",null,null],[12,"label","","The label of the identity.",4,null],[12,"key_id","","The ID of the identity. Typically the SHA-1 hash of the public key.",4,null],[12,"trust","","A `SecTrust` object set up to validate this identity.",4,null],[12,"cert_chain","","A certificate chain validating this identity.",4,null],[12,"identity","","The identity itself.",4,null],[3,"Pkcs12ImportOptions","","A builder type to import an identity from PKCS#12 formatted data.",null,null],[11,"default","","",5,{"inputs":[],"output":{"name":"pkcs12importoptions"}}],[11,"new","","Creates a new builder with default options.",5,{"inputs":[],"output":{"name":"pkcs12importoptions"}}],[11,"passphrase","","Specifies the passphrase to be used to decrypt the data.",5,null],[11,"keychain","","Deprecated",5,null],[11,"access","","Deprecated",5,null],[11,"import","","Imports identities from PKCS#12 encoded data.",5,null],[0,"item","security_framework","Support to search for items in a keychain.",null,null],[3,"ItemSearchOptions","security_framework::item","A builder type to search for items in keychains.",null,null],[3,"SearchResult","","An individual search result.",null,null],[12,"reference","","A reference to the Security Framework object, if asked for.",6,null],[4,"ItemClass","","Specifies the type of items to search for.",null,null],[13,"GenericPassword","","Look for `SecKeychainItem`s corresponding to generic passwords.",7,null],[13,"InternetPassword","","Look for `SecKeychainItem`s corresponding to internet passwords.",7,null],[13,"Certificate","","Look for `SecCertificate`s.",7,null],[13,"Key","","Look for `SecKey`s.",7,null],[13,"Identity","","Look for `SecIdentity`s.",7,null],[4,"Reference","","An enum including all objects which can be found by `ItemSearchOptions`.",null,null],[13,"Identity","","A `SecIdentity`.",8,null],[13,"Certificate","","A `SecCertificate`.",8,null],[13,"Key","","A `SecKey`.",8,null],[13,"KeychainItem","","A `SecKeychainItem`.",8,null],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"default","","",9,{"inputs":[],"output":{"name":"itemsearchoptions"}}],[11,"new","","Creates a new builder with default options.",9,{"inputs":[],"output":{"name":"itemsearchoptions"}}],[11,"class","","Search only for items of the specified class.",9,null],[11,"keychains","","Deprecated.",9,null],[11,"load_refs","","Load Security Framework objects (`SecCertificate`, `SecKey`, etc) for\nthe results.",9,null],[11,"limit","","Limit the number of search results.",9,null],[11,"label","","Search for an item with the given label.",9,null],[11,"search","","Search for objects.",9,null],[11,"fmt","","",8,null],[11,"fmt","","",6,null],[0,"key","security_framework","Encryption key support",null,null],[3,"SecKey","security_framework::key","A type representing an encryption key.",null,null],[11,"drop","","",10,null],[11,"clone","","",10,null],[11,"as_concrete_TypeRef","","",10,null],[11,"wrap_under_get_rule","","",10,{"inputs":[{"name":"seckeyref"}],"output":{"name":"seckey"}}],[11,"as_CFTypeRef","","",10,null],[11,"wrap_under_create_rule","","",10,{"inputs":[{"name":"seckeyref"}],"output":{"name":"seckey"}}],[11,"type_id","","",10,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"fmt","","",10,null],[0,"os","security_framework","OS specific extensions.",null,null],[0,"macos","security_framework::os","OSX specific extensions.",null,null],[0,"access","security_framework::os::macos","Access control functionality.",null,null],[3,"SecAccess","security_framework::os::macos::access","A type representing access control settings.",null,null],[11,"drop","","",11,null],[11,"clone","","",11,null],[11,"as_concrete_TypeRef","","",11,null],[11,"wrap_under_get_rule","","",11,{"inputs":[{"name":"secaccessref"}],"output":{"name":"secaccess"}}],[11,"as_CFTypeRef","","",11,null],[11,"wrap_under_create_rule","","",11,{"inputs":[{"name":"secaccessref"}],"output":{"name":"secaccess"}}],[11,"type_id","","",11,{"inputs":[],"output":{"name":"cftypeid"}}],[0,"certificate","security_framework::os::macos","OSX specific extensions to certificate functionality.",null,null],[8,"SecCertificateExt","security_framework::os::macos::certificate","An extension trait adding OSX specific functionality to `SecCertificate`.",null,null],[10,"common_name","","Returns the common name associated with the certificate.",12,null],[10,"public_key","","Returns the public key associated with the certificate.",12,null],[11,"common_name","security_framework::certificate","",1,null],[11,"public_key","","",1,null],[0,"digest_transform","security_framework::os::macos","Digest Transform support",null,null],[3,"Builder","security_framework::os::macos::digest_transform","A builder for digest transform operations.",null,null],[4,"DigestType","","A type of digest.",null,null],[13,"HmacMd5","","",13,null],[13,"HmacSha1","","",13,null],[13,"HmacSha2","","",13,null],[13,"Md2","","",13,null],[13,"Md4","","",13,null],[13,"Md5","","",13,null],[13,"Sha1","","",13,null],[13,"Sha2","","",13,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"default","","",14,{"inputs":[],"output":{"name":"builder"}}],[11,"new","","Returns a new builder with default settings.",14,{"inputs":[],"output":{"name":"builder"}}],[11,"type_","","Sets the type of digest to perform.",14,null],[11,"length","","Sets the output length of the digest.",14,null],[11,"hmac_key","","Sets the key used for HMAC digests.",14,null],[11,"execute","","Computes the digest of the data.",14,null],[0,"encrypt_transform","security_framework::os::macos","Encryption and Decryption transform support.",null,null],[3,"Builder","security_framework::os::macos::encrypt_transform","A builder for encryption and decryption transform operations.",null,null],[4,"Padding","","The padding scheme to use for encryption.",null,null],[13,"None","","Do not pad.",15,null],[13,"Pkcs1","","Use PKCS#1 padding.",15,null],[13,"Pkcs5","","Use PKCS#5 padding.",15,null],[13,"Pkcs7","","Use PKCS#7 padding.",15,null],[13,"Oaep","","Use OAEP padding.",15,null],[4,"Mode","","The cipher mode to use.",null,null],[13,"None","","",16,null],[13,"Ecb","","",16,null],[13,"Cbc","","",16,null],[13,"Cfb","","",16,null],[13,"Ofb","","",16,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",16,null],[11,"clone","","",16,null],[11,"default","","",17,{"inputs":[],"output":{"name":"builder"}}],[11,"new","","Creates a new `Builder` with a default configuration.",17,{"inputs":[],"output":{"name":"builder"}}],[11,"padding","","Selects the padding scheme to use.",17,null],[11,"mode","","Selects the encryption mode to use.",17,null],[11,"iv","","Sets the initialization vector to use.",17,null],[11,"encrypt","","Encrypts data with a provided key.",17,null],[11,"decrypt","","Decrypts data with a provided key.",17,null],[0,"import_export","security_framework::os::macos","OSX specific extensions to import/export functionality.",null,null],[3,"ImportOptions","security_framework::os::macos::import_export","A builder type to import Security Framework types from serialized formats.",null,null],[3,"SecItems","","A type which holds items imported from serialized data.",null,null],[12,"certificates","","Imported certificates.",18,null],[12,"identities","","Imported identities.",18,null],[12,"keys","","Imported keys.",18,null],[8,"Pkcs12ImportOptionsExt","","An extension trait adding OSX specific functionality to `Pkcs12ImportOptions`.",null,null],[10,"keychain","","Specifies the keychain in which to import the identity.",19,null],[10,"access","","Specifies the access control to be associated with the identity.",19,null],[11,"keychain","security_framework::import_export","",5,null],[11,"access","","",5,null],[11,"default","security_framework::os::macos::import_export","",20,{"inputs":[],"output":{"name":"importoptions"}}],[11,"new","","Creates a new builder with default options.",20,{"inputs":[],"output":{"name":"importoptions"}}],[11,"filename","","Sets the filename from which the imported data came.",20,null],[11,"passphrase","","Sets the passphrase to be used to decrypt the imported data.",20,null],[11,"passphrase_bytes","","Sets the passphrase to be used to decrypt the imported data.",20,null],[11,"secure_passphrase","","If set, the user will be prompted to imput the passphrase used to\ndecrypt the imported data.",20,null],[11,"no_access_control","","If set, imported items will have no access controls imposed on them.",20,null],[11,"alert_title","","Sets the title of the alert popup used with the `secure_passphrase`\noption.",20,null],[11,"alert_prompt","","Sets the prompt of the alert popup used with the `secure_passphrase`\noption.",20,null],[11,"items","","Sets the object into which imported items will be placed.",20,null],[11,"keychain","","Sets the keychain into which items will be imported.",20,null],[11,"import","","Imports items from serialized data.",20,null],[11,"default","","",18,{"inputs":[],"output":{"name":"secitems"}}],[0,"item","security_framework::os::macos","OSX specific functionality for items.",null,null],[4,"KeyType","security_framework::os::macos::item","Types of `SecKey`s.",null,null],[13,"Rsa","","",21,null],[13,"Dsa","","",21,null],[13,"Aes","","",21,null],[13,"Des","","",21,null],[13,"TripleDes","","",21,null],[13,"Rc4","","",21,null],[13,"Cast","","",21,null],[8,"ItemSearchOptionsExt","","An extension trait adding OSX specific functionality to `ItemSearchOptions`.",null,null],[10,"keychains","","Search within the specified keychains.",22,null],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"keychains","security_framework::item","",9,null],[0,"key","security_framework::os::macos","OSX specific functionality for keys.",null,null],[8,"SecKeyExt","security_framework::os::macos::key","An extension trait adding OSX specific functionality to `SecKey`.",null,null],[10,"from_data","","Creates a new `SecKey` from a buffer containing key data.",23,{"inputs":[{"name":"keytype"},{"name":"cfdata"}],"output":{"name":"result"}}],[11,"from_data","security_framework::key","",10,{"inputs":[{"name":"keytype"},{"name":"cfdata"}],"output":{"name":"result"}}],[0,"keychain","security_framework::os::macos","Keychain support.",null,null],[3,"SecKeychain","security_framework::os::macos::keychain","A type representing a keychain.",null,null],[3,"CreateOptions","","A builder type to create new keychains.",null,null],[8,"SecKeychainExt","","Deprecated.",null,null],[10,"default","","Deprecated.",24,{"inputs":[],"output":{"name":"result"}}],[10,"open","","Deprecated.",24,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[10,"unlock","","Deprecated.",24,null],[11,"drop","","",25,null],[11,"clone","","",25,null],[11,"as_concrete_TypeRef","","",25,null],[11,"wrap_under_get_rule","","",25,{"inputs":[{"name":"seckeychainref"}],"output":{"name":"seckeychain"}}],[11,"as_CFTypeRef","","",25,null],[11,"wrap_under_create_rule","","",25,{"inputs":[{"name":"seckeychainref"}],"output":{"name":"seckeychain"}}],[11,"type_id","","",25,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"result"}}],[11,"open","","",25,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unlock","","",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"createoptions"}}],[11,"new","","Creates a new builder with default options.",26,{"inputs":[],"output":{"name":"createoptions"}}],[11,"password","","Sets the password to be used to protect the keychain.",26,null],[11,"prompt_user","","If set, the user will be prompted to provide a password used to\nprotect the keychain.",26,null],[11,"access","","Sets the access control applied to the keychain.",26,null],[11,"create","","Creates a new keychain at the specified location on the filesystem.",26,null],[0,"keychain_item","security_framework::os::macos","Keychain item support.",null,null],[3,"SecKeychainItem","security_framework::os::macos::keychain_item","A type representing a keychain item.",null,null],[11,"drop","","",27,null],[11,"clone","","",27,null],[11,"as_concrete_TypeRef","","",27,null],[11,"wrap_under_get_rule","","",27,{"inputs":[{"name":"seckeychainitemref"}],"output":{"name":"seckeychainitem"}}],[11,"as_CFTypeRef","","",27,null],[11,"wrap_under_create_rule","","",27,{"inputs":[{"name":"seckeychainitemref"}],"output":{"name":"seckeychainitem"}}],[11,"type_id","","",27,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"fmt","","",27,null],[0,"secure_transport","security_framework::os::macos","OSX specific extensions to Secure Transport functionality.",null,null],[8,"SslContextExt","security_framework::os::macos::secure_transport","An extension trait adding OSX specific functionality to the `SslContext`\ntype.",null,null],[10,"diffie_hellman_params","","Returns the DER encoded data specifying the parameters used for\nDiffie-Hellman key exchange.",28,null],[10,"set_diffie_hellman_params","","Sets the parameters used for Diffie-Hellman key exchange, in the\nDER format used by OpenSSL.",28,null],[10,"certificate_authorities","","Returns the certificate authorities used to validate client\ncertificates.",28,null],[10,"set_certificate_authorities","","Sets the certificate authorities used to validate client certificates,\nreplacing any that are already present.",28,null],[10,"add_certificate_authorities","","Adds certificate authorities used to validate client certificates.",28,null],[8,"MidHandshakeSslStreamExt","","An extension trait adding OSX specific functionality to the\n`MidHandshakeSslStream` type.",null,null],[0,"transform","security_framework::os::macos","Transform support",null,null],[3,"SecTransform","security_framework::os::macos::transform","A type representing a transform.",null,null],[11,"drop","","",29,null],[11,"clone","","",29,null],[11,"as_concrete_TypeRef","","",29,null],[11,"wrap_under_get_rule","","",29,{"inputs":[{"name":"sectransformref"}],"output":{"name":"sectransform"}}],[11,"as_CFTypeRef","","",29,null],[11,"wrap_under_create_rule","","",29,{"inputs":[{"name":"sectransformref"}],"output":{"name":"sectransform"}}],[11,"type_id","","",29,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"set_attribute","","Sets an attribute of the transform.",29,null],[11,"execute","","Executes the transform.",29,null],[0,"policy","security_framework","Security Policies support.",null,null],[3,"SecPolicy","security_framework::policy","A type representing a certificate validation policy.",null,null],[11,"drop","","",30,null],[11,"clone","","",30,null],[11,"as_concrete_TypeRef","","",30,null],[11,"wrap_under_get_rule","","",30,{"inputs":[{"name":"secpolicyref"}],"output":{"name":"secpolicy"}}],[11,"as_CFTypeRef","","",30,null],[11,"wrap_under_create_rule","","",30,{"inputs":[{"name":"secpolicyref"}],"output":{"name":"secpolicy"}}],[11,"type_id","","",30,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"fmt","","",30,null],[11,"for_ssl","","Creates a `SecPolicy` suitable for validating certificates for SSL.",30,{"inputs":[{"name":"protocolside"},{"name":"str"}],"output":{"name":"result"}}],[0,"random","security_framework","Randomness support.",null,null],[3,"SecRandom","security_framework::random","A source of random data.",null,null],[11,"default","","",31,{"inputs":[],"output":{"name":"secrandom"}}],[11,"copy_bytes","","Fills the buffer with cryptographically secure random bytes.",31,null],[0,"secure_transport","security_framework","SSL/TLS encryption support using Secure Transport.",null,null],[3,"MidHandshakeSslStream","security_framework::secure_transport","An SSL stream midway through the handshake process.",null,null],[3,"MidHandshakeClientBuilder","","An SSL stream midway through the handshake process.",null,null],[3,"SslContext","","A Secure Transport SSL/TLS context object.",null,null],[3,"SslStream","","A type implementing SSL/TLS encryption over an underlying stream.",null,null],[3,"ClientBuilder","","A builder type to simplify the creation of client side `SslStream`s.",null,null],[3,"ServerBuilder","","A builder type to simplify the creation of server-side `SslStream`s.",null,null],[4,"ProtocolSide","","Specifies a side of a TLS session.",null,null],[13,"Server","","The server side of the session.",32,null],[13,"Client","","The client side of the session.",32,null],[4,"ConnectionType","","Specifies the type of TLS session.",null,null],[13,"Stream","","A traditional TLS stream.",33,null],[13,"Datagram","","A DTLS session.",33,null],[4,"HandshakeError","","An error or intermediate state after a TLS handshake attempt.",null,null],[13,"Failure","","The handshake failed.",34,null],[13,"Interrupted","","The handshake was interrupted midway through.",34,null],[4,"ClientHandshakeError","","An error or intermediate state after a TLS handshake attempt.",null,null],[13,"Failure","","The handshake failed.",35,null],[13,"Interrupted","","The handshake was interrupted midway through.",35,null],[4,"SessionState","","Specifies the state of a TLS session.",null,null],[13,"Idle","","The session has not yet started.",36,null],[13,"Handshake","","The session is in the handshake process.",36,null],[13,"Connected","","The session is connected.",36,null],[13,"Closed","","The session has been terminated.",36,null],[13,"Aborted","","The session has been aborted due to an error.",36,null],[4,"SslAuthenticate","","Specifies a server&#39;s requirement for client certificates.",null,null],[13,"Never","","Do not request a client certificate.",37,null],[13,"Always","","Require a client certificate.",37,null],[13,"Try","","Request but do not require a client certificate.",37,null],[4,"SslClientCertificateState","","Specifies the state of client certificate processing.",null,null],[13,"None","","A client certificate has not been requested or sent.",38,null],[13,"Requested","","A client certificate has been requested but not recieved.",38,null],[13,"Sent","","A client certificate has been received and successfully validated.",38,null],[13,"Rejected","","A client certificate has been received but has failed to validate.",38,null],[4,"SslProtocol","","Specifies protocol versions.",null,null],[13,"Unknown","","No protocol has been or should be negotiated or specified; use the\ndefault.",39,null],[13,"Ssl3","","The SSL 3.0 protocol is preferred, though SSL 2.0 may be used if the\npeer does not support SSL 3.0.",39,null],[13,"Tls1","","The TLS 1.0 protocol is preferred, though lower versions may be used\nif the peer does not support TLS 1.0.",39,null],[13,"Tls11","","The TLS 1.1 protocol is preferred, though lower versions may be used\nif the peer does not support TLS 1.1.",39,null],[13,"Tls12","","The TLS 1.2 protocol is preferred, though lower versions may be used\nif the peer does not support TLS 1.2.",39,null],[13,"Ssl2","","Only the SSL 2.0 protocol is accepted.",39,null],[13,"Dtls1","","The DTLSv1 protocol is preferred.",39,null],[13,"Ssl3Only","","Only the SSL 3.0 protocol is accepted.",39,null],[13,"Tls1Only","","Only the TLS 1.0 protocol is accepted.",39,null],[13,"All","","All supported TLS/SSL versions are accepted.",39,null],[11,"fmt","","",32,null],[11,"clone","","",32,null],[11,"fmt","","",33,null],[11,"clone","","",33,null],[11,"fmt","","",34,null],[11,"from","","",34,{"inputs":[{"name":"error"}],"output":{"name":"handshakeerror"}}],[11,"fmt","","",35,null],[11,"from","","",35,{"inputs":[{"name":"error"}],"output":{"name":"clienthandshakeerror"}}],[11,"fmt","","",40,null],[11,"get_ref","","Returns a shared reference to the inner stream.",40,null],[11,"get_mut","","Returns a mutable reference to the inner stream.",40,null],[11,"context","","Returns a shared reference to the `SslContext` of the stream.",40,null],[11,"context_mut","","Returns a mutable reference to the `SslContext` of the stream.",40,null],[11,"server_auth_completed","","Returns `true` iff `break_on_server_auth` was set and the handshake has\nprogressed to that point.",40,null],[11,"client_cert_requested","","Returns `true` iff `break_on_cert_requested` was set and the handshake\nhas progressed to that point.",40,null],[11,"would_block","","Returns `true` iff the underlying stream returned an error with the\n`WouldBlock` kind.",40,null],[11,"reason","","Deprecated",40,null],[11,"error","","Returns the error which caused the handshake interruption.",40,null],[11,"handshake","","Restarts the handshake process.",40,null],[11,"fmt","","",41,null],[11,"get_ref","","Returns a shared reference to the inner stream.",41,null],[11,"get_mut","","Returns a mutable reference to the inner stream.",41,null],[11,"error","","Returns the error which caused the handshake interruption.",41,null],[11,"handshake","","Restarts the handshake process.",41,null],[11,"fmt","","",36,null],[11,"fmt","","",37,null],[11,"fmt","","",38,null],[11,"fmt","","",39,null],[11,"clone","","",39,null],[11,"eq","","",39,null],[11,"drop","","",42,null],[11,"as_concrete_TypeRef","","",42,null],[11,"wrap_under_get_rule","","",42,{"inputs":[{"name":"sslcontextref"}],"output":{"name":"sslcontext"}}],[11,"as_CFTypeRef","","",42,null],[11,"wrap_under_create_rule","","",42,{"inputs":[{"name":"sslcontextref"}],"output":{"name":"sslcontext"}}],[11,"type_id","","",42,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"fmt","","",42,null],[11,"new","","Creates a new `SslContext` for the specified side and type of SSL\nconnection.",42,{"inputs":[{"name":"protocolside"},{"name":"connectiontype"}],"output":{"name":"result"}}],[11,"set_peer_domain_name","","Sets the fully qualified domain name of the peer.",42,null],[11,"peer_domain_name","","Returns the peer domain name set by `set_peer_domain_name`.",42,null],[11,"set_certificate","","Sets the certificate to be used by this side of the SSL session.",42,null],[11,"set_peer_id","","Sets the peer ID of this session.",42,null],[11,"peer_id","","Returns the peer ID of this session.",42,null],[11,"supported_ciphers","","Returns the list of ciphers that are supported by Secure Transport.",42,null],[11,"enabled_ciphers","","Returns the list of ciphers that are eligible to be used for\nnegotiation.",42,null],[11,"set_enabled_ciphers","","Sets the list of ciphers that are eligible to be used for negotiation.",42,null],[11,"negotiated_cipher","","Returns the cipher being used by the session.",42,null],[11,"set_client_side_authenticate","","Sets the requirements for client certificates.",42,null],[11,"client_certificate_state","","Returns the state of client certificate processing.",42,null],[11,"peer_trust","","Returns the `SecTrust` object corresponding to the peer.",42,null],[11,"state","","Returns the state of the session.",42,null],[11,"negotiated_protocol_version","","Returns the protocol version being used by the session.",42,null],[11,"protocol_version_max","","Returns the maximum protocol version allowed by the session.",42,null],[11,"set_protocol_version_max","","Sets the maximum protocol version allowed by the session.",42,null],[11,"protocol_version_min","","Returns the minimum protocol version allowed by the session.",42,null],[11,"set_protocol_version_min","","Sets the minimum protocol version allowed by the session.",42,null],[11,"set_protocol_version_enabled","","Sets whether a protocol is enabled or not.",42,null],[11,"buffered_read_size","","Returns the number of bytes which can be read without triggering a\n`read` call in the underlying stream.",42,null],[11,"set_break_on_server_auth","","If enabled, the handshake process will pause and return instead of\nautomatically validating a server&#39;s certificate.",42,null],[11,"break_on_server_auth","","If enabled, the handshake process will pause and return instead of\nautomatically validating a server&#39;s certificate.",42,null],[11,"set_break_on_cert_requested","","If enabled, the handshake process will pause and return after\nthe server requests a certificate from the client.",42,null],[11,"break_on_cert_requested","","If enabled, the handshake process will pause and return after\nthe server requests a certificate from the client.",42,null],[11,"set_break_on_client_auth","","If enabled, the handshake process will pause and return instead of\nautomatically validating a client&#39;s certificate.",42,null],[11,"break_on_client_auth","","If enabled, the handshake process will pause and return instead of\nautomatically validating a client&#39;s certificate.",42,null],[11,"handshake","","Performs the SSL/TLS handshake.",42,null],[11,"fmt","","",43,null],[11,"drop","","",43,null],[11,"get_ref","","Returns a shared reference to the inner stream.",43,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",43,null],[11,"context","","Returns a shared reference to the `SslContext` of the stream.",43,null],[11,"context_mut","","Returns a mutable reference to the `SslContext` of the stream.",43,null],[11,"close","","Shuts down the connection.",43,null],[11,"read","","",43,null],[11,"write","","",43,null],[11,"flush","","",43,null],[11,"fmt","","",44,null],[11,"default","","",44,{"inputs":[],"output":{"name":"clientbuilder"}}],[11,"new","","Creates a new builder with default options.",44,{"inputs":[],"output":{"name":"self"}}],[11,"anchor_certificates","","Specifies the set of additional root certificates to trust when\nverifying the server&#39;s certificate.",44,null],[11,"identity","","Use the specified identity as a SSL/TLS client certificate.",44,null],[11,"protocol_min","","Configure the minimum protocol that this client will support.",44,null],[11,"protocol_max","","Configure the minimum protocol that this client will support.",44,null],[11,"handshake","","Initiates a new SSL/TLS session over a stream connected to the specified\ndomain.",44,null],[11,"handshake2","","Initiates a new SSL/TLS session over a stream connected to the specified\ndomain.",44,null],[11,"fmt","","",45,null],[11,"new","","Creates a new `ServerBuilder` which will use the specified identity\nand certificate chain for handshakes.",45,null],[11,"handshake","","Initiates a new SSL/TLS session over a stream.",45,null],[0,"trust","security_framework","Trust evaluation support.",null,null],[3,"SecTrust","security_framework::trust","A type representing a trust evaluation for a certificate.",null,null],[4,"TrustResult","","The result of trust evaluation.",null,null],[13,"Invalid","","An invalid setting or result.",46,null],[13,"Proceed","","You may proceed.",46,null],[13,"Deny","","Indicates a denial by the user, do not proceed.",46,null],[13,"Unspecified","","The certificate is implicitly trusted.",46,null],[13,"RecoverableTrustFailure","","Indicates a trust policy failure that the user can override.",46,null],[13,"FatalTrustFailure","","Indicates a trust policy failure that the user cannot override.",46,null],[13,"OtherError","","An error not related to trust validation.",46,null],[11,"success","","Returns true if the result is &quot;successful&quot; - specifically `Proceed` or\n`Unspecified`.",46,null],[11,"drop","","",47,null],[11,"clone","","",47,null],[11,"as_concrete_TypeRef","","",47,null],[11,"wrap_under_get_rule","","",47,{"inputs":[{"name":"sectrustref"}],"output":{"name":"sectrust"}}],[11,"as_CFTypeRef","","",47,null],[11,"wrap_under_create_rule","","",47,{"inputs":[{"name":"sectrustref"}],"output":{"name":"sectrust"}}],[11,"type_id","","",47,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"create_with_certificates","","Creates a SecTrustRef that is configured with a certificate chain, for validating\nthat chain against a collection of policies.",47,null],[11,"set_anchor_certificates","","Sets additional anchor certificates used to validate trust.",47,null],[11,"set_trust_anchor_certificates_only","","If set to `true`, only the certificates specified by\n`set_anchor_certificates` will be trusted, but not globally trusted\ncertificates.",47,null],[11,"evaluate","","Evaluates trust.",47,null],[11,"diffie_hellman_params","security_framework::secure_transport","",42,null],[11,"set_diffie_hellman_params","","",42,null],[11,"certificate_authorities","","",42,null],[11,"set_certificate_authorities","","",42,null],[11,"add_certificate_authorities","","",42,null]],"paths":[[3,"Error"],[3,"SecCertificate"],[4,"CipherSuite"],[3,"SecIdentity"],[3,"ImportedIdentity"],[3,"Pkcs12ImportOptions"],[3,"SearchResult"],[4,"ItemClass"],[4,"Reference"],[3,"ItemSearchOptions"],[3,"SecKey"],[3,"SecAccess"],[8,"SecCertificateExt"],[4,"DigestType"],[3,"Builder"],[4,"Padding"],[4,"Mode"],[3,"Builder"],[3,"SecItems"],[8,"Pkcs12ImportOptionsExt"],[3,"ImportOptions"],[4,"KeyType"],[8,"ItemSearchOptionsExt"],[8,"SecKeyExt"],[8,"SecKeychainExt"],[3,"SecKeychain"],[3,"CreateOptions"],[3,"SecKeychainItem"],[8,"SslContextExt"],[3,"SecTransform"],[3,"SecPolicy"],[3,"SecRandom"],[4,"ProtocolSide"],[4,"ConnectionType"],[4,"HandshakeError"],[4,"ClientHandshakeError"],[4,"SessionState"],[4,"SslAuthenticate"],[4,"SslClientCertificateState"],[4,"SslProtocol"],[3,"MidHandshakeSslStream"],[3,"MidHandshakeClientBuilder"],[3,"SslContext"],[3,"SslStream"],[3,"ClientBuilder"],[3,"ServerBuilder"],[4,"TrustResult"],[3,"SecTrust"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"cmp","","",4,null],[11,"fmt","","",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,null],[11,"num_days","","Returns the total number of whole days in the duration.",4,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"clone","","",6,null],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,null],[11,"clone","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"add","","",7,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,null],[11,"sub","","The resulting Tm is in UTC.",1,null],[11,"sub","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,null],[11,"to_local","","Convert time to the local timezone",1,null],[11,"to_utc","","Convert time to the UTC",1,null],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,null],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,null],[11,"strftime","","Formats the time according to the format string.",1,null],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,null],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,null],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",3,null]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["tempdir"] = {"doc":"Temporary directories of files.","items":[[3,"TempDir","tempdir","A directory in the filesystem that is automatically deleted when\nit goes out of scope.",null,null],[11,"new","","Attempts to make a temporary directory inside of `env::temp_dir()` whose\nname will have the prefix, `prefix`. The directory and\neverything inside it will be automatically deleted once the\nreturned `TempDir` is destroyed.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_in","","Attempts to make a temporary directory inside of `tmpdir`\nwhose name will have the prefix `prefix`. The directory and\neverything inside it will be automatically deleted once the\nreturned `TempDir` is destroyed.",0,{"inputs":[{"name":"p"},{"name":"str"}],"output":{"name":"result"}}],[11,"path","","Accesses the [`Path`] to the temporary directory.",0,null],[11,"into_path","","Unwraps the [`Path`] contained in the `TempDir` and\nreturns it. This destroys the `TempDir` without deleting the\ndirectory represented by the returned `Path`.",0,null],[11,"close","","Closes and removes the temporary directory, returing a `Result`.",0,null],[11,"as_ref","","",0,null],[11,"fmt","","",0,null],[11,"drop","","",0,null]],"paths":[[3,"TempDir"]]};
searchIndex["security_framework_sys"] = {"doc":"","items":[[0,"access","security_framework_sys","",null,null],[5,"SecAccessGetTypeID","security_framework_sys::access","",null,null],[0,"base","security_framework_sys","",null,null],[3,"OpaqueSecKeychainRef","security_framework_sys::base","",null,null],[3,"OpaqueSecKeychainItemRef","","",null,null],[3,"OpaqueSecCertificateRef","","",null,null],[3,"OpaqueSecAccessRef","","",null,null],[3,"OpaqueSecKeyRef","","",null,null],[3,"OpaqueSecIdentityRef","","",null,null],[3,"OpaqueSecPolicyRef","","",null,null],[5,"SecCopyErrorMessageString","","",null,null],[6,"SecKeychainRef","","",null,null],[6,"SecKeychainItemRef","","",null,null],[6,"SecCertificateRef","","",null,null],[6,"SecAccessRef","","",null,null],[6,"SecKeyRef","","",null,null],[6,"SecIdentityRef","","",null,null],[6,"SecPolicyRef","","",null,null],[17,"errSecSuccess","","",null,null],[17,"errSecIO","","",null,null],[17,"errSecParam","","",null,null],[17,"errSecBadReq","","",null,null],[17,"errSecAuthFailed","","",null,null],[17,"errSecTrustSettingDeny","","",null,null],[17,"errSecNotTrusted","","",null,null],[0,"certificate","security_framework_sys","",null,null],[5,"SecCertificateGetTypeID","security_framework_sys::certificate","",null,null],[5,"SecCertificateCreateWithData","","",null,null],[5,"SecCertificateCopyData","","",null,null],[5,"SecCertificateCopySubjectSummary","","",null,null],[5,"SecCertificateCopyCommonName","","",null,null],[5,"SecCertificateCopyPublicKey","","",null,null],[0,"cipher_suite","security_framework_sys","",null,null],[6,"SSLCipherSuite","security_framework_sys::cipher_suite","",null,null],[17,"SSL_NULL_WITH_NULL_NULL","","",null,null],[17,"SSL_RSA_WITH_NULL_MD5","","",null,null],[17,"SSL_RSA_WITH_NULL_SHA","","",null,null],[17,"SSL_RSA_EXPORT_WITH_RC4_40_MD5","","",null,null],[17,"SSL_RSA_WITH_RC4_128_MD5","","",null,null],[17,"SSL_RSA_WITH_RC4_128_SHA","","",null,null],[17,"SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5","","",null,null],[17,"SSL_RSA_WITH_IDEA_CBC_SHA","","",null,null],[17,"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA","","",null,null],[17,"SSL_RSA_WITH_DES_CBC_SHA","","",null,null],[17,"SSL_RSA_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA","","",null,null],[17,"SSL_DH_DSS_WITH_DES_CBC_SHA","","",null,null],[17,"SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA","","",null,null],[17,"SSL_DH_RSA_WITH_DES_CBC_SHA","","",null,null],[17,"SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA","","",null,null],[17,"SSL_DHE_DSS_WITH_DES_CBC_SHA","","",null,null],[17,"SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","","",null,null],[17,"SSL_DHE_RSA_WITH_DES_CBC_SHA","","",null,null],[17,"SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"SSL_DH_anon_EXPORT_WITH_RC4_40_MD5","","",null,null],[17,"SSL_DH_anon_WITH_RC4_128_MD5","","",null,null],[17,"SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA","","",null,null],[17,"SSL_DH_anon_WITH_DES_CBC_SHA","","",null,null],[17,"SSL_DH_anon_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"SSL_FORTEZZA_DMS_WITH_NULL_SHA","","",null,null],[17,"SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA","","",null,null],[17,"TLS_RSA_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_DH_DSS_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_DH_RSA_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_DH_anon_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_RSA_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_DH_DSS_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_DH_RSA_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_DH_anon_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_ECDH_ECDSA_WITH_NULL_SHA","","",null,null],[17,"TLS_ECDH_ECDSA_WITH_RC4_128_SHA","","",null,null],[17,"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_ECDHE_ECDSA_WITH_NULL_SHA","","",null,null],[17,"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA","","",null,null],[17,"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_ECDH_RSA_WITH_NULL_SHA","","",null,null],[17,"TLS_ECDH_RSA_WITH_RC4_128_SHA","","",null,null],[17,"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_ECDHE_RSA_WITH_NULL_SHA","","",null,null],[17,"TLS_ECDHE_RSA_WITH_RC4_128_SHA","","",null,null],[17,"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_ECDH_anon_WITH_NULL_SHA","","",null,null],[17,"TLS_ECDH_anon_WITH_RC4_128_SHA","","",null,null],[17,"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_ECDH_anon_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_ECDH_anon_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_NULL_WITH_NULL_NULL","","",null,null],[17,"TLS_RSA_WITH_NULL_MD5","","",null,null],[17,"TLS_RSA_WITH_NULL_SHA","","",null,null],[17,"TLS_RSA_WITH_RC4_128_MD5","","",null,null],[17,"TLS_RSA_WITH_RC4_128_SHA","","",null,null],[17,"TLS_RSA_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_RSA_WITH_NULL_SHA256","","",null,null],[17,"TLS_RSA_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_RSA_WITH_AES_256_CBC_SHA256","","",null,null],[17,"TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_DH_DSS_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_DH_RSA_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_DH_DSS_WITH_AES_256_CBC_SHA256","","",null,null],[17,"TLS_DH_RSA_WITH_AES_256_CBC_SHA256","","",null,null],[17,"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256","","",null,null],[17,"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256","","",null,null],[17,"TLS_DH_anon_WITH_RC4_128_MD5","","",null,null],[17,"TLS_DH_anon_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_DH_anon_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_DH_anon_WITH_AES_256_CBC_SHA256","","",null,null],[17,"TLS_PSK_WITH_RC4_128_SHA","","",null,null],[17,"TLS_PSK_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_PSK_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_PSK_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_DHE_PSK_WITH_RC4_128_SHA","","",null,null],[17,"TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_RSA_PSK_WITH_RC4_128_SHA","","",null,null],[17,"TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA","","",null,null],[17,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA","","",null,null],[17,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA","","",null,null],[17,"TLS_PSK_WITH_NULL_SHA","","",null,null],[17,"TLS_DHE_PSK_WITH_NULL_SHA","","",null,null],[17,"TLS_RSA_PSK_WITH_NULL_SHA","","",null,null],[17,"TLS_RSA_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_RSA_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_DH_RSA_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_DH_RSA_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_DH_DSS_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_DH_DSS_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_DH_anon_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_DH_anon_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_PSK_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_PSK_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_DHE_PSK_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_DHE_PSK_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_RSA_PSK_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_RSA_PSK_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_PSK_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_PSK_WITH_AES_256_CBC_SHA384","","",null,null],[17,"TLS_PSK_WITH_NULL_SHA256","","",null,null],[17,"TLS_PSK_WITH_NULL_SHA384","","",null,null],[17,"TLS_DHE_PSK_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_DHE_PSK_WITH_AES_256_CBC_SHA384","","",null,null],[17,"TLS_DHE_PSK_WITH_NULL_SHA256","","",null,null],[17,"TLS_DHE_PSK_WITH_NULL_SHA384","","",null,null],[17,"TLS_RSA_PSK_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_RSA_PSK_WITH_AES_256_CBC_SHA384","","",null,null],[17,"TLS_RSA_PSK_WITH_NULL_SHA256","","",null,null],[17,"TLS_RSA_PSK_WITH_NULL_SHA384","","",null,null],[17,"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384","","",null,null],[17,"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384","","",null,null],[17,"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384","","",null,null],[17,"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256","","",null,null],[17,"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384","","",null,null],[17,"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256","","",null,null],[17,"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384","","",null,null],[17,"TLS_EMPTY_RENEGOTIATION_INFO_SCSV","","",null,null],[17,"SSL_RSA_WITH_RC2_CBC_MD5","","",null,null],[17,"SSL_RSA_WITH_IDEA_CBC_MD5","","",null,null],[17,"SSL_RSA_WITH_DES_CBC_MD5","","",null,null],[17,"SSL_RSA_WITH_3DES_EDE_CBC_MD5","","",null,null],[17,"SSL_NO_SUCH_CIPHERSUITE","","",null,null],[0,"digest_transform","security_framework_sys","",null,null],[7,"kSecDigestHMACKeyAttribute","security_framework_sys::digest_transform","",null,null],[7,"kSecDigestHMACMD5","","",null,null],[7,"kSecDigestHMACSHA1","","",null,null],[7,"kSecDigestHMACSHA2","","",null,null],[7,"kSecDigestLengthAttribute","","",null,null],[7,"kSecDigestMD2","","",null,null],[7,"kSecDigestMD4","","",null,null],[7,"kSecDigestMD5","","",null,null],[7,"kSecDigestSHA1","","",null,null],[7,"kSecDigestSHA2","","",null,null],[7,"kSecDigestTypeAttribute","","",null,null],[5,"SecDigestTransformCreate","","",null,null],[5,"SecDigestTransformGetTypeID","","",null,null],[0,"encrypt_transform","security_framework_sys","",null,null],[7,"kSecEncryptionMode","security_framework_sys::encrypt_transform","",null,null],[7,"kSecEncryptKey","","",null,null],[7,"kSecIVKey","","",null,null],[7,"kSecModeCBCKey","","",null,null],[7,"kSecModeCFBKey","","",null,null],[7,"kSecModeECBKey","","",null,null],[7,"kSecModeNoneKey","","",null,null],[7,"kSecModeOFBKey","","",null,null],[7,"kSecPaddingKey","","",null,null],[7,"kSecPaddingNoneKey","","",null,null],[7,"kSecPaddingOAEPKey","","",null,null],[7,"kSecPaddingPKCS1Key","","",null,null],[7,"kSecPaddingPKCS5Key","","",null,null],[7,"kSecPaddingPKCS7Key","","",null,null],[5,"SecDecryptTransformCreate","","",null,null],[5,"SecDecryptTransformGetTypeID","","",null,null],[5,"SecEncryptTransformCreate","","",null,null],[5,"SecEncryptTransformGetTypeID","","",null,null],[0,"identity","security_framework_sys","",null,null],[5,"SecIdentityGetTypeID","security_framework_sys::identity","",null,null],[5,"SecIdentityCopyCertificate","","",null,null],[5,"SecIdentityCopyPrivateKey","","",null,null],[0,"import_export","security_framework_sys","",null,null],[3,"SecItemImportExportKeyParameters","security_framework_sys::import_export","",null,null],[12,"version","","",0,null],[12,"flags","","",0,null],[12,"passphrase","","",0,null],[12,"alert_title","","",0,null],[12,"alert_prompt","","",0,null],[12,"access_ref","","",0,null],[12,"key_usage","","",0,null],[12,"key_attributes","","",0,null],[5,"SecItemImport","","",null,null],[7,"kSecImportExportPassphrase","","",null,null],[7,"kSecImportExportKeychain","","",null,null],[7,"kSecImportExportAccess","","",null,null],[7,"kSecImportItemLabel","","",null,null],[7,"kSecImportItemKeyID","","",null,null],[7,"kSecImportItemTrust","","",null,null],[7,"kSecImportItemCertChain","","",null,null],[7,"kSecImportItemIdentity","","",null,null],[5,"SecPKCS12Import","","",null,null],[6,"SecExternalFormat","","",null,null],[6,"SecExternalItemType","","",null,null],[6,"SecItemImportExportFlags","","",null,null],[6,"SecKeyImportExportFlags","","",null,null],[17,"kSecKeyImportOnlyOne","","",null,null],[17,"kSecKeySecurePassphrase","","",null,null],[17,"kSecKeyNoAccessControl","","",null,null],[17,"SEC_KEY_IMPORT_EXPORT_PARAMS_VERSION","","",null,null],[11,"clone","","",0,null],[0,"item","security_framework_sys","",null,null],[7,"kSecClass","security_framework_sys::item","",null,null],[7,"kSecClassInternetPassword","","",null,null],[7,"kSecClassGenericPassword","","",null,null],[7,"kSecClassCertificate","","",null,null],[7,"kSecClassKey","","",null,null],[7,"kSecClassIdentity","","",null,null],[7,"kSecMatchLimit","","",null,null],[7,"kSecReturnData","","",null,null],[7,"kSecReturnAttributes","","",null,null],[7,"kSecReturnRef","","",null,null],[7,"kSecReturnPersistentRef","","",null,null],[7,"kSecMatchSearchList","","",null,null],[7,"kSecAttrKeyType","","",null,null],[7,"kSecAttrLabel","","",null,null],[7,"kSecAttrKeyTypeRSA","","",null,null],[7,"kSecAttrKeyTypeDSA","","",null,null],[7,"kSecAttrKeyTypeAES","","",null,null],[7,"kSecAttrKeyTypeDES","","",null,null],[7,"kSecAttrKeyType3DES","","",null,null],[7,"kSecAttrKeyTypeRC4","","",null,null],[7,"kSecAttrKeyTypeRC2","","",null,null],[7,"kSecAttrKeyTypeCAST","","",null,null],[5,"SecItemCopyMatching","","",null,null],[0,"key","security_framework_sys","",null,null],[5,"SecKeyGetTypeID","security_framework_sys::key","",null,null],[5,"SecKeyCreateFromData","","",null,null],[0,"keychain","security_framework_sys","",null,null],[5,"SecKeychainGetTypeID","security_framework_sys::keychain","",null,null],[5,"SecKeychainCopyDefault","","",null,null],[5,"SecKeychainCreate","","",null,null],[5,"SecKeychainOpen","","",null,null],[5,"SecKeychainUnlock","","",null,null],[0,"keychain_item","security_framework_sys","",null,null],[5,"SecKeychainItemGetTypeID","security_framework_sys::keychain_item","",null,null],[0,"policy","security_framework_sys","",null,null],[5,"SecPolicyCreateSSL","security_framework_sys::policy","",null,null],[5,"SecPolicyGetTypeID","","",null,null],[0,"random","security_framework_sys","",null,null],[3,"__SecRandom","security_framework_sys::random","",null,null],[7,"kSecRandomDefault","","",null,null],[5,"SecRandomCopyBytes","","",null,null],[6,"SecRandomRef","","",null,null],[0,"secure_transport","security_framework_sys","",null,null],[5,"SSLContextGetTypeID","security_framework_sys::secure_transport","",null,null],[5,"SSLCreateContext","","",null,null],[5,"SSLNewContext","","",null,null],[5,"SSLDisposeContext","","",null,null],[5,"SSLSetConnection","","",null,null],[5,"SSLGetConnection","","",null,null],[5,"SSLSetIOFuncs","","",null,null],[5,"SSLHandshake","","",null,null],[5,"SSLClose","","",null,null],[5,"SSLRead","","",null,null],[5,"SSLWrite","","",null,null],[5,"SSLSetPeerDomainName","","",null,null],[5,"SSLGetPeerDomainNameLength","","",null,null],[5,"SSLGetPeerDomainName","","",null,null],[5,"SSLSetCertificate","","",null,null],[5,"SSLSetCertificateAuthorities","","",null,null],[5,"SSLCopyCertificateAuthorities","","",null,null],[5,"SSLSetSessionOption","","",null,null],[5,"SSLGetSessionOption","","",null,null],[5,"SSLCopyPeerTrust","","",null,null],[5,"SSLGetSessionState","","",null,null],[5,"SSLGetSupportedCiphers","","",null,null],[5,"SSLGetNumberSupportedCiphers","","",null,null],[5,"SSLGetEnabledCiphers","","",null,null],[5,"SSLGetNumberEnabledCiphers","","",null,null],[5,"SSLSetEnabledCiphers","","",null,null],[5,"SSLGetNegotiatedCipher","","",null,null],[5,"SSLSetClientSideAuthenticate","","",null,null],[5,"SSLSetDiffieHellmanParams","","",null,null],[5,"SSLGetDiffieHellmanParams","","",null,null],[5,"SSLSetPeerID","","",null,null],[5,"SSLGetPeerID","","",null,null],[5,"SSLGetBufferedReadSize","","",null,null],[5,"SSLGetClientCertificateState","","",null,null],[5,"SSLGetNegotiatedProtocolVersion","","",null,null],[5,"SSLGetProtocolVersionMax","","",null,null],[5,"SSLGetProtocolVersionMin","","",null,null],[5,"SSLSetProtocolVersionMax","","",null,null],[5,"SSLSetProtocolVersionMin","","",null,null],[5,"SSLSetProtocolVersionEnabled","","",null,null],[6,"SSLContext","","",null,null],[6,"SSLContextRef","","",null,null],[6,"SSLConnectionRef","","",null,null],[6,"SSLProtocol","","",null,null],[6,"SSLSessionOption","","",null,null],[6,"SSLSessionState","","",null,null],[6,"SSLReadFunc","","",null,null],[6,"SSLWriteFunc","","",null,null],[6,"SSLProtocolSide","","",null,null],[6,"SSLConnectionType","","",null,null],[6,"SSLAuthenticate","","",null,null],[6,"SSLClientCertificateState","","",null,null],[17,"kSSLProtocolUnknown","","",null,null],[17,"kSSLProtocol3","","",null,null],[17,"kTLSProtocol1","","",null,null],[17,"kTLSProtocol11","","",null,null],[17,"kTLSProtocol12","","",null,null],[17,"kDTLSProtocol1","","",null,null],[17,"kSSLProtocol2","","",null,null],[17,"kSSLProtocol3Only","","",null,null],[17,"kTLSProtocol1Only","","",null,null],[17,"kSSLProtocolAll","","",null,null],[17,"kSSLSessionOptionBreakOnServerAuth","","",null,null],[17,"kSSLSessionOptionBreakOnCertRequested","","",null,null],[17,"kSSLSessionOptionBreakOnClientAuth","","",null,null],[17,"kSSLIdle","","",null,null],[17,"kSSLHandshake","","",null,null],[17,"kSSLConnected","","",null,null],[17,"kSSLClosed","","",null,null],[17,"kSSLAborted","","",null,null],[17,"kSSLServerSide","","",null,null],[17,"kSSLClientSide","","",null,null],[17,"kSSLStreamType","","",null,null],[17,"kSSLDatagramType","","",null,null],[17,"errSSLProtocol","","",null,null],[17,"errSSLNegotiation","","",null,null],[17,"errSSLFatalAlert","","",null,null],[17,"errSSLWouldBlock","","",null,null],[17,"errSSLSessionNotFound","","",null,null],[17,"errSSLClosedGraceful","","",null,null],[17,"errSSLClosedAbort","","",null,null],[17,"errSSLXCertChainInvalid","","",null,null],[17,"errSSLBadCert","","",null,null],[17,"errSSLCrypto","","",null,null],[17,"errSSLInternal","","",null,null],[17,"errSSLModuleAttach","","",null,null],[17,"errSSLUnknownRootCert","","",null,null],[17,"errSSLNoRootCert","","",null,null],[17,"errSSLCertExpired","","",null,null],[17,"errSSLCertNotYetValid","","",null,null],[17,"errSSLClosedNoNotify","","",null,null],[17,"errSSLBufferOverflow","","",null,null],[17,"errSSLBadCipherSuite","","",null,null],[17,"errSSLPeerUnexpectedMsg","","",null,null],[17,"errSSLPeerBadRecordMac","","",null,null],[17,"errSSLPeerDecryptionFail","","",null,null],[17,"errSSLPeerRecordOverflow","","",null,null],[17,"errSSLPeerDecompressFail","","",null,null],[17,"errSSLPeerHandshakeFail","","",null,null],[17,"errSSLPeerBadCert","","",null,null],[17,"errSSLPeerUnsupportedCert","","",null,null],[17,"errSSLPeerCertRevoked","","",null,null],[17,"errSSLPeerCertExpired","","",null,null],[17,"errSSLPeerCertUnknown","","",null,null],[17,"errSSLIllegalParam","","",null,null],[17,"errSSLPeerUnknownCA","","",null,null],[17,"errSSLPeerAccessDenied","","",null,null],[17,"errSSLPeerDecodeError","","",null,null],[17,"errSSLPeerDecryptError","","",null,null],[17,"errSSLPeerExportRestriction","","",null,null],[17,"errSSLPeerProtocolVersion","","",null,null],[17,"errSSLPeerInsufficientSecurity","","",null,null],[17,"errSSLPeerInternalError","","",null,null],[17,"errSSLPeerUserCancelled","","",null,null],[17,"errSSLPeerNoRenegotiation","","",null,null],[17,"errSSLPeerAuthCompleted","","",null,null],[17,"errSSLClientCertRequested","","",null,null],[17,"errSSLHostNameMismatch","","",null,null],[17,"errSSLConnectionRefused","","",null,null],[17,"errSSLDecryptionFail","","",null,null],[17,"errSSLBadRecordMac","","",null,null],[17,"errSSLRecordOverflow","","",null,null],[17,"errSSLBadConfiguration","","",null,null],[17,"errSSLClientHelloReceived","","",null,null],[17,"kNeverAuthenticate","","",null,null],[17,"kAlwaysAuthenticate","","",null,null],[17,"kTryAuthenticate","","",null,null],[17,"kSSLClientCertNone","","",null,null],[17,"kSSLClientCertRequested","","",null,null],[17,"kSSLClientCertSent","","",null,null],[17,"kSSLClientCertRejected","","",null,null],[0,"transform","security_framework_sys","",null,null],[7,"kSecTransformInputAttributeName","security_framework_sys::transform","",null,null],[5,"SecTransformGetTypeID","","",null,null],[5,"SecTransformSetAttribute","","",null,null],[5,"SecTransformExecute","","",null,null],[6,"SecTransformRef","","",null,null],[0,"trust","security_framework_sys","",null,null],[3,"__SecTrust","security_framework_sys::trust","",null,null],[5,"SecTrustGetTypeID","","",null,null],[5,"SecTrustSetAnchorCertificates","","",null,null],[5,"SecTrustSetAnchorCertificatesOnly","","",null,null],[5,"SecTrustEvaluate","","",null,null],[5,"SecTrustCreateWithCertificates","","",null,null],[6,"SecTrustResultType","","",null,null],[6,"SecTrustRef","","",null,null],[17,"kSecTrustResultInvalid","","",null,null],[17,"kSecTrustResultProceed","","",null,null],[17,"kSecTrustResultDeny","","",null,null],[17,"kSecTrustResultUnspecified","","",null,null],[17,"kSecTrustResultRecoverableTrustFailure","","",null,null],[17,"kSecTrustResultFatalTrustFailure","","",null,null],[17,"kSecTrustResultOtherError","","",null,null]],"paths":[[3,"SecItemImportExportKeyParameters"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,null],[11,"next_u64","","",24,null],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,null],[11,"next_u64","","Return the next random u64.",27,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",27,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,null],[11,"choose","","Return a random element from `values`.",27,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,null],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,null],[11,"next_u64","","",32,null],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,null],[11,"next_u32","","",33,null],[11,"next_u64","","",33,null],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",4,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",5,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",7,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",8,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null],[11,"fmt","","",6,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",12,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",10,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"fmt","","",12,null],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",17,null],[11,"emit_nil","","",17,null],[11,"emit_usize","","",17,null],[11,"emit_u64","","",17,null],[11,"emit_u32","","",17,null],[11,"emit_u16","","",17,null],[11,"emit_u8","","",17,null],[11,"emit_isize","","",17,null],[11,"emit_i64","","",17,null],[11,"emit_i32","","",17,null],[11,"emit_i16","","",17,null],[11,"emit_i8","","",17,null],[11,"emit_bool","","",17,null],[11,"emit_f64","","",17,null],[11,"emit_f32","","",17,null],[11,"emit_char","","",17,null],[11,"emit_str","","",17,null],[11,"emit_enum","","",17,null],[11,"emit_enum_variant","","",17,null],[11,"emit_enum_variant_arg","","",17,null],[11,"emit_enum_struct_variant","","",17,null],[11,"emit_enum_struct_variant_field","","",17,null],[11,"emit_struct","","",17,null],[11,"emit_struct_field","","",17,null],[11,"emit_tuple","","",17,null],[11,"emit_tuple_arg","","",17,null],[11,"emit_tuple_struct","","",17,null],[11,"emit_tuple_struct_arg","","",17,null],[11,"emit_option","","",17,null],[11,"emit_option_none","","",17,null],[11,"emit_option_some","","",17,null],[11,"emit_seq","","",17,null],[11,"emit_seq_elt","","",17,null],[11,"emit_map","","",17,null],[11,"emit_map_elt_key","","",17,null],[11,"emit_map_elt_val","","",17,null],[11,"encode","","",9,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",9,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",9,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",9,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,null],[11,"as_object","","If the Json value is an Object, returns a reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"as_object_mut","","If the Json value is an Object, returns a mutable reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"into_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,null],[11,"as_array","","If the Json value is an Array, returns a reference to the associated vector.\nReturns None otherwise.",9,null],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference to the associated vector.\nReturns None otherwise.",9,null],[11,"into_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",9,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",9,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",9,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",9,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",9,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",9,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",14,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,null],[11,"is_empty","","Returns true if the stack is empty.",18,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",18,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,null],[11,"next","","",19,null],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",19,null],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,null],[11,"read_usize","","",21,null],[11,"read_u8","","",21,null],[11,"read_u16","","",21,null],[11,"read_u32","","",21,null],[11,"read_u64","","",21,null],[11,"read_isize","","",21,null],[11,"read_i8","","",21,null],[11,"read_i16","","",21,null],[11,"read_i32","","",21,null],[11,"read_i64","","",21,null],[11,"read_f32","","",21,null],[11,"read_f64","","",21,null],[11,"read_bool","","",21,null],[11,"read_char","","",21,null],[11,"read_str","","",21,null],[11,"read_enum","","",21,null],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,null],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,null],[11,"read_struct","","",21,null],[11,"read_struct_field","","",21,null],[11,"read_tuple","","",21,null],[11,"read_tuple_arg","","",21,null],[11,"read_tuple_struct","","",21,null],[11,"read_tuple_struct_arg","","",21,null],[11,"read_option","","",21,null],[11,"read_seq","","",21,null],[11,"read_seq_elt","","",21,null],[11,"read_map","","",21,null],[11,"read_map_elt_key","","",21,null],[11,"read_map_elt_val","","",21,null],[11,"error","","",21,null],[11,"to_json","","",9,null],[11,"fmt","","Encodes a json value into a string",9,null],[11,"fmt","","Encodes a json value into a string",22,null],[11,"fmt","","Encodes a json value into a string",23,null],[11,"indent","","Set the indentation level for the emitted JSON",24,null],[11,"fmt","","Encodes a json value into a string",24,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",25,null],[10,"read_nil","","Read a nil value.",25,null],[10,"read_usize","","Read a usize value.",25,null],[10,"read_u64","","Read a u64 value.",25,null],[10,"read_u32","","Read a u32 value.",25,null],[10,"read_u16","","Read a u16 value.",25,null],[10,"read_u8","","Read a u8 value.",25,null],[10,"read_isize","","Read a isize value.",25,null],[10,"read_i64","","Read a i64 value.",25,null],[10,"read_i32","","Read a i32 value.",25,null],[10,"read_i16","","Read a i16 value.",25,null],[10,"read_i8","","Read a i8 value.",25,null],[10,"read_bool","","Read a bool value.",25,null],[10,"read_f64","","Read a f64 value.",25,null],[10,"read_f32","","Read a f32 value.",25,null],[10,"read_char","","Read a char value.",25,null],[10,"read_str","","Read a string value.",25,null],[10,"read_enum","","Read an enumeration value.",25,null],[10,"read_enum_variant","","Read an enumeration value.",25,null],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",25,null],[10,"read_enum_struct_variant","","Read an enumeration value.",25,null],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",25,null],[10,"read_struct","","Read an struct value.",25,null],[10,"read_struct_field","","Read a field for a struct value.",25,null],[10,"read_tuple","","Read a tuple value.",25,null],[10,"read_tuple_arg","","Read a data item for a tuple.",25,null],[10,"read_tuple_struct","","Read a tuple struct value.",25,null],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",25,null],[10,"read_option","","Read an optional value.",25,null],[10,"read_seq","","Read a sequence of values.",25,null],[10,"read_seq_elt","","Read an element in the sequence.",25,null],[10,"read_map","","Read an associative container (map).",25,null],[10,"read_map_elt_key","","Read the key for an entry in a map.",25,null],[10,"read_map_elt_val","","Read the value for an entry in a map.",25,null],[10,"error","","Record a decoding error.",25,null],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",26,null],[10,"emit_nil","","Emit a nil value.",26,null],[10,"emit_usize","","Emit a usize value.",26,null],[10,"emit_u64","","Emit a u64 value.",26,null],[10,"emit_u32","","Emit a u32 value.",26,null],[10,"emit_u16","","Emit a u16 value.",26,null],[10,"emit_u8","","Emit a u8 value.",26,null],[10,"emit_isize","","Emit a isize value.",26,null],[10,"emit_i64","","Emit a i64 value.",26,null],[10,"emit_i32","","Emit a i32 value.",26,null],[10,"emit_i16","","Emit a i16 value.",26,null],[10,"emit_i8","","Emit a i8 value.",26,null],[10,"emit_bool","","Emit a bool value.",26,null],[10,"emit_f64","","Emit a f64 value.",26,null],[10,"emit_f32","","Emit a f32 value.",26,null],[10,"emit_char","","Emit a char value.",26,null],[10,"emit_str","","Emit a string value.",26,null],[10,"emit_enum","","Emit an enumeration value.",26,null],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",26,null],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",26,null],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",26,null],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",26,null],[10,"emit_struct","","Emit a struct value.",26,null],[10,"emit_struct_field","","Emit a field item for a struct.",26,null],[10,"emit_tuple","","Emit a tuple value.",26,null],[10,"emit_tuple_arg","","Emit a data item for a tuple.",26,null],[10,"emit_tuple_struct","","Emit a tuple struct value.",26,null],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",26,null],[10,"emit_option","","Emit an optional value.",26,null],[10,"emit_option_none","","Emit the `None` optional value.",26,null],[10,"emit_option_some","","Emit the `Some(x)` optional value.",26,null],[10,"emit_seq","","Emit a sequence of values.",26,null],[10,"emit_seq_elt","","Emit an element in a sequence.",26,null],[10,"emit_map","","Emit an associative container (map).",26,null],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",26,null],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",26,null],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",28,null],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",29,null],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["core_foundation"] = {"doc":"","items":[[0,"date","core_foundation","",null,null],[6,"CFTimeInterval","core_foundation::date","",null,null],[6,"CFAbsoluteTime","","",null,null],[5,"CFAbsoluteTimeGetCurrent","","",null,{"inputs":[],"output":{"name":"f64"}}],[0,"array","core_foundation","Heterogeneous immutable arrays.",null,null],[6,"CFIndex","core_foundation::array","",null,null],[5,"CFRelease","","",null,null],[3,"CFArray","","A heterogeneous immutable array.",null,null],[3,"CFArrayIterator","","",null,null],[11,"drop","","",0,null],[11,"next","","",1,null],[11,"as_concrete_TypeRef","","",0,null],[11,"wrap_under_get_rule","","",0,{"inputs":[{"name":"cfarrayref"}],"output":{"name":"cfarray"}}],[11,"as_CFTypeRef","","",0,null],[11,"wrap_under_create_rule","","",0,{"inputs":[{"name":"cfarrayref"}],"output":{"name":"cfarray"}}],[11,"type_id","","",0,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"from_CFTypes","","Creates a new `CFArray` with the given elements, which must be `CFType` objects.",0,null],[11,"iter","","Iterates over the elements of this `CFArray`.",0,null],[11,"len","","",0,null],[11,"get","","",0,null],[11,"get_values","","",0,null],[11,"get_all_values","","",0,null],[0,"base","core_foundation","",null,null],[3,"CFType","core_foundation::base","Superclass of all Core Foundation objects.",null,null],[8,"CFIndexConvertible","","",null,null],[10,"to_CFIndex","","Always use this method to construct a `CFIndex` value. It performs bounds checking to\nensure the value is in range.",2,null],[8,"TCFType","","All Core Foundation types implement this trait. The type parameter `TypeRef` specifies the\nassociated Core Foundation type: e.g. for `CFType` this is `CFTypeRef`; for `CFArray` this is\n`CFArrayRef`.",null,null],[10,"as_concrete_TypeRef","","Returns the object as its concrete TypeRef.",3,null],[10,"wrap_under_create_rule","","Returns an instance of the object, wrapping the underlying `CFTypeRef` subclass. Use this\nwhen following Core Foundation&#39;s &quot;Create Rule&quot;. The reference count is *not* bumped.",3,{"inputs":[{"name":"concretetyperef"}],"output":{"name":"self"}}],[10,"type_id","","Returns the type ID for this class.",3,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"as_CFType","","Returns the object as a wrapped `CFType`. The reference count is incremented by one.",3,null],[10,"as_CFTypeRef","","Returns the object as a raw `CFTypeRef`. The reference count is not adjusted.",3,null],[10,"wrap_under_get_rule","","Returns an instance of the object, wrapping the underlying `CFTypeRef` subclass. Use this\nwhen following Core Foundation&#39;s &quot;Get Rule&quot;. The reference count *is* bumped.",3,{"inputs":[{"name":"concretetyperef"}],"output":{"name":"self"}}],[11,"retain_count","","Returns the reference count of the object. It is unwise to do anything other than test\nwhether the return value of this method is greater than zero.",3,null],[11,"type_of","","Returns the type ID of this object.",3,null],[11,"show","","Writes a debugging version of this object on standard error.",3,null],[11,"instance_of","","Returns true if this value is an instance of another type.",3,null],[11,"clone","","",4,null],[11,"drop","","",4,null],[11,"as_concrete_TypeRef","","",4,null],[11,"wrap_under_get_rule","","",4,{"inputs":[{"name":"cftyperef"}],"output":{"name":"cftype"}}],[11,"as_CFTypeRef","","",4,null],[11,"wrap_under_create_rule","","",4,{"inputs":[{"name":"cftyperef"}],"output":{"name":"cftype"}}],[11,"type_id","","",4,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"instance_of","","",4,null],[0,"boolean","core_foundation","A Boolean type.",null,null],[6,"CFBooleanRef","core_foundation::boolean","",null,null],[5,"CFBooleanGetTypeID","","",null,{"inputs":[],"output":{"name":"u64"}}],[7,"kCFBooleanTrue","","",null,null],[7,"kCFBooleanFalse","","",null,null],[3,"CFBoolean","","A Boolean type.",null,null],[11,"drop","","",5,null],[11,"as_concrete_TypeRef","","",5,null],[11,"wrap_under_get_rule","","",5,{"inputs":[{"name":"cfbooleanref"}],"output":{"name":"cfboolean"}}],[11,"as_CFTypeRef","","",5,null],[11,"wrap_under_create_rule","","",5,{"inputs":[{"name":"cfbooleanref"}],"output":{"name":"cfboolean"}}],[11,"type_id","","",5,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"true_value","","",5,{"inputs":[],"output":{"name":"cfboolean"}}],[11,"false_value","","",5,{"inputs":[],"output":{"name":"cfboolean"}}],[0,"data","core_foundation","Core Foundation byte buffers.",null,null],[3,"CFData","core_foundation::data","A byte buffer.",null,null],[11,"drop","","",6,null],[11,"as_concrete_TypeRef","","",6,null],[11,"wrap_under_get_rule","","",6,{"inputs":[{"name":"cfdataref"}],"output":{"name":"cfdata"}}],[11,"as_CFTypeRef","","",6,null],[11,"wrap_under_create_rule","","",6,{"inputs":[{"name":"cfdataref"}],"output":{"name":"cfdata"}}],[11,"type_id","","",6,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"from_buffer","","",6,null],[11,"bytes","","Returns a pointer to the underlying bytes in this data. Note that this byte buffer is\nread-only.",6,null],[11,"len","","Returns the length of this byte buffer.",6,null],[11,"deref","","",6,null],[0,"dictionary","core_foundation","Dictionaries of key-value pairs.",null,null],[3,"CFDictionary","core_foundation::dictionary","An immutable dictionary of key-value pairs.",null,null],[11,"drop","","",7,null],[11,"as_concrete_TypeRef","","",7,null],[11,"wrap_under_get_rule","","",7,{"inputs":[{"name":"cfdictionaryref"}],"output":{"name":"cfdictionary"}}],[11,"as_CFTypeRef","","",7,null],[11,"wrap_under_create_rule","","",7,{"inputs":[{"name":"cfdictionaryref"}],"output":{"name":"cfdictionary"}}],[11,"type_id","","",7,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"from_CFType_pairs","","",7,null],[11,"len","","",7,null],[11,"is_empty","","",7,null],[11,"contains_key","","",7,null],[11,"find","","",7,null],[11,"get","","",7,null],[11,"get_CFType","","A convenience function to retrieve `CFType` instances.",7,null],[11,"set_value","","",7,null],[11,"get_keys_and_values","","",7,null],[0,"error","core_foundation","Core Foundation errors.",null,null],[3,"CFError","core_foundation::error","An error value.",null,null],[11,"drop","","",8,null],[11,"as_concrete_TypeRef","","",8,null],[11,"wrap_under_get_rule","","",8,{"inputs":[{"name":"cferrorref"}],"output":{"name":"cferror"}}],[11,"as_CFTypeRef","","",8,null],[11,"wrap_under_create_rule","","",8,{"inputs":[{"name":"cferrorref"}],"output":{"name":"cferror"}}],[11,"type_id","","",8,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[11,"domain","","Returns a string identifying the domain with which this error is\nassociated.",8,null],[11,"code","","Returns the code identifying this type of error.",8,null],[11,"description","","Returns a human-presentable description of the error.",8,null],[0,"number","core_foundation","Immutable numbers.",null,null],[3,"CFNumber","core_foundation::number","An immutable numeric value.",null,null],[5,"number","","A convenience function to create CFNumbers.",null,{"inputs":[{"name":"i64"}],"output":{"name":"cfnumber"}}],[11,"drop","","",9,null],[11,"as_concrete_TypeRef","","",9,null],[11,"wrap_under_get_rule","","",9,{"inputs":[{"name":"cfnumberref"}],"output":{"name":"cfnumber"}}],[11,"as_CFTypeRef","","",9,null],[11,"wrap_under_create_rule","","",9,{"inputs":[{"name":"cfnumberref"}],"output":{"name":"cfnumber"}}],[11,"type_id","","",9,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"from_i32","","",9,{"inputs":[{"name":"i32"}],"output":{"name":"cfnumber"}}],[11,"to_i64","","",9,null],[11,"to_f64","","",9,null],[11,"from_i64","","",9,{"inputs":[{"name":"i64"}],"output":{"name":"cfnumber"}}],[11,"from_f64","","",9,{"inputs":[{"name":"f64"}],"output":{"name":"cfnumber"}}],[0,"set","core_foundation","An immutable bag of elements.",null,null],[3,"CFSet","core_foundation::set","An immutable bag of elements.",null,null],[11,"drop","","",10,null],[11,"as_concrete_TypeRef","","",10,null],[11,"wrap_under_get_rule","","",10,{"inputs":[{"name":"cfsetref"}],"output":{"name":"cfset"}}],[11,"as_CFTypeRef","","",10,null],[11,"wrap_under_create_rule","","",10,{"inputs":[{"name":"cfsetref"}],"output":{"name":"cfset"}}],[11,"type_id","","",10,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"from_slice","","Creates a new set from a list of `CFType` instances.",10,null],[0,"string","core_foundation","Immutable strings.",null,null],[3,"CFString","core_foundation::string","An immutable string in one of a variety of encodings.",null,null],[11,"clone","","",11,null],[11,"drop","","",11,null],[11,"as_concrete_TypeRef","","",11,null],[11,"wrap_under_get_rule","","",11,{"inputs":[{"name":"cfstringref"}],"output":{"name":"cfstring"}}],[11,"as_CFTypeRef","","",11,null],[11,"wrap_under_create_rule","","",11,{"inputs":[{"name":"cfstringref"}],"output":{"name":"cfstring"}}],[11,"type_id","","",11,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"from_str","","See also CFString::new for a variant of this which does not return a Result",11,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",11,null],[11,"fmt","","",11,null],[11,"new","","Creates a new `CFString` instance from a Rust string.",11,{"inputs":[{"name":"str"}],"output":{"name":"cfstring"}}],[11,"from_static_string","","Like `CFString::new`, but references a string that can be used as a backing store\nby virtue of being statically allocated.",11,{"inputs":[{"name":"str"}],"output":{"name":"cfstring"}}],[11,"char_len","","Returns the number of characters in the string.",11,null],[0,"url","core_foundation","A URL type for Core Foundation.",null,null],[3,"CFURL","core_foundation::url","",null,null],[11,"drop","","",12,null],[11,"as_concrete_TypeRef","","",12,null],[11,"wrap_under_get_rule","","",12,{"inputs":[{"name":"cfurlref"}],"output":{"name":"cfurl"}}],[11,"as_CFTypeRef","","",12,null],[11,"wrap_under_create_rule","","",12,{"inputs":[{"name":"cfurlref"}],"output":{"name":"cfurl"}}],[11,"type_id","","",12,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"fmt","","",12,null],[11,"from_file_system_path","","",12,{"inputs":[{"name":"cfstring"},{"name":"cfurlpathstyle"},{"name":"bool"}],"output":{"name":"cfurl"}}],[11,"get_string","","",12,null],[0,"bundle","core_foundation","Core Foundation Bundle Type",null,null],[3,"CFBundle","core_foundation::bundle","A Bundle type.",null,null],[11,"drop","","",13,null],[11,"main_bundle","","",13,{"inputs":[],"output":{"name":"cfbundle"}}],[11,"info_dictionary","","",13,null],[11,"as_concrete_TypeRef","","",13,null],[11,"wrap_under_get_rule","","",13,{"inputs":[{"name":"cfbundleref"}],"output":{"name":"cfbundle"}}],[11,"as_CFTypeRef","","",13,null],[11,"wrap_under_create_rule","","",13,{"inputs":[{"name":"cfbundleref"}],"output":{"name":"cfbundle"}}],[11,"type_id","","",13,{"inputs":[],"output":{"name":"cftypeid"}}],[0,"propertylist","core_foundation","Core Foundation property lists",null,null],[5,"create_with_data","core_foundation::propertylist","",null,{"inputs":[{"name":"cfdata"},{"name":"cfpropertylistmutabilityoptions"}],"output":{"name":"result"}}],[5,"create_data","","",null,null],[0,"runloop","core_foundation","",null,null],[3,"CFRunLoop","core_foundation::runloop","",null,null],[3,"CFRunLoopTimer","","",null,null],[11,"drop","","",14,null],[11,"as_concrete_TypeRef","","",14,null],[11,"wrap_under_get_rule","","",14,{"inputs":[{"name":"cfrunloopref"}],"output":{"name":"cfrunloop"}}],[11,"as_CFTypeRef","","",14,null],[11,"wrap_under_create_rule","","",14,{"inputs":[{"name":"cfrunloopref"}],"output":{"name":"cfrunloop"}}],[11,"type_id","","",14,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"get_current","","",14,{"inputs":[],"output":{"name":"cfrunloop"}}],[11,"get_main","","",14,{"inputs":[],"output":{"name":"cfrunloop"}}],[11,"run_current","","",14,{"inputs":[],"output":null}],[11,"stop","","",14,null],[11,"current_mode","","",14,null],[11,"contains_timer","","",14,null],[11,"add_timer","","",14,null],[11,"drop","","",15,null],[11,"as_concrete_TypeRef","","",15,null],[11,"wrap_under_get_rule","","",15,{"inputs":[{"name":"cfrunlooptimerref"}],"output":{"name":"cfrunlooptimer"}}],[11,"as_CFTypeRef","","",15,null],[11,"wrap_under_create_rule","","",15,{"inputs":[{"name":"cfrunlooptimerref"}],"output":{"name":"cfrunlooptimer"}}],[11,"type_id","","",15,{"inputs":[],"output":{"name":"cftypeid"}}],[11,"new","","",15,null],[14,"impl_TCFType","core_foundation","",null,null]],"paths":[[3,"CFArray"],[3,"CFArrayIterator"],[8,"CFIndexConvertible"],[8,"TCFType"],[3,"CFType"],[3,"CFBoolean"],[3,"CFData"],[3,"CFDictionary"],[3,"CFError"],[3,"CFNumber"],[3,"CFSet"],[3,"CFString"],[3,"CFURL"],[3,"CFBundle"],[3,"CFRunLoop"],[3,"CFRunLoopTimer"]]};
searchIndex["core_foundation_sys"] = {"doc":"","items":[[0,"array","core_foundation_sys","",null,null],[3,"CFArrayCallBacks","core_foundation_sys::array","",null,null],[12,"version","","",0,null],[12,"retain","","",0,null],[12,"release","","",0,null],[12,"copyDescription","","",0,null],[12,"equal","","",0,null],[3,"__CFArray","","",null,null],[7,"kCFTypeArrayCallBacks","","",null,null],[5,"CFArrayCreate","","",null,null],[5,"CFArrayCreateCopy","","",null,null],[5,"CFArrayGetCount","","",null,null],[5,"CFArrayGetValues","","",null,null],[5,"CFArrayGetValueAtIndex","","",null,null],[5,"CFArrayGetTypeID","","",null,null],[6,"CFArrayRetainCallBack","","FIXME(pcwalton): This is wrong.",null,null],[6,"CFArrayReleaseCallBack","","FIXME(pcwalton): This is wrong.",null,null],[6,"CFArrayCopyDescriptionCallBack","","FIXME(pcwalton): This is wrong.",null,null],[6,"CFArrayEqualCallBack","","FIXME(pcwalton): This is wrong.",null,null],[6,"CFArrayRef","","",null,null],[11,"clone","","",0,null],[0,"base","core_foundation_sys","",null,null],[3,"CFRange","core_foundation_sys::base","",null,null],[12,"location","","",1,null],[12,"length","","",1,null],[7,"kCFAllocatorDefault","","",null,null],[7,"kCFAllocatorSystemDefault","","",null,null],[7,"kCFAllocatorMalloc","","",null,null],[7,"kCFAllocatorMallocZone","","",null,null],[7,"kCFAllocatorNull","","",null,null],[7,"kCFAllocatorUseContext","","",null,null],[7,"kCFNull","","",null,null],[5,"CFEqual","","",null,null],[5,"CFGetRetainCount","","",null,null],[5,"CFGetTypeID","","",null,null],[5,"CFHash","","",null,null],[5,"CFRelease","","",null,null],[5,"CFRetain","","",null,null],[5,"CFShow","","",null,null],[6,"Boolean","","",null,null],[6,"CFIndex","","",null,null],[6,"mach_port_t","","",null,null],[6,"CFAllocatorRef","","",null,null],[6,"CFNullRef","","",null,null],[6,"CFHashCode","","",null,null],[6,"CFTypeID","","",null,null],[6,"CFTypeRef","","",null,null],[6,"CFOptionFlags","","",null,null],[6,"OSStatus","","",null,null],[11,"clone","","",1,null],[11,"init","","",1,{"inputs":[{"name":"cfindex"},{"name":"cfindex"}],"output":{"name":"cfrange"}}],[0,"bundle","core_foundation_sys","",null,null],[3,"__CFBundle","core_foundation_sys::bundle","",null,null],[5,"CFBundleGetBundleWithIdentifier","","",null,null],[5,"CFBundleGetFunctionPointerForName","","",null,null],[5,"CFBundleGetMainBundle","","",null,null],[5,"CFBundleGetInfoDictionary","","",null,null],[5,"CFBundleGetTypeID","","",null,null],[6,"CFBundleRef","","",null,null],[0,"data","core_foundation_sys","",null,null],[3,"__CFData","core_foundation_sys::data","",null,null],[5,"CFDataCreate","","",null,null],[5,"CFDataGetBytePtr","","",null,null],[5,"CFDataGetLength","","",null,null],[5,"CFDataGetTypeID","","",null,null],[6,"CFDataRef","","",null,null],[0,"date","core_foundation_sys","",null,null],[5,"CFAbsoluteTimeGetCurrent","core_foundation_sys::date","",null,null],[6,"CFTimeInterval","","",null,null],[6,"CFAbsoluteTime","","",null,null],[0,"dictionary","core_foundation_sys","",null,null],[3,"CFDictionaryKeyCallBacks","core_foundation_sys::dictionary","",null,null],[12,"version","","",2,null],[12,"retain","","",2,null],[12,"release","","",2,null],[12,"copyDescription","","",2,null],[12,"equal","","",2,null],[12,"hash","","",2,null],[3,"CFDictionaryValueCallBacks","","",null,null],[12,"version","","",3,null],[12,"retain","","",3,null],[12,"release","","",3,null],[12,"copyDescription","","",3,null],[12,"equal","","",3,null],[3,"__CFDictionary","","",null,null],[7,"kCFTypeDictionaryKeyCallBacks","","",null,null],[7,"kCFTypeDictionaryValueCallBacks","","",null,null],[5,"CFDictionaryContainsKey","","",null,null],[5,"CFDictionaryCreate","","",null,null],[5,"CFDictionaryGetCount","","",null,null],[5,"CFDictionaryGetTypeID","","",null,null],[5,"CFDictionaryGetValueIfPresent","","",null,null],[5,"CFDictionaryApplyFunction","","",null,null],[5,"CFDictionarySetValue","","",null,null],[5,"CFDictionaryGetKeysAndValues","","",null,null],[6,"CFDictionaryApplierFunction","","",null,null],[6,"CFDictionaryCopyDescriptionCallBack","","",null,null],[6,"CFDictionaryEqualCallBack","","",null,null],[6,"CFDictionaryHashCallBack","","",null,null],[6,"CFDictionaryReleaseCallBack","","",null,null],[6,"CFDictionaryRetainCallBack","","",null,null],[6,"CFDictionaryRef","","",null,null],[6,"CFMutableDictionaryRef","","",null,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[0,"error","core_foundation_sys","",null,null],[3,"__CFError","core_foundation_sys::error","",null,null],[5,"CFErrorGetTypeID","","",null,null],[7,"kCFErrorDomainPOSIX","","",null,null],[7,"kCFErrorDomainOSStatus","","",null,null],[7,"kCFErrorDomainMach","","",null,null],[7,"kCFErrorDomainCocoa","","",null,null],[5,"CFErrorGetDomain","","",null,null],[5,"CFErrorGetCode","","",null,null],[5,"CFErrorCopyDescription","","",null,null],[6,"CFErrorRef","","",null,null],[0,"messageport","core_foundation_sys","",null,null],[3,"CFMessagePortContext","core_foundation_sys::messageport","",null,null],[12,"version","","",4,null],[12,"info","","",4,null],[12,"retain","","",4,null],[12,"release","","",4,null],[12,"copyDescription","","",4,null],[3,"__CFMessagePort","","",null,null],[5,"CFMessagePortGetTypeID","","",null,null],[5,"CFMessagePortCreateLocal","","",null,null],[5,"CFMessagePortCreateRemote","","",null,null],[5,"CFMessagePortIsRemote","","",null,null],[5,"CFMessagePortGetName","","",null,null],[5,"CFMessagePortSetName","","",null,null],[5,"CFMessagePortGetContext","","",null,null],[5,"CFMessagePortInvalidate","","",null,null],[5,"CFMessagePortIsValid","","",null,null],[5,"CFMessagePortGetInvalidationCallBack","","",null,null],[5,"CFMessagePortSetInvalidationCallBack","","",null,null],[5,"CFMessagePortSendRequest","","",null,null],[5,"CFMessagePortCreateRunLoopSource","","",null,null],[6,"CFMessagePortCallBack","","",null,null],[6,"CFMessagePortInvalidationCallBack","","",null,null],[6,"CFMessagePortRef","","",null,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[0,"number","core_foundation_sys","",null,null],[3,"__CFBoolean","core_foundation_sys::number","",null,null],[3,"__CFNumber","","",null,null],[7,"kCFBooleanTrue","","",null,null],[7,"kCFBooleanFalse","","",null,null],[5,"CFBooleanGetTypeID","","",null,null],[5,"CFNumberCreate","","",null,null],[5,"CFNumberGetValue","","",null,null],[5,"CFNumberGetTypeID","","",null,null],[6,"CFBooleanRef","","",null,null],[6,"CFNumberType","","",null,null],[6,"CFNumberRef","","",null,null],[7,"kCFNumberSInt32Type","","",null,null],[7,"kCFNumberSInt64Type","","",null,null],[7,"kCFNumberFloat64Type","","",null,null],[0,"propertylist","core_foundation_sys","",null,null],[5,"CFPropertyListCreateWithData","core_foundation_sys::propertylist","",null,null],[5,"CFPropertyListCreateData","","",null,null],[6,"CFPropertyListRef","","",null,null],[6,"CFPropertyListFormat","","",null,null],[6,"CFPropertyListMutabilityOptions","","",null,null],[17,"kCFPropertyListOpenStepFormat","","",null,null],[17,"kCFPropertyListXMLFormat_v1_0","","",null,null],[17,"kCFPropertyListBinaryFormat_v1_0","","",null,null],[17,"kCFPropertyListImmutable","","",null,null],[17,"kCFPropertyListMutableContainers","","",null,null],[17,"kCFPropertyListMutableContainersAndLeaves","","",null,null],[0,"runloop","core_foundation_sys","",null,null],[3,"__CFRunLoop","core_foundation_sys::runloop","",null,null],[3,"__CFRunLoopSource","","",null,null],[3,"__CFRunLoopObserver","","",null,null],[3,"CFRunLoopSourceContext","","",null,null],[12,"version","","",5,null],[12,"info","","",5,null],[12,"retain","","",5,null],[12,"release","","",5,null],[12,"copyDescription","","",5,null],[12,"equal","","",5,null],[12,"hash","","",5,null],[12,"schedule","","",5,null],[12,"cancel","","",5,null],[12,"perform","","",5,null],[3,"CFRunLoopSourceContext1","","",null,null],[12,"version","","",6,null],[12,"info","","",6,null],[12,"retain","","",6,null],[12,"release","","",6,null],[12,"copyDescription","","",6,null],[12,"equal","","",6,null],[12,"hash","","",6,null],[12,"getPort","","",6,null],[12,"perform","","",6,null],[3,"CFRunLoopObserverContext","","",null,null],[12,"version","","",7,null],[12,"info","","",7,null],[12,"retain","","",7,null],[12,"release","","",7,null],[12,"copyDescription","","",7,null],[3,"CFRunLoopTimerContext","","",null,null],[12,"version","","",8,null],[12,"info","","",8,null],[12,"retain","","",8,null],[12,"release","","",8,null],[12,"copyDescription","","",8,null],[3,"__CFRunLoopTimer","","",null,null],[7,"kCFRunLoopDefaultMode","","",null,null],[7,"kCFRunLoopCommonModes","","",null,null],[5,"CFRunLoopGetTypeID","","",null,null],[5,"CFRunLoopGetCurrent","","",null,null],[5,"CFRunLoopGetMain","","",null,null],[5,"CFRunLoopCopyCurrentMode","","",null,null],[5,"CFRunLoopCopyAllModes","","",null,null],[5,"CFRunLoopAddCommonMode","","",null,null],[5,"CFRunLoopGetNextTimerFireDate","","",null,null],[5,"CFRunLoopRun","","",null,null],[5,"CFRunLoopRunInMode","","",null,null],[5,"CFRunLoopIsWaiting","","",null,null],[5,"CFRunLoopWakeUp","","",null,null],[5,"CFRunLoopStop","","",null,null],[5,"CFRunLoopContainsSource","","",null,null],[5,"CFRunLoopAddSource","","",null,null],[5,"CFRunLoopRemoveSource","","",null,null],[5,"CFRunLoopContainsObserver","","",null,null],[5,"CFRunLoopAddObserver","","",null,null],[5,"CFRunLoopRemoveObserver","","",null,null],[5,"CFRunLoopContainsTimer","","",null,null],[5,"CFRunLoopAddTimer","","",null,null],[5,"CFRunLoopRemoveTimer","","",null,null],[5,"CFRunLoopSourceGetTypeID","","",null,null],[5,"CFRunLoopSourceCreate","","",null,null],[5,"CFRunLoopSourceGetOrder","","",null,null],[5,"CFRunLoopSourceInvalidate","","",null,null],[5,"CFRunLoopSourceIsValid","","",null,null],[5,"CFRunLoopSourceGetContext","","",null,null],[5,"CFRunLoopSourceSignal","","",null,null],[5,"CFRunLoopObserverGetTypeID","","",null,null],[5,"CFRunLoopObserverCreate","","",null,null],[5,"CFRunLoopObserverGetActivities","","",null,null],[5,"CFRunLoopObserverDoesRepeat","","",null,null],[5,"CFRunLoopObserverGetOrder","","",null,null],[5,"CFRunLoopObserverInvalidate","","",null,null],[5,"CFRunLoopObserverIsValid","","",null,null],[5,"CFRunLoopObserverGetContext","","",null,null],[5,"CFRunLoopTimerGetTypeID","","",null,null],[5,"CFRunLoopTimerCreate","","",null,null],[5,"CFRunLoopTimerGetNextFireDate","","",null,null],[5,"CFRunLoopTimerSetNextFireDate","","",null,null],[5,"CFRunLoopTimerGetInterval","","",null,null],[5,"CFRunLoopTimerDoesRepeat","","",null,null],[5,"CFRunLoopTimerGetOrder","","",null,null],[5,"CFRunLoopTimerInvalidate","","",null,null],[5,"CFRunLoopTimerIsValid","","",null,null],[5,"CFRunLoopTimerGetContext","","",null,null],[5,"CFRunLoopTimerGetTolerance","","",null,null],[5,"CFRunLoopTimerSetTolerance","","",null,null],[6,"CFRunLoopRef","","",null,null],[6,"CFRunLoopSourceRef","","",null,null],[6,"CFRunLoopObserverRef","","",null,null],[6,"CFRunLoopActivity","","",null,null],[6,"CFRunLoopObserverCallBack","","",null,null],[6,"CFRunLoopTimerCallBack","","",null,null],[6,"CFRunLoopTimerRef","","",null,null],[17,"kCFRunLoopRunFinished","","",null,null],[17,"kCFRunLoopRunStopped","","",null,null],[17,"kCFRunLoopRunTimedOut","","",null,null],[17,"kCFRunLoopRunHandledSource","","",null,null],[17,"kCFRunLoopEntry","","",null,null],[17,"kCFRunLoopBeforeTimers","","",null,null],[17,"kCFRunLoopBeforeSources","","",null,null],[17,"kCFRunLoopBeforeWaiting","","",null,null],[17,"kCFRunLoopAfterWaiting","","",null,null],[17,"kCFRunLoopExit","","",null,null],[17,"kCFRunLoopAllActivities","","",null,null],[0,"set","core_foundation_sys","",null,null],[3,"CFSetCallBacks","core_foundation_sys::set","",null,null],[12,"version","","",9,null],[12,"retain","","",9,null],[12,"release","","",9,null],[12,"copyDescription","","",9,null],[12,"equal","","",9,null],[12,"hash","","",9,null],[3,"__CFSet","","",null,null],[7,"kCFTypeSetCallBacks","","",null,null],[5,"CFSetCreate","","",null,null],[5,"CFSetGetTypeID","","",null,null],[6,"CFSetRetainCallBack","","",null,null],[6,"CFSetReleaseCallBack","","",null,null],[6,"CFSetCopyDescriptionCallBack","","",null,null],[6,"CFSetEqualCallBack","","",null,null],[6,"CFSetHashCallBack","","",null,null],[6,"CFSetRef","","",null,null],[11,"clone","","",9,null],[0,"string","core_foundation_sys","",null,null],[3,"__CFString","core_foundation_sys::string","",null,null],[5,"CFStringCreateWithBytes","","",null,null],[5,"CFStringCreateWithBytesNoCopy","","",null,null],[5,"CFStringCreateWithCString","","",null,null],[5,"CFStringGetBytes","","",null,null],[5,"CFStringGetCString","","",null,null],[5,"CFStringGetCStringPtr","","",null,null],[5,"CFStringGetLength","","",null,null],[5,"CFStringGetTypeID","","",null,null],[6,"UniChar","","",null,null],[6,"CFStringCompareFlags","","",null,null],[6,"CFStringEncoding","","",null,null],[6,"CFStringEncodings","","",null,null],[6,"CFStringRef","","",null,null],[7,"kCFStringEncodingUTF8","","",null,null],[0,"url","core_foundation_sys","",null,null],[3,"__CFURL","core_foundation_sys::url","",null,null],[5,"CFURLCreateWithFileSystemPath","","",null,null],[5,"CFURLGetString","","",null,null],[5,"CFURLGetTypeID","","",null,null],[6,"CFURLRef","","",null,null],[6,"CFURLBookmarkCreationOptions","","",null,null],[6,"CFURLPathStyle","","",null,null],[17,"kCFURLPOSIXPathStyle","","",null,null],[17,"kCFURLHFSPathStyle","","",null,null],[17,"kCFURLWindowsPathStyle","","",null,null]],"paths":[[3,"CFArrayCallBacks"],[3,"CFRange"],[3,"CFDictionaryKeyCallBacks"],[3,"CFDictionaryValueCallBacks"],[3,"CFMessagePortContext"],[3,"CFRunLoopSourceContext"],[3,"CFRunLoopSourceContext1"],[3,"CFRunLoopObserverContext"],[3,"CFRunLoopTimerContext"],[3,"CFSetCallBacks"]]};
searchIndex["num_cpus"] = {"doc":"Replaces the deprecated functionality of std::os::num_cpus.","items":[[5,"get","num_cpus","Returns the number of CPUs of the current machine.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"get_physical","","Returns the number of physical cores of the current machine.\nIf not possible on the particular architecture returns same as get() which\nis the logical CPUs.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["url"] = {"doc":"rust-url is an implementation of the [URL Standard](http://url.spec.whatwg.org/)\nfor the [Rust](http://rust-lang.org/) programming language.","items":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",null,null],[3,"HostAndPort","","This mostly exists because coherence rules don’t allow us to implement\n`ToSocketAddrs for (Host&lt;S&gt;, u16)`.",null,null],[12,"host","","",0,null],[12,"port","","",0,null],[3,"SocketAddrs","","Socket addresses for an URL.",null,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is not cannot-be-base.",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically not used directly.",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",1,null],[13,"Tuple","","Consists of the URL&#39;s scheme, host and port",1,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as &#39;.&#39; dot-separated labels.\nNon-ASCII labels are encoded in punycode per IDNA.",2,null],[13,"Ipv4","","An IPv4 address.\n`Url::host_str` returns the serialization of this address,\nas four decimal integers separated by `.` dots.",2,null],[13,"Ipv6","","An IPv6 address.\n`Url::host_str` returns the serialization of that address between `[` and `]` brackets,\nin the format per [RFC 5952 *A Recommendation\nfor IPv6 Address Text Representation*](https://tools.ietf.org/html/rfc5952):\nlowercase hexadecimal with maximal `::` compression.",2,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",3,null],[13,"IdnaError","","",3,null],[13,"InvalidPort","","",3,null],[13,"InvalidIpv4Address","","",3,null],[13,"InvalidIpv6Address","","",3,null],[13,"InvalidDomainCharacter","","",3,null],[13,"RelativeUrlWithoutBase","","",3,null],[13,"RelativeUrlWithCannotBeABaseBase","","",3,null],[13,"SetHostOnCannotBeABaseUrl","","",3,null],[13,"Overflow","","",3,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",4,null],[13,"AfterScheme","","",4,null],[13,"BeforeUsername","","",4,null],[13,"AfterUsername","","",4,null],[13,"BeforePassword","","",4,null],[13,"AfterPassword","","",4,null],[13,"BeforeHost","","",4,null],[13,"AfterHost","","",4,null],[13,"BeforePort","","",4,null],[13,"AfterPort","","",4,null],[13,"BeforePath","","",4,null],[13,"AfterPath","","",4,null],[13,"BeforeQuery","","",4,null],[13,"AfterQuery","","",4,null],[13,"BeforeFragment","","",4,null],[13,"AfterFragment","","",4,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"hash","","",2,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&amp;Url`.",2,null],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",2,null],[11,"clone","","",0,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&amp;Url`.",0,null],[11,"to_socket_addrs","","",0,null],[11,"next","","",5,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,{"inputs":[],"output":{"name":"origin"}}],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple\n(as opposed to an opaque origin).",1,null],[11,"ascii_serialization","","https://html.spec.whatwg.org/multipage/#ascii-serialisation-of-an-origin",1,null],[11,"unicode_serialization","","https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin",1,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"drop","","",7,null],[11,"clear","","Remove all segments in the path, leaving the minimal `url.path() == &quot;/&quot;`.",7,null],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty,\nexcept if these was only one segment to begin with.",7,null],[11,"pop","","Remove the last segment of this URL’s path.",7,null],[11,"push","","Append the given segment at the end of this URL’s path.",7,null],[11,"extend","","Append each segment from the given iterator at the end of this URL’s path.",7,null],[11,"eq","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[11,"from","","",3,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"index","","",8,null],[11,"index","","",8,null],[11,"index","","",8,null],[11,"index","","",8,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[0,"form_urlencoded","","Parser and serializer for the [`application/x-www-form-urlencoded` syntax](\nhttp://url.spec.whatwg.org/#application/x-www-form-urlencoded),\nas used by HTML forms.",null,null],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",null,null],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of pairs of `Cow&lt;str&gt;`.",null,null],[3,"ByteSerialize","","Return value of `byte_serialize()`.",null,null],[3,"Serializer","","The [`application/x-www-form-urlencoded` serializer](\nhttps://url.spec.whatwg.org/#concept-urlencoded-serializer).",null,null],[5,"parse","","Convert a byte string in the `application/x-www-form-urlencoded` syntax\ninto a iterator of (name, value) pairs.",null,null],[5,"byte_serialize","","The [`application/x-www-form-urlencoded` byte serializer](\nhttps://url.spec.whatwg.org/#concept-urlencoded-byte-serializer).",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",9,null],[10,"finish","","",9,null],[16,"Finished","","",9,null],[11,"clone","","",10,null],[11,"next","","",10,null],[11,"into_owned","","Return a new iterator that yields pairs of `String` instead of pairs of `Cow&lt;str&gt;`.",10,null],[11,"next","","",11,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"as_mut_string","url","",13,null],[11,"finish","","",13,null],[11,"new","url::form_urlencoded","Create a new `application/x-www-form-urlencoded` serializer for the given target.",14,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded` serializer\nfor a suffix of the given target.",14,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"self"}}],[11,"clear","","Remove any existing name/value pair.",14,null],[11,"append_pair","","Serialize and append a name/value pair.",14,null],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",14,null],[11,"finish","","If this serializer was constructed with a string, take and return that string.",14,null],[0,"percent_encoding","url","",null,null],[3,"SIMPLE_ENCODE_SET","url::percent_encoding","This encode set is used for the path of cannot-be-a-base URLs.",null,null],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on &#39;/&#39;-separated path segment",null,null],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",null,null],[3,"PercentEncode","","The return type of `percent_encode()` and `utf8_percent_encode()`.",null,null],[3,"PercentDecode","","The return type of `percent_decode()`.",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",null,{"inputs":[{"name":"u8"}],"output":{"name":"str"}}],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",null,null],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,{"inputs":[{"name":"str"},{"name":"e"}],"output":{"name":"percentencode"}}],[5,"percent_decode","","Percent-decode the given bytes.",null,null],[8,"EncodeSet","","Represents a set of characters / bytes that should be percent-encoded.",null,null],[10,"contains","","Called with UTF-8 bytes rather than code points.\nShould return true for all non-ASCII bytes.",15,null],[11,"clone","","",16,null],[11,"contains","","",16,null],[11,"clone","","",17,null],[11,"contains","","",17,null],[11,"clone","","",18,null],[11,"contains","","",18,null],[11,"clone","","",19,null],[11,"contains","","",19,null],[11,"clone","","",20,null],[11,"contains","","",20,null],[11,"clone","","",21,null],[11,"next","","",21,null],[11,"size_hint","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",22,null],[11,"next","","",22,null],[11,"size_hint","","",22,null],[11,"if_any","","If the percent-decoding is different from the input, return it as a new bytes vector.",22,null],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",22,null],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",22,null],[0,"quirks","url","Getters and setters for URL components implemented per https://url.spec.whatwg.org/#api",null,null],[5,"domain_to_ascii","url::quirks","https://url.spec.whatwg.org/#dom-url-domaintoascii",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"domain_to_unicode","","https://url.spec.whatwg.org/#dom-url-domaintounicode",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"href","","Getter for https://url.spec.whatwg.org/#dom-url-href",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_href","","Setter for https://url.spec.whatwg.org/#dom-url-href",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"origin","","Getter for https://url.spec.whatwg.org/#dom-url-origin",null,{"inputs":[{"name":"url"}],"output":{"name":"string"}}],[5,"protocol","","Getter for https://url.spec.whatwg.org/#dom-url-protocol",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_protocol","","Setter for https://url.spec.whatwg.org/#dom-url-protocol",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"username","","Getter for https://url.spec.whatwg.org/#dom-url-username",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_username","","Setter for https://url.spec.whatwg.org/#dom-url-username",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"password","","Getter for https://url.spec.whatwg.org/#dom-url-password",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_password","","Setter for https://url.spec.whatwg.org/#dom-url-password",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"host","","Getter for https://url.spec.whatwg.org/#dom-url-host",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_host","","Setter for https://url.spec.whatwg.org/#dom-url-host",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"hostname","","Getter for https://url.spec.whatwg.org/#dom-url-hostname",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_hostname","","Setter for https://url.spec.whatwg.org/#dom-url-hostname",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"port","","Getter for https://url.spec.whatwg.org/#dom-url-port",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_port","","Setter for https://url.spec.whatwg.org/#dom-url-port",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[5,"pathname","","Getter for https://url.spec.whatwg.org/#dom-url-pathname",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_pathname","","Setter for https://url.spec.whatwg.org/#dom-url-pathname",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[5,"search","","Getter for https://url.spec.whatwg.org/#dom-url-search",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_search","","Setter for https://url.spec.whatwg.org/#dom-url-search",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[5,"hash","","Getter for https://url.spec.whatwg.org/#dom-url-hash",null,{"inputs":[{"name":"url"}],"output":{"name":"str"}}],[5,"set_hash","","Setter for https://url.spec.whatwg.org/#dom-url-hash",null,{"inputs":[{"name":"url"},{"name":"str"}],"output":null}],[11,"clone","url","",8,null],[11,"clone","","",23,null],[11,"base_url","","Change the base URL",23,null],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse errors.",23,null],[11,"parse","","Parse an URL string with the configuration so far.",23,null],[11,"parse","","Parse an absolute URL from a string.",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",8,null],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",8,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",8,null],[11,"into_string","","Return the serialization of this URL.",8,null],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",8,null],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the &#39;:&#39; delimiter.",8,null],[11,"has_authority","","Return whether the URL has an &#39;authority&#39;,\nwhich can contain a username, password, host, and port number.",8,null],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL,\nmeaning that parsing a relative URL string with this URL as the base will return an error.",8,null],[11,"username","","Return the username for this URL (typically the empty string)\nas a percent-encoded ASCII string.",8,null],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",8,null],[11,"has_host","","Equivalent to `url.host().is_some()`.",8,null],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",8,null],[11,"host","","Return the parsed representation of the host for this URL.\nNon-ASCII domain labels are punycode-encoded per IDNA.",8,null],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",8,null],[11,"port","","Return the port number for this URL, if any.",8,null],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",8,null],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",8,null],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string.\nFor cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with &#39;/&#39;.\nFor other URLs, this starts with a &#39;/&#39; slash\nand continues with slash-separated path segments.",8,null],[11,"path_segments","","Unless this URL is cannot-be-a-base,\nreturn an iterator of &#39;/&#39; slash-separated path segments,\neach as a percent-encoded ASCII string.",8,null],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",8,null],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return an iterator of (key, value) pairs.",8,null],[11,"fragment","","Return this URL’s fragment identifier, if any.",8,null],[11,"set_fragment","","Change this URL’s fragment identifier.",8,null],[11,"set_query","","Change this URL’s query string.",8,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs\nin `application/x-www-form-urlencoded` syntax.",8,null],[11,"set_path","","Change this URL’s path.",8,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",8,null],[11,"set_port","","Change this URL’s port number.",8,null],[11,"set_host","","Change this URL’s host.",8,null],[11,"set_ip_host","","Change this URL’s host to the given IP address.",8,null],[11,"set_password","","Change this URL’s password.",8,null],[11,"set_username","","Change this URL’s username.",8,null],[11,"set_scheme","","Change this URL’s scheme.",8,null],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",8,null],[11,"to_socket_addrs","","",8,null],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"cmp","","",8,null],[11,"partial_cmp","","",8,null],[11,"hash","","",8,null],[11,"as_ref","","",8,null],[11,"drop","","",13,null],[14,"define_encode_set","","Define a new struct\nthat implements the [`EncodeSet`](percent_encoding/trait.EncodeSet.html) trait,\nfor use in [`percent_decode()`](percent_encoding/fn.percent_encode.html)\nand related functions.",null,null]],"paths":[[3,"HostAndPort"],[4,"Origin"],[4,"Host"],[4,"ParseError"],[4,"Position"],[3,"SocketAddrs"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"Url"],[8,"Target"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"UrlQuery"],[3,"Serializer"],[8,"EncodeSet"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"],[3,"PercentDecode"],[3,"ParseOptions"]]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA\n[per the WHATWG URL Standard](https://url.spec.whatwg.org/#idna).","items":[[5,"domain_to_ascii","idna","The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"domain_to_unicode","","The [domain to Unicode](https://url.spec.whatwg.org/#concept-domain-to-unicode) algorithm.",null,null],[0,"punycode","","Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"uts46","idna","[*Unicode IDNA Compatibility Processing*\n(Unicode Technical Standard #46)](http://www.unicode.org/reports/tr46/)",null,null],[3,"Flags","idna::uts46","",null,null],[12,"use_std3_ascii_rules","","",0,null],[12,"transitional_processing","","",0,null],[12,"verify_dns_length","","",0,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",null,{"inputs":[{"name":"str"},{"name":"flags"}],"output":{"name":"result"}}],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",null,null],[11,"clone","","",0,null],[11,"fmt","","",1,null]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional Algorithm][tr9] for display of mixed\nright-to-left and left-to-right text.  It is written in safe Rust, compatible with the\ncurrent stable release.","items":[[3,"BidiInfo","unicode_bidi","Output of `process_text`",null,null],[12,"classes","","The BidiClass of the character at each byte in the text.",0,null],[12,"levels","","The directional embedding level of each byte in the text.",0,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each paragraph within the text.",0,null],[3,"ParagraphInfo","","Info about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",1,null],[12,"level","","The paragraph embedding level. http://www.unicode.org/reports/tr9/#BD4",1,null],[3,"InitialProperties","","Output of `initial_scan`",null,null],[12,"initial_classes","","The BidiClass of the character at each byte in the text.\nIf a character is multiple bytes, its class will appear multiple times in the vector.",2,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",2,null],[5,"process_text","","Determine the bidirectional embedding levels for a single paragraph.",null,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"bidiinfo"}}],[5,"is_ltr","","Even embedding levels are left-to-right.",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_rtl","","Odd levels are right-to-left.",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"reorder_line","","Re-order a line based on resolved levels.",null,null],[5,"visual_runs","","Find the level runs within a line and return them in visual order.",null,null],[5,"initial_scan","","Find the paragraphs and BidiClasses in a string of text.",null,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"initialproperties"}}],[0,"tables","","",null,null],[4,"BidiClass","unicode_bidi::tables","Represents the Unicode character property **Bidi_Class**, also known as\nthe *bidirectional character type*.",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the BidiClass of a single char.",null,{"inputs":[{"name":"char"}],"output":{"name":"bidiclass"}}],[17,"UNICODE_VERSION","","The version of [Unicode](http://www.unicode.org/)\nthat the `bidi_class` function is based on.",null,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding level.",null,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null]],"paths":[[3,"BidiInfo"],[3,"ParagraphInfo"],[3,"InitialProperties"],[4,"BidiClass"]]};
searchIndex["mime"] = {"doc":"# Mime","items":[[3,"Mime","mime","Mime, or Media Type. Encapsulates common registers types.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[12,"2","","",0,null],[4,"TopLevel","","",null,null],[13,"Star","","",1,null],[13,"Text","","",1,null],[13,"Image","","",1,null],[13,"Audio","","",1,null],[13,"Video","","",1,null],[13,"Application","","",1,null],[13,"Multipart","","",1,null],[13,"Message","","",1,null],[13,"Model","","",1,null],[13,"Ext","","",1,null],[4,"SubLevel","","",null,null],[13,"Star","","",2,null],[13,"Plain","","",2,null],[13,"Html","","",2,null],[13,"Xml","","",2,null],[13,"Javascript","","",2,null],[13,"Css","","",2,null],[13,"EventStream","","",2,null],[13,"Json","","",2,null],[13,"WwwFormUrlEncoded","","",2,null],[13,"Msgpack","","",2,null],[13,"OctetStream","","",2,null],[13,"FormData","","",2,null],[13,"Png","","",2,null],[13,"Gif","","",2,null],[13,"Bmp","","",2,null],[13,"Jpeg","","",2,null],[13,"Ext","","",2,null],[4,"Attr","","",null,null],[13,"Charset","","",3,null],[13,"Boundary","","",3,null],[13,"Q","","",3,null],[13,"Ext","","",3,null],[4,"Value","","",null,null],[13,"Utf8","","",4,null],[13,"Ext","","",4,null],[6,"Param","","",null,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"as_str","","",1,null],[11,"deref","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"hash","","",2,null],[11,"as_str","","",2,null],[11,"deref","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"fmt","","",2,null],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"hash","","",3,null],[11,"as_str","","",3,null],[11,"deref","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"from_str","","",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"hash","","",4,null],[11,"as_str","","",4,null],[11,"deref","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"fmt","","",4,null],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"get_param","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[14,"mime","","Easily create a Mime without having to import so many enums.",null,null]],"paths":[[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",16,null],[12,"sa_family","","",16,null],[12,"sa_data","","",16,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",17,null],[12,"sin6_family","","",17,null],[12,"sin6_port","","",17,null],[12,"sin6_flowinfo","","",17,null],[12,"sin6_addr","","",17,null],[12,"sin6_scope_id","","",17,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",18,null],[12,"sun_family","","",18,null],[12,"sun_path","","",18,null],[3,"passwd","","",null,null],[12,"pw_name","","",19,null],[12,"pw_passwd","","",19,null],[12,"pw_uid","","",19,null],[12,"pw_gid","","",19,null],[12,"pw_change","","",19,null],[12,"pw_class","","",19,null],[12,"pw_gecos","","",19,null],[12,"pw_dir","","",19,null],[12,"pw_shell","","",19,null],[12,"pw_expire","","",19,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",20,null],[12,"ifa_name","","",20,null],[12,"ifa_flags","","",20,null],[12,"ifa_addr","","",20,null],[12,"ifa_netmask","","",20,null],[12,"ifa_dstaddr","","",20,null],[12,"ifa_data","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"utsname","","",null,null],[12,"sysname","","",22,null],[12,"nodename","","",22,null],[12,"release","","",22,null],[12,"version","","",22,null],[12,"machine","","",22,null],[3,"msghdr","","",null,null],[12,"msg_name","","",23,null],[12,"msg_namelen","","",23,null],[12,"msg_iov","","",23,null],[12,"msg_iovlen","","",23,null],[12,"msg_control","","",23,null],[12,"msg_controllen","","",23,null],[12,"msg_flags","","",23,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",24,null],[12,"cmsg_level","","",24,null],[12,"cmsg_type","","",24,null],[3,"fsid_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",25,null],[12,"if_name","","",25,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",26,null],[12,"aio_offset","","",26,null],[12,"aio_buf","","",26,null],[12,"aio_nbytes","","",26,null],[12,"aio_reqprio","","",26,null],[12,"aio_sigevent","","",26,null],[12,"aio_lio_opcode","","",26,null],[3,"utmpx","","",null,null],[12,"ut_user","","",27,null],[12,"ut_id","","",27,null],[12,"ut_line","","",27,null],[12,"ut_pid","","",27,null],[12,"ut_type","","",27,null],[12,"ut_tv","","",27,null],[12,"ut_host","","",27,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",28,null],[12,"gl_offs","","",28,null],[12,"gl_pathv","","",28,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",29,null],[12,"ss_family","","",29,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",30,null],[12,"ai_family","","",30,null],[12,"ai_socktype","","",30,null],[12,"ai_protocol","","",30,null],[12,"ai_addrlen","","",30,null],[12,"ai_canonname","","",30,null],[12,"ai_addr","","",30,null],[12,"ai_next","","",30,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",31,null],[12,"denom","","",31,null],[3,"stat","","",null,null],[12,"st_dev","","",32,null],[12,"st_mode","","",32,null],[12,"st_nlink","","",32,null],[12,"st_ino","","",32,null],[12,"st_uid","","",32,null],[12,"st_gid","","",32,null],[12,"st_rdev","","",32,null],[12,"st_atime","","",32,null],[12,"st_atime_nsec","","",32,null],[12,"st_mtime","","",32,null],[12,"st_mtime_nsec","","",32,null],[12,"st_ctime","","",32,null],[12,"st_ctime_nsec","","",32,null],[12,"st_birthtime","","",32,null],[12,"st_birthtime_nsec","","",32,null],[12,"st_size","","",32,null],[12,"st_blocks","","",32,null],[12,"st_blksize","","",32,null],[12,"st_flags","","",32,null],[12,"st_gen","","",32,null],[12,"st_lspare","","",32,null],[12,"st_qspare","","",32,null],[3,"dirent","","",null,null],[12,"d_ino","","",33,null],[12,"d_seekoff","","",33,null],[12,"d_reclen","","",33,null],[12,"d_namlen","","",33,null],[12,"d_type","","",33,null],[12,"d_name","","",33,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",34,null],[12,"si_errno","","",34,null],[12,"si_code","","",34,null],[12,"si_pid","","",34,null],[12,"si_uid","","",34,null],[12,"si_status","","",34,null],[12,"si_addr","","",34,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",35,null],[12,"sa_mask","","",35,null],[12,"sa_flags","","",35,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",36,null],[12,"ss_size","","",36,null],[12,"ss_flags","","",36,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",37,null],[12,"fst_posmode","","",37,null],[12,"fst_offset","","",37,null],[12,"fst_length","","",37,null],[12,"fst_bytesalloc","","",37,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",38,null],[12,"ra_count","","",38,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",39,null],[12,"f_frsize","","",39,null],[12,"f_blocks","","",39,null],[12,"f_bfree","","",39,null],[12,"f_bavail","","",39,null],[12,"f_files","","",39,null],[12,"f_ffree","","",39,null],[12,"f_favail","","",39,null],[12,"f_fsid","","",39,null],[12,"f_flag","","",39,null],[12,"f_namemax","","",39,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",40,null],[12,"dli_fbase","","",40,null],[12,"dli_sname","","",40,null],[12,"dli_saddr","","",40,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",41,null],[12,"sin_family","","",41,null],[12,"sin_port","","",41,null],[12,"sin_addr","","",41,null],[12,"sin_zero","","",41,null],[3,"statfs","","",null,null],[12,"f_bsize","","",42,null],[12,"f_iosize","","",42,null],[12,"f_blocks","","",42,null],[12,"f_bfree","","",42,null],[12,"f_bavail","","",42,null],[12,"f_files","","",42,null],[12,"f_ffree","","",42,null],[12,"f_fsid","","",42,null],[12,"f_owner","","",42,null],[12,"f_type","","",42,null],[12,"f_flags","","",42,null],[12,"f_fssubtype","","",42,null],[12,"f_fstypename","","",42,null],[12,"f_mntonname","","",42,null],[12,"f_mntfromname","","",42,null],[12,"f_reserved","","",42,null],[3,"kevent","","",null,null],[12,"ident","","",43,null],[12,"filter","","",43,null],[12,"flags","","",43,null],[12,"fflags","","",43,null],[12,"data","","",43,null],[12,"udata","","",43,null],[3,"kevent64_s","","",null,null],[12,"ident","","",44,null],[12,"filter","","",44,null],[12,"flags","","",44,null],[12,"fflags","","",44,null],[12,"data","","",44,null],[12,"udata","","",44,null],[12,"ext","","",44,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",45,null],[12,"dqb_bsoftlimit","","",45,null],[12,"dqb_curbytes","","",45,null],[12,"dqb_ihardlimit","","",45,null],[12,"dqb_isoftlimit","","",45,null],[12,"dqb_curinodes","","",45,null],[12,"dqb_btime","","",45,null],[12,"dqb_itime","","",45,null],[12,"dqb_id","","",45,null],[12,"dqb_spare","","",45,null],[3,"termios","","",null,null],[12,"c_iflag","","",46,null],[12,"c_oflag","","",46,null],[12,"c_cflag","","",46,null],[12,"c_lflag","","",46,null],[12,"c_cc","","",46,null],[12,"c_ispeed","","",46,null],[12,"c_ospeed","","",46,null],[3,"flock","","",null,null],[12,"l_start","","",47,null],[12,"l_len","","",47,null],[12,"l_pid","","",47,null],[12,"l_type","","",47,null],[12,"l_whence","","",47,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",48,null],[12,"hdr_cnt","","",48,null],[12,"trailers","","",48,null],[12,"trl_cnt","","",48,null],[3,"lconv","","",null,null],[12,"decimal_point","","",49,null],[12,"thousands_sep","","",49,null],[12,"grouping","","",49,null],[12,"int_curr_symbol","","",49,null],[12,"currency_symbol","","",49,null],[12,"mon_decimal_point","","",49,null],[12,"mon_thousands_sep","","",49,null],[12,"mon_grouping","","",49,null],[12,"positive_sign","","",49,null],[12,"negative_sign","","",49,null],[12,"int_frac_digits","","",49,null],[12,"frac_digits","","",49,null],[12,"p_cs_precedes","","",49,null],[12,"p_sep_by_space","","",49,null],[12,"n_cs_precedes","","",49,null],[12,"n_sep_by_space","","",49,null],[12,"p_sign_posn","","",49,null],[12,"n_sign_posn","","",49,null],[12,"int_p_cs_precedes","","",49,null],[12,"int_n_cs_precedes","","",49,null],[12,"int_p_sep_by_space","","",49,null],[12,"int_n_sep_by_space","","",49,null],[12,"int_p_sign_posn","","",49,null],[12,"int_n_sign_posn","","",49,null],[3,"sigevent","","",null,null],[12,"sigev_notify","","",50,null],[12,"sigev_signo","","",50,null],[12,"sigev_value","","",50,null],[12,"sigev_notify_attributes","","",50,null],[3,"pthread_attr_t","","",null,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"_WSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"getpwent","","",null,null],[5,"setpwent","","",null,null],[5,"getprogname","","",null,null],[5,"setprogname","","",null,null],[5,"getloadavg","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"utmpxname","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"shm_open","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"initgroups","","",null,null],[11,"clone","","",51,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",56,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",39,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",57,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",58,null],[11,"clone","","",25,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"id_t","","",null,null],[6,"sem_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PATH_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"NCCS","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"_UTX_USERSIZE","","",null,null],[17,"_UTX_LINESIZE","","",null,null],[17,"_UTX_IDSIZE","","",null,null],[17,"_UTX_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SIGNATURE","","",null,null],[17,"SHUTDOWN_TIME","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_REAP","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_DETAIL","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NOTE_EXIT_REPARENTED","","",null,null],[17,"NOTE_EXIT_DETAIL_MASK","","",null,null],[17,"NOTE_EXIT_DECRYPTFAIL","","",null,null],[17,"NOTE_EXIT_MEMORY","","",null,null],[17,"NOTE_EXIT_CSERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_LEEWAY","","",null,null],[17,"NOTE_CRITICAL","","",null,null],[17,"NOTE_BACKGROUND","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"LOG_NETINFO","","",null,null],[17,"LOG_REMOTEAUTH","","",null,null],[17,"LOG_INSTALL","","",null,null],[17,"LOG_RAS","","",null,null],[17,"LOG_LAUNCHD","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"CTLTYPE","","",null,null],[17,"CTLTYPE_NODE","","",null,null],[17,"CTLTYPE_INT","","",null,null],[17,"CTLTYPE_STRING","","",null,null],[17,"CTLTYPE_QUAD","","",null,null],[17,"CTLTYPE_OPAQUE","","",null,null],[17,"CTLTYPE_STRUCT","","",null,null],[17,"CTLFLAG_RD","","",null,null],[17,"CTLFLAG_WR","","",null,null],[17,"CTLFLAG_RW","","",null,null],[17,"CTLFLAG_NOLOCK","","",null,null],[17,"CTLFLAG_ANYBODY","","",null,null],[17,"CTLFLAG_SECURE","","",null,null],[17,"CTLFLAG_MASKED","","",null,null],[17,"CTLFLAG_NOAUTO","","",null,null],[17,"CTLFLAG_KERN","","",null,null],[17,"CTLFLAG_LOCKED","","",null,null],[17,"CTLFLAG_OID2","","",null,null],[17,"CTL_UNSPEC","","",null,null],[17,"CTL_KERN","","",null,null],[17,"CTL_VM","","",null,null],[17,"CTL_VFS","","",null,null],[17,"CTL_NET","","",null,null],[17,"CTL_DEBUG","","",null,null],[17,"CTL_HW","","",null,null],[17,"CTL_MACHDEP","","",null,null],[17,"CTL_USER","","",null,null],[17,"CTL_MAXID","","",null,null],[17,"KERN_OSTYPE","","",null,null],[17,"KERN_OSRELEASE","","",null,null],[17,"KERN_OSREV","","",null,null],[17,"KERN_VERSION","","",null,null],[17,"KERN_MAXVNODES","","",null,null],[17,"KERN_MAXPROC","","",null,null],[17,"KERN_MAXFILES","","",null,null],[17,"KERN_ARGMAX","","",null,null],[17,"KERN_SECURELVL","","",null,null],[17,"KERN_HOSTNAME","","",null,null],[17,"KERN_HOSTID","","",null,null],[17,"KERN_CLOCKRATE","","",null,null],[17,"KERN_VNODE","","",null,null],[17,"KERN_PROC","","",null,null],[17,"KERN_FILE","","",null,null],[17,"KERN_PROF","","",null,null],[17,"KERN_POSIX1","","",null,null],[17,"KERN_NGROUPS","","",null,null],[17,"KERN_JOB_CONTROL","","",null,null],[17,"KERN_SAVED_IDS","","",null,null],[17,"KERN_BOOTTIME","","",null,null],[17,"KERN_NISDOMAINNAME","","",null,null],[17,"KERN_DOMAINNAME","","",null,null],[17,"KERN_MAXPARTITIONS","","",null,null],[17,"KERN_KDEBUG","","",null,null],[17,"KERN_UPDATEINTERVAL","","",null,null],[17,"KERN_OSRELDATE","","",null,null],[17,"KERN_NTP_PLL","","",null,null],[17,"KERN_BOOTFILE","","",null,null],[17,"KERN_MAXFILESPERPROC","","",null,null],[17,"KERN_MAXPROCPERUID","","",null,null],[17,"KERN_DUMPDEV","","",null,null],[17,"KERN_IPC","","",null,null],[17,"KERN_DUMMY","","",null,null],[17,"KERN_PS_STRINGS","","",null,null],[17,"KERN_USRSTACK32","","",null,null],[17,"KERN_LOGSIGEXIT","","",null,null],[17,"KERN_SYMFILE","","",null,null],[17,"KERN_PROCARGS","","",null,null],[17,"KERN_NETBOOT","","",null,null],[17,"KERN_SYSV","","",null,null],[17,"KERN_AFFINITY","","",null,null],[17,"KERN_TRANSLATE","","",null,null],[17,"KERN_CLASSIC","","",null,null],[17,"KERN_EXEC","","",null,null],[17,"KERN_CLASSICHANDLER","","",null,null],[17,"KERN_AIOMAX","","",null,null],[17,"KERN_AIOPROCMAX","","",null,null],[17,"KERN_AIOTHREADS","","",null,null],[17,"KERN_COREFILE","","",null,null],[17,"KERN_COREDUMP","","",null,null],[17,"KERN_SUGID_COREDUMP","","",null,null],[17,"KERN_PROCDELAYTERM","","",null,null],[17,"KERN_SHREG_PRIVATIZABLE","","",null,null],[17,"KERN_LOW_PRI_WINDOW","","",null,null],[17,"KERN_LOW_PRI_DELAY","","",null,null],[17,"KERN_POSIX","","",null,null],[17,"KERN_USRSTACK64","","",null,null],[17,"KERN_NX_PROTECTION","","",null,null],[17,"KERN_TFP","","",null,null],[17,"KERN_PROCNAME","","",null,null],[17,"KERN_THALTSTACK","","",null,null],[17,"KERN_SPECULATIVE_READS","","",null,null],[17,"KERN_OSVERSION","","",null,null],[17,"KERN_SAFEBOOT","","",null,null],[17,"KERN_RAGEVNODE","","",null,null],[17,"KERN_TTY","","",null,null],[17,"KERN_CHECKOPENEVT","","",null,null],[17,"KERN_THREADNAME","","",null,null],[17,"KERN_MAXID","","",null,null],[17,"KERN_RAGE_PROC","","",null,null],[17,"KERN_RAGE_THREAD","","",null,null],[17,"KERN_UNRAGE_PROC","","",null,null],[17,"KERN_UNRAGE_THREAD","","",null,null],[17,"KERN_OPENEVT_PROC","","",null,null],[17,"KERN_UNOPENEVT_PROC","","",null,null],[17,"KERN_TFP_POLICY","","",null,null],[17,"KERN_TFP_POLICY_DENY","","",null,null],[17,"KERN_TFP_POLICY_DEFAULT","","",null,null],[17,"KERN_KDEFLAGS","","",null,null],[17,"KERN_KDDFLAGS","","",null,null],[17,"KERN_KDENABLE","","",null,null],[17,"KERN_KDSETBUF","","",null,null],[17,"KERN_KDGETBUF","","",null,null],[17,"KERN_KDSETUP","","",null,null],[17,"KERN_KDREMOVE","","",null,null],[17,"KERN_KDSETREG","","",null,null],[17,"KERN_KDGETREG","","",null,null],[17,"KERN_KDREADTR","","",null,null],[17,"KERN_KDPIDTR","","",null,null],[17,"KERN_KDTHRMAP","","",null,null],[17,"KERN_KDPIDEX","","",null,null],[17,"KERN_KDSETRTCDEC","","",null,null],[17,"KERN_KDGETENTROPY","","",null,null],[17,"KERN_KDWRITETR","","",null,null],[17,"KERN_KDWRITEMAP","","",null,null],[17,"KERN_KDENABLE_BG_TRACE","","",null,null],[17,"KERN_KDDISABLE_BG_TRACE","","",null,null],[17,"KERN_KDREADCURTHRMAP","","",null,null],[17,"KERN_KDSET_TYPEFILTER","","",null,null],[17,"KERN_KDBUFWAIT","","",null,null],[17,"KERN_KDCPUMAP","","",null,null],[17,"KERN_PROC_ALL","","",null,null],[17,"KERN_PROC_PID","","",null,null],[17,"KERN_PROC_PGRP","","",null,null],[17,"KERN_PROC_SESSION","","",null,null],[17,"KERN_PROC_TTY","","",null,null],[17,"KERN_PROC_UID","","",null,null],[17,"KERN_PROC_RUID","","",null,null],[17,"KERN_PROC_LCID","","",null,null],[17,"KIPC_MAXSOCKBUF","","",null,null],[17,"KIPC_SOCKBUF_WASTE","","",null,null],[17,"KIPC_SOMAXCONN","","",null,null],[17,"KIPC_MAX_LINKHDR","","",null,null],[17,"KIPC_MAX_PROTOHDR","","",null,null],[17,"KIPC_MAX_HDR","","",null,null],[17,"KIPC_MAX_DATALEN","","",null,null],[17,"KIPC_MBSTAT","","",null,null],[17,"KIPC_NMBCLUSTERS","","",null,null],[17,"KIPC_SOQLIMITCOMPAT","","",null,null],[17,"VM_METER","","",null,null],[17,"VM_LOADAVG","","",null,null],[17,"VM_MACHFACTOR","","",null,null],[17,"VM_SWAPUSAGE","","",null,null],[17,"VM_MAXID","","",null,null],[17,"HW_MACHINE","","",null,null],[17,"HW_MODEL","","",null,null],[17,"HW_NCPU","","",null,null],[17,"HW_BYTEORDER","","",null,null],[17,"HW_PHYSMEM","","",null,null],[17,"HW_USERMEM","","",null,null],[17,"HW_PAGESIZE","","",null,null],[17,"HW_DISKNAMES","","",null,null],[17,"HW_DISKSTATS","","",null,null],[17,"HW_EPOCH","","",null,null],[17,"HW_FLOATINGPT","","",null,null],[17,"HW_MACHINE_ARCH","","",null,null],[17,"HW_VECTORUNIT","","",null,null],[17,"HW_BUS_FREQ","","",null,null],[17,"HW_CPU_FREQ","","",null,null],[17,"HW_CACHELINE","","",null,null],[17,"HW_L1ICACHESIZE","","",null,null],[17,"HW_L1DCACHESIZE","","",null,null],[17,"HW_L2SETTINGS","","",null,null],[17,"HW_L2CACHESIZE","","",null,null],[17,"HW_L3SETTINGS","","",null,null],[17,"HW_L3CACHESIZE","","",null,null],[17,"HW_TB_FREQ","","",null,null],[17,"HW_MEMSIZE","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"HW_MAXID","","",null,null],[17,"USER_CS_PATH","","",null,null],[17,"USER_BC_BASE_MAX","","",null,null],[17,"USER_BC_DIM_MAX","","",null,null],[17,"USER_BC_SCALE_MAX","","",null,null],[17,"USER_BC_STRING_MAX","","",null,null],[17,"USER_COLL_WEIGHTS_MAX","","",null,null],[17,"USER_EXPR_NEST_MAX","","",null,null],[17,"USER_LINE_MAX","","",null,null],[17,"USER_RE_DUP_MAX","","",null,null],[17,"USER_POSIX2_VERSION","","",null,null],[17,"USER_POSIX2_C_BIND","","",null,null],[17,"USER_POSIX2_C_DEV","","",null,null],[17,"USER_POSIX2_CHAR_TERM","","",null,null],[17,"USER_POSIX2_FORT_DEV","","",null,null],[17,"USER_POSIX2_FORT_RUN","","",null,null],[17,"USER_POSIX2_LOCALEDEF","","",null,null],[17,"USER_POSIX2_SW_DEV","","",null,null],[17,"USER_POSIX2_UPE","","",null,null],[17,"USER_STREAM_MAX","","",null,null],[17,"USER_TZNAME_MAX","","",null,null],[17,"USER_MAXID","","",null,null],[17,"CTL_DEBUG_NAME","","",null,null],[17,"CTL_DEBUG_VALUE","","",null,null],[17,"CTL_DEBUG_MAXID","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"PRIO_DARWIN_THREAD","","",null,null],[17,"PRIO_DARWIN_PROCESS","","",null,null],[17,"PRIO_DARWIN_BG","","",null,null],[17,"PRIO_DARWIN_NONUI","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"AIO_LISTIO_MAX","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_CONDATTR_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"utsname"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"aiocb"],[3,"utmpx"],[3,"glob_t"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"dirent"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"statfs"],[3,"kevent"],[3,"kevent64_s"],[3,"dqblk"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"sigevent"],[3,"pthread_attr_t"],[3,"pthread_mutex_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlock_t"],[3,"fd_set"],[3,"fsid_t"]]};
searchIndex["typeable"] = {"doc":"Exposes `Typeable`, which exposes the `get_type` method, which gives\nthe `TypeId` of any &#39;static type.","items":[[8,"Typeable","typeable","Universal mixin trait for adding a `get_type` method.",null,null],[11,"get_type","","Get the `TypeId` of this object.",0,null]],"paths":[[8,"Typeable"]]};
searchIndex["matches"] = {"doc":"","items":[[14,"matches","matches","",null,null],[14,"_matches_tt_as_expr_hack","","Work around &quot;error: unexpected token: `an interpolated tt`&quot;, whatever that means.",null,null],[14,"assert_matches","","",null,null],[14,"debug_assert_matches","","",null,null]],"paths":[]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities\nas described in\n[Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/).","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition&#39;s characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition&#39;s characters.",null,null],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for character.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"compose","","Compose two characters into a single character, if possible.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"option"}}],[5,"canonical_combining_class","","",null,{"inputs":[{"name":"char"}],"output":{"name":"u8"}}],[5,"is_combining_mark","","Return whether the given character is a combining mark (`General_Category=Mark`)",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[17,"UNICODE_VERSION","unicode_normalization","The version of [Unicode](http://www.unicode.org/)\nthat this version of unicode-normalization is based on.",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode normalizations\nas described in\n[Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/).",null,null],[10,"nfd","","Returns an iterator over the string in Unicode Normalization Form D\n(canonical decomposition).",2,null],[10,"nfkd","","Returns an iterator over the string in Unicode Normalization Form KD\n(compatibility decomposition).",2,null],[10,"nfc","","An Iterator over the string in Unicode Normalization Form C\n(canonical decomposition followed by canonical composition).",2,null],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form KC\n(compatibility decomposition followed by canonical composition).",2,null]],"paths":[[3,"Decompositions"],[3,"Recompositions"],[8,"UnicodeNormalization"]]};
searchIndex["traitobject"] = {"doc":"# traitobject","items":[[5,"data","traitobject","Get the data pointer from this trait object.",null,null],[5,"data_mut","","Get the data pointer from this trait object, mutably.",null,null]],"paths":[]};
searchIndex["dtoa"] = {"doc":"","items":[[5,"write","dtoa","",null,{"inputs":[{"name":"w"},{"name":"v"}],"output":{"name":"result"}}],[8,"Floating","","",null,null],[10,"write","","",0,null],[14,"diyfp","","",null,null],[14,"dtoa","","",null,null]],"paths":[[8,"Floating"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",5,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",5,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",6,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",7,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",8,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",9,null],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",11,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",11,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",11,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",11,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",11,null],[10,"floor","","Returns the largest integer less than or equal to a number.",11,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",11,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",11,null],[10,"trunc","","Return the integer part of a number.",11,null],[10,"fract","","Returns the fractional part of a number.",11,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",11,null],[10,"signum","","Returns a number that represents the sign of `self`.",11,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",11,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",11,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",11,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",11,null],[10,"powi","","Raise a number to an integer power.",11,null],[10,"powf","","Raise a number to a floating point power.",11,null],[10,"sqrt","","Take the square root of a number.",11,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",11,null],[10,"exp2","","Returns `2^(self)`.",11,null],[10,"ln","","Returns the natural logarithm of the number.",11,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",11,null],[10,"log2","","Returns the base 2 logarithm of the number.",11,null],[10,"log10","","Returns the base 10 logarithm of the number.",11,null],[11,"to_degrees","","Converts radians to degrees.",11,null],[11,"to_radians","","Converts degrees to radians.",11,null],[10,"max","","Returns the maximum of the two numbers.",11,null],[10,"min","","Returns the minimum of the two numbers.",11,null],[10,"abs_sub","","The positive difference of two numbers.",11,null],[10,"cbrt","","Take the cubic root of a number.",11,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",11,null],[10,"sin","","Computes the sine of a number (in radians).",11,null],[10,"cos","","Computes the cosine of a number (in radians).",11,null],[10,"tan","","Computes the tangent of a number (in radians).",11,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",11,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",11,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",11,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",11,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",11,null],[10,"sinh","","Hyperbolic sine function.",11,null],[10,"cosh","","Hyperbolic cosine function.",11,null],[10,"tanh","","Hyperbolic tangent function.",11,null],[10,"asinh","","Inverse hyperbolic sine function.",11,null],[10,"acosh","","Inverse hyperbolic cosine function.",11,null],[10,"atanh","","Inverse hyperbolic tangent function.",11,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",11,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",12,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",16,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",16,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",16,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",16,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",16,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",16,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",16,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",16,null],[10,"swap_bytes","","Reverses the byte order of the integer.",16,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",16,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",16,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",16,null],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",17,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",17,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"fmt","","",0,null]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["language_tags"] = {"doc":"Language tags can be used identify human languages, scripts e.g. Latin script, countries and\nother regions.","items":[[3,"LanguageTag","language_tags","A language tag as described in [BCP47](http://tools.ietf.org/html/bcp47).",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all\nother aspects such as script, region or spefic invariants.",0,null],[12,"extlangs","","Extended language subtags are used to identify certain specially\nselected languages that, for various historical and compatibility\nreasons, are closely identified with or tagged using an existing\nprimary language subtag.",0,null],[12,"script","","Script subtags are used to indicate the script or writing system\nvariations that distinguish the written forms of a language or its\ndialects.",0,null],[12,"region","","Region subtags are used to indicate linguistic variations associated\nwith or appropriate to a specific country, territory, or region.\nTypically, a region subtag is used to indicate variations such as\nregional dialects or usage, or region-specific spelling conventions.\nIt can also be used to indicate that content is expressed in a way\nthat is appropriate for use throughout a region, for instance,\nSpanish content tailored to be useful throughout Latin America.",0,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized\nvariations that define a language or its dialects that are not\ncovered by other available subtags.",0,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in\nvarious applications.  They are intended to identify information that\nis commonly used in association with languages or language tags but\nthat is not part of language identification.",0,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language\nthat are important in a given context by private agreement.",0,null],[4,"Error","","Defines an Error type for langtags.",null,null],[13,"DuplicateExtension","","The same extension subtag is only allowed once in a tag before the private use part.",1,null],[13,"EmptyExtension","","If an extension subtag is present, it must not be empty.",1,null],[13,"EmptyPrivateUse","","If the `x` subtag is present, it must not be empty.",1,null],[13,"ForbiddenChar","","The langtag contains a char that is not A-Z, a-z, 0-9 or the dash.",1,null],[13,"InvalidSubtag","","A subtag fails to parse, it does not match any other subtags.",1,null],[13,"InvalidLanguage","","The given language subtag is invalid.",1,null],[13,"SubtagTooLong","","A subtag may be eight characters in length at maximum.",1,null],[13,"TooManyExtlangs","","At maximum three extlangs are allowed, but zero to one extlangs are preferred.",1,null],[6,"Result","","Result type used for this library.",null,null],[17,"GRANDFATHERED","","Contains all grandfathered tags.",null,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"languagetag"}}],[11,"clone","","",0,null],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used\nas a normal language tag. None fields in the language range are ignored. If the language\ntag has more extlangs than the range these extlangs are ignored. Matches are\ncase-insensitive. `*` in language ranges are represented using `None` values. The language\nrange `*` that matches language tags is created by the default language tag:\n`let wildcard: LanguageTag = Default::default();.`",0,null],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,null],[11,"canonicalize","","Returns the canonical version of the language tag.",0,null],[11,"eq","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[14,"langtag","","Utility for creating simple language tags.",null,null]],"paths":[[3,"LanguageTag"],[4,"Error"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
searchIndex["unicase"] = {"doc":"# Case","items":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",null,null],[12,"0","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"as_ref","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"into","","",0,null],[11,"into","","",0,null]],"paths":[[3,"UniCase"]]};
searchIndex["httparse"] = {"doc":"# httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",null,null],[3,"Request","","A parsed Request.",null,null],[12,"method","","The request method, such as `GET`.",0,null],[12,"path","","The request path, such as `/about-us`.",0,null],[12,"version","","The request version, such as `HTTP/1.1`.",0,null],[12,"headers","","The request headers.",0,null],[3,"Response","","A parsed Response.",null,null],[12,"version","","The response version, such as `HTTP/1.1`.",1,null],[12,"code","","The response code, such as `200`.",1,null],[12,"reason","","The response reason-phrase, such as `OK`.",1,null],[12,"headers","","The response headers.",1,null],[3,"Header","","Represents a parsed header.",null,null],[12,"name","","The name portion of a header.",2,null],[12,"value","","The value portion of a header.",2,null],[4,"Error","","An error in parsing.",null,null],[13,"HeaderName","","Invalid byte in header name.",3,null],[13,"HeaderValue","","Invalid byte in header value.",3,null],[13,"NewLine","","Invalid byte in new line.",3,null],[13,"Status","","Invalid byte in Response status.",3,null],[13,"Token","","Invalid byte where token is required.",3,null],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,null],[13,"Version","","Invalid byte in HTTP version.",3,null],[4,"Status","","The result of a successful parse pass.",null,null],[13,"Complete","","The completed result.",4,null],[13,"Partial","","A partial result.",4,null],[5,"parse_headers","","Parse a buffer of bytes as headers.",null,null],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",null,null],[6,"Result","","A Result of any parsing action.",null,null],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array to pass in for\nparsing.",null,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"is_complete","","Convenience method to check if status is complete.",4,null],[11,"is_partial","","Convenience method to check if status is partial.",4,null],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if the status is\n`Partial`.",4,null],[11,"new","","Creates a new Request, using a slice of headers you allocate.",0,null],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,null],[11,"new","","Creates a new `Response` using a slice of `Header`s you have allocated.",1,null],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,null],[10,"log","","Logs the `LogRecord`.",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,null],[11,"args","","The message body.",3,null],[11,"metadata","","Metadata about the log directive.",3,null],[11,"location","","The location of the log directive.",3,null],[11,"level","","The verbosity level of the message.",3,null],[11,"target","","The name of the target of the directive.",3,null],[11,"level","","The verbosity level of the message.",4,null],[11,"target","","The name of the target of the directive.",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"module_path","","The module path of the message.",5,null],[11,"file","","The source file containing the message.",5,null],[11,"line","","The line containing the message.",5,null],[11,"fmt","","",6,null],[11,"get","","Gets the current maximum log level filter.",6,null],[11,"set","","Sets the maximum log level.",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"description","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["itoa"] = {"doc":"","items":[[5,"write","itoa","",null,{"inputs":[{"name":"w"},{"name":"v"}],"output":{"name":"result"}}],[8,"Integer","","",null,null],[10,"write","","",0,null]],"paths":[[8,"Integer"]]};
initSearch(searchIndex);
